{"ast":null,"code":"import _regeneratorRuntime from \"/Users/ericli/Desktop/pill2/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/ericli/Desktop/pill2/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { sleep } from \"./utils/sleep\";\nimport { WaiterState } from \"./waiter\";\nvar exponentialBackoffWithJitter = function exponentialBackoffWithJitter(minDelay, maxDelay, attemptCeiling, attempt) {\n  if (attempt > attemptCeiling) return maxDelay;\n  var delay = minDelay * Math.pow(2, attempt - 1);\n  return randomInRange(minDelay, delay);\n};\nvar randomInRange = function randomInRange(min, max) {\n  return min + Math.random() * (max - min);\n};\nexport var runPolling = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(_ref, input, acceptorChecks) {\n    var minDelay, maxDelay, maxWaitTime, abortController, client, abortSignal, _yield$acceptorChecks, state, reason, currentAttempt, waitUntil, attemptCeiling, _abortController$sign, delay, _yield$acceptorChecks2, _state, _reason;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          minDelay = _ref.minDelay, maxDelay = _ref.maxDelay, maxWaitTime = _ref.maxWaitTime, abortController = _ref.abortController, client = _ref.client, abortSignal = _ref.abortSignal;\n          _context.next = 3;\n          return acceptorChecks(client, input);\n        case 3:\n          _yield$acceptorChecks = _context.sent;\n          state = _yield$acceptorChecks.state;\n          reason = _yield$acceptorChecks.reason;\n          if (!(state !== WaiterState.RETRY)) {\n            _context.next = 8;\n            break;\n          }\n          return _context.abrupt(\"return\", {\n            state: state,\n            reason: reason\n          });\n        case 8:\n          currentAttempt = 1;\n          waitUntil = Date.now() + maxWaitTime * 1000;\n          attemptCeiling = Math.log(maxDelay / minDelay) / Math.log(2) + 1;\n        case 11:\n          if (!true) {\n            _context.next = 29;\n            break;\n          }\n          if (!(abortController !== null && abortController !== void 0 && (_abortController$sign = abortController.signal) !== null && _abortController$sign !== void 0 && _abortController$sign.aborted || abortSignal !== null && abortSignal !== void 0 && abortSignal.aborted)) {\n            _context.next = 14;\n            break;\n          }\n          return _context.abrupt(\"return\", {\n            state: WaiterState.ABORTED\n          });\n        case 14:\n          delay = exponentialBackoffWithJitter(minDelay, maxDelay, attemptCeiling, currentAttempt);\n          if (!(Date.now() + delay * 1000 > waitUntil)) {\n            _context.next = 17;\n            break;\n          }\n          return _context.abrupt(\"return\", {\n            state: WaiterState.TIMEOUT\n          });\n        case 17:\n          _context.next = 19;\n          return sleep(delay);\n        case 19:\n          _context.next = 21;\n          return acceptorChecks(client, input);\n        case 21:\n          _yield$acceptorChecks2 = _context.sent;\n          _state = _yield$acceptorChecks2.state;\n          _reason = _yield$acceptorChecks2.reason;\n          if (!(_state !== WaiterState.RETRY)) {\n            _context.next = 26;\n            break;\n          }\n          return _context.abrupt(\"return\", {\n            state: _state,\n            reason: _reason\n          });\n        case 26:\n          currentAttempt += 1;\n          _context.next = 11;\n          break;\n        case 29:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  }));\n  return function runPolling(_x, _x2, _x3) {\n    return _ref2.apply(this, arguments);\n  };\n}();","map":{"version":3,"names":["sleep","WaiterState","exponentialBackoffWithJitter","minDelay","maxDelay","attemptCeiling","attempt","delay","Math","pow","randomInRange","min","max","random","runPolling","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_ref","input","acceptorChecks","maxWaitTime","abortController","client","abortSignal","_yield$acceptorChecks","state","reason","currentAttempt","waitUntil","_abortController$sign","_yield$acceptorChecks2","_state","_reason","wrap","_callee$","_context","prev","next","sent","RETRY","abrupt","Date","now","log","signal","aborted","ABORTED","TIMEOUT","stop","_x","_x2","_x3","apply","arguments"],"sources":["/Users/ericli/Desktop/pill2/node_modules/@aws-sdk/client-s3/node_modules/@aws-sdk/util-waiter/dist-es/poller.js"],"sourcesContent":["import { sleep } from \"./utils/sleep\";\nimport { WaiterState } from \"./waiter\";\nconst exponentialBackoffWithJitter = (minDelay, maxDelay, attemptCeiling, attempt) => {\n    if (attempt > attemptCeiling)\n        return maxDelay;\n    const delay = minDelay * 2 ** (attempt - 1);\n    return randomInRange(minDelay, delay);\n};\nconst randomInRange = (min, max) => min + Math.random() * (max - min);\nexport const runPolling = async ({ minDelay, maxDelay, maxWaitTime, abortController, client, abortSignal }, input, acceptorChecks) => {\n    const { state, reason } = await acceptorChecks(client, input);\n    if (state !== WaiterState.RETRY) {\n        return { state, reason };\n    }\n    let currentAttempt = 1;\n    const waitUntil = Date.now() + maxWaitTime * 1000;\n    const attemptCeiling = Math.log(maxDelay / minDelay) / Math.log(2) + 1;\n    while (true) {\n        if (abortController?.signal?.aborted || abortSignal?.aborted) {\n            return { state: WaiterState.ABORTED };\n        }\n        const delay = exponentialBackoffWithJitter(minDelay, maxDelay, attemptCeiling, currentAttempt);\n        if (Date.now() + delay * 1000 > waitUntil) {\n            return { state: WaiterState.TIMEOUT };\n        }\n        await sleep(delay);\n        const { state, reason } = await acceptorChecks(client, input);\n        if (state !== WaiterState.RETRY) {\n            return { state, reason };\n        }\n        currentAttempt += 1;\n    }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}