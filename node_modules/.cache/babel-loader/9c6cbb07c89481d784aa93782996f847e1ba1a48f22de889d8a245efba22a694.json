{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { name, version } from \"./package.json\";\nimport { Sha256 } from \"@aws-crypto/sha256-browser\";\nimport { FetchHttpHandler, streamCollector } from \"@aws-sdk/fetch-http-handler\";\nimport { invalidFunction } from \"@aws-sdk/invalid-dependency\";\nimport { DEFAULT_MAX_ATTEMPTS } from \"@aws-sdk/middleware-retry\";\nimport { parseUrl } from \"@aws-sdk/url-parser-browser\";\nimport { fromBase64, toBase64 } from \"@aws-sdk/util-base64-browser\";\nimport { calculateBodyLength } from \"@aws-sdk/util-body-length-browser\";\nimport { defaultUserAgent } from \"@aws-sdk/util-user-agent-browser\";\nimport { fromUtf8, toUtf8 } from \"@aws-sdk/util-utf8-browser\";\nimport { ClientSharedValues } from \"./runtimeConfig.shared\";\nexport var ClientDefaultValues = __assign(__assign({}, ClientSharedValues), {\n  runtime: \"browser\",\n  base64Decoder: fromBase64,\n  base64Encoder: toBase64,\n  bodyLengthChecker: calculateBodyLength,\n  credentialDefaultProvider: function () {},\n  defaultUserAgent: defaultUserAgent(name, version),\n  maxAttempts: DEFAULT_MAX_ATTEMPTS,\n  region: invalidFunction(\"Region is missing\"),\n  requestHandler: new FetchHttpHandler(),\n  sha256: Sha256,\n  streamCollector: streamCollector,\n  urlParser: parseUrl,\n  utf8Decoder: fromUtf8,\n  utf8Encoder: toUtf8\n});","map":{"version":3,"names":["name","version","Sha256","FetchHttpHandler","streamCollector","invalidFunction","DEFAULT_MAX_ATTEMPTS","parseUrl","fromBase64","toBase64","calculateBodyLength","defaultUserAgent","fromUtf8","toUtf8","ClientSharedValues","ClientDefaultValues","__assign","runtime","base64Decoder","base64Encoder","bodyLengthChecker","credentialDefaultProvider","maxAttempts","region","requestHandler","sha256","urlParser","utf8Decoder","utf8Encoder"],"sources":["/Users/ericli/node_modules/@aws-amplify/analytics/node_modules/@aws-sdk/client-cognito-identity/runtimeConfig.browser.ts"],"sourcesContent":["import { name, version } from \"./package.json\";\nimport { Sha256 } from \"@aws-crypto/sha256-browser\";\nimport { FetchHttpHandler, streamCollector } from \"@aws-sdk/fetch-http-handler\";\nimport { invalidFunction } from \"@aws-sdk/invalid-dependency\";\nimport { DEFAULT_MAX_ATTEMPTS } from \"@aws-sdk/middleware-retry\";\nimport { parseUrl } from \"@aws-sdk/url-parser-browser\";\nimport { fromBase64, toBase64 } from \"@aws-sdk/util-base64-browser\";\nimport { calculateBodyLength } from \"@aws-sdk/util-body-length-browser\";\nimport { defaultUserAgent } from \"@aws-sdk/util-user-agent-browser\";\nimport { fromUtf8, toUtf8 } from \"@aws-sdk/util-utf8-browser\";\nimport { ClientDefaults } from \"./CognitoIdentityClient\";\nimport { ClientSharedValues } from \"./runtimeConfig.shared\";\n\nexport const ClientDefaultValues: Required<ClientDefaults> = {\n  ...ClientSharedValues,\n  runtime: \"browser\",\n  base64Decoder: fromBase64,\n  base64Encoder: toBase64,\n  bodyLengthChecker: calculateBodyLength,\n  credentialDefaultProvider: (() => {}) as any,\n  defaultUserAgent: defaultUserAgent(name, version),\n  maxAttempts: DEFAULT_MAX_ATTEMPTS,\n  region: invalidFunction(\"Region is missing\") as any,\n  requestHandler: new FetchHttpHandler(),\n  sha256: Sha256,\n  streamCollector,\n  urlParser: parseUrl,\n  utf8Decoder: fromUtf8,\n  utf8Encoder: toUtf8,\n};\n"],"mappings":";AAAA,SAASA,IAAI,EAAEC,OAAO,QAAQ,gBAAgB;AAC9C,SAASC,MAAM,QAAQ,4BAA4B;AACnD,SAASC,gBAAgB,EAAEC,eAAe,QAAQ,6BAA6B;AAC/E,SAASC,eAAe,QAAQ,6BAA6B;AAC7D,SAASC,oBAAoB,QAAQ,2BAA2B;AAChE,SAASC,QAAQ,QAAQ,6BAA6B;AACtD,SAASC,UAAU,EAAEC,QAAQ,QAAQ,8BAA8B;AACnE,SAASC,mBAAmB,QAAQ,mCAAmC;AACvE,SAASC,gBAAgB,QAAQ,kCAAkC;AACnE,SAASC,QAAQ,EAAEC,MAAM,QAAQ,4BAA4B;AAE7D,SAASC,kBAAkB,QAAQ,wBAAwB;AAE3D,OAAO,IAAMC,mBAAmB,GAAAC,QAAA,CAAAA,QAAA,KAC3BF,kBAAkB;EACrBG,OAAO,EAAE,SAAS;EAClBC,aAAa,EAAEV,UAAU;EACzBW,aAAa,EAAEV,QAAQ;EACvBW,iBAAiB,EAAEV,mBAAmB;EACtCW,yBAAyB,EAAG,SAAAA,CAAA,GAAO,CAAS;EAC5CV,gBAAgB,EAAEA,gBAAgB,CAACX,IAAI,EAAEC,OAAO,CAAC;EACjDqB,WAAW,EAAEhB,oBAAoB;EACjCiB,MAAM,EAAElB,eAAe,CAAC,mBAAmB,CAAQ;EACnDmB,cAAc,EAAE,IAAIrB,gBAAgB,EAAE;EACtCsB,MAAM,EAAEvB,MAAM;EACdE,eAAe,EAAAA,eAAA;EACfsB,SAAS,EAAEnB,QAAQ;EACnBoB,WAAW,EAAEf,QAAQ;EACrBgB,WAAW,EAAEf;AAAM,EACpB"},"metadata":{},"sourceType":"module","externalDependencies":[]}