{"ast":null,"code":"import _slicedToArray from \"/Users/ericli/Desktop/pill2/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _regeneratorRuntime from \"/Users/ericli/Desktop/pill2/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/ericli/Desktop/pill2/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { resolveParamsForS3 } from \"../service-customizations\";\nimport { createConfigValueProvider } from \"./createConfigValueProvider\";\nexport var getEndpointFromInstructions = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(commandInput, instructionsSupplier, clientConfig, context) {\n    var endpointParams, endpoint;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return resolveParams(commandInput, instructionsSupplier, clientConfig);\n        case 2:\n          endpointParams = _context.sent;\n          if (!(typeof clientConfig.endpointProvider !== \"function\")) {\n            _context.next = 5;\n            break;\n          }\n          throw new Error(\"config.endpointProvider is not set.\");\n        case 5:\n          endpoint = clientConfig.endpointProvider(endpointParams, context);\n          return _context.abrupt(\"return\", endpoint);\n        case 7:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  }));\n  return function getEndpointFromInstructions(_x, _x2, _x3, _x4) {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport var resolveParams = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(commandInput, instructionsSupplier, clientConfig) {\n    var _instructionsSupplier;\n    var endpointParams, instructions, _i, _Object$entries, _Object$entries$_i, name, instruction;\n    return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n      while (1) switch (_context2.prev = _context2.next) {\n        case 0:\n          endpointParams = {};\n          instructions = (instructionsSupplier === null || instructionsSupplier === void 0 ? void 0 : (_instructionsSupplier = instructionsSupplier.getEndpointParameterInstructions) === null || _instructionsSupplier === void 0 ? void 0 : _instructionsSupplier.call(instructionsSupplier)) || {};\n          _i = 0, _Object$entries = Object.entries(instructions);\n        case 3:\n          if (!(_i < _Object$entries.length)) {\n            _context2.next = 20;\n            break;\n          }\n          _Object$entries$_i = _slicedToArray(_Object$entries[_i], 2), name = _Object$entries$_i[0], instruction = _Object$entries$_i[1];\n          _context2.t0 = instruction.type;\n          _context2.next = _context2.t0 === \"staticContextParams\" ? 8 : _context2.t0 === \"contextParams\" ? 10 : _context2.t0 === \"clientContextParams\" ? 12 : _context2.t0 === \"builtInParams\" ? 12 : 16;\n          break;\n        case 8:\n          endpointParams[name] = instruction.value;\n          return _context2.abrupt(\"break\", 17);\n        case 10:\n          endpointParams[name] = commandInput[instruction.name];\n          return _context2.abrupt(\"break\", 17);\n        case 12:\n          _context2.next = 14;\n          return createConfigValueProvider(instruction.name, name, clientConfig)();\n        case 14:\n          endpointParams[name] = _context2.sent;\n          return _context2.abrupt(\"break\", 17);\n        case 16:\n          throw new Error(\"Unrecognized endpoint parameter instruction: \" + JSON.stringify(instruction));\n        case 17:\n          _i++;\n          _context2.next = 3;\n          break;\n        case 20:\n          if (Object.keys(instructions).length === 0) {\n            Object.assign(endpointParams, clientConfig);\n          }\n          if (!(String(clientConfig.serviceId).toLowerCase() === \"s3\")) {\n            _context2.next = 24;\n            break;\n          }\n          _context2.next = 24;\n          return resolveParamsForS3(endpointParams);\n        case 24:\n          return _context2.abrupt(\"return\", endpointParams);\n        case 25:\n        case \"end\":\n          return _context2.stop();\n      }\n    }, _callee2);\n  }));\n  return function resolveParams(_x5, _x6, _x7) {\n    return _ref2.apply(this, arguments);\n  };\n}();","map":{"version":3,"names":["resolveParamsForS3","createConfigValueProvider","getEndpointFromInstructions","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","commandInput","instructionsSupplier","clientConfig","context","endpointParams","endpoint","wrap","_callee$","_context","prev","next","resolveParams","sent","endpointProvider","Error","abrupt","stop","_x","_x2","_x3","_x4","apply","arguments","_ref2","_callee2","_instructionsSupplier","instructions","_i","_Object$entries","_Object$entries$_i","name","instruction","_callee2$","_context2","getEndpointParameterInstructions","call","Object","entries","length","_slicedToArray","t0","type","value","JSON","stringify","keys","assign","String","serviceId","toLowerCase","_x5","_x6","_x7"],"sources":["/Users/ericli/Desktop/pill2/node_modules/@aws-sdk/middleware-endpoint/dist-es/adaptors/getEndpointFromInstructions.js"],"sourcesContent":["import { resolveParamsForS3 } from \"../service-customizations\";\nimport { createConfigValueProvider } from \"./createConfigValueProvider\";\nexport const getEndpointFromInstructions = async (commandInput, instructionsSupplier, clientConfig, context) => {\n    const endpointParams = await resolveParams(commandInput, instructionsSupplier, clientConfig);\n    if (typeof clientConfig.endpointProvider !== \"function\") {\n        throw new Error(\"config.endpointProvider is not set.\");\n    }\n    const endpoint = clientConfig.endpointProvider(endpointParams, context);\n    return endpoint;\n};\nexport const resolveParams = async (commandInput, instructionsSupplier, clientConfig) => {\n    const endpointParams = {};\n    const instructions = instructionsSupplier?.getEndpointParameterInstructions?.() || {};\n    for (const [name, instruction] of Object.entries(instructions)) {\n        switch (instruction.type) {\n            case \"staticContextParams\":\n                endpointParams[name] = instruction.value;\n                break;\n            case \"contextParams\":\n                endpointParams[name] = commandInput[instruction.name];\n                break;\n            case \"clientContextParams\":\n            case \"builtInParams\":\n                endpointParams[name] = await createConfigValueProvider(instruction.name, name, clientConfig)();\n                break;\n            default:\n                throw new Error(\"Unrecognized endpoint parameter instruction: \" + JSON.stringify(instruction));\n        }\n    }\n    if (Object.keys(instructions).length === 0) {\n        Object.assign(endpointParams, clientConfig);\n    }\n    if (String(clientConfig.serviceId).toLowerCase() === \"s3\") {\n        await resolveParamsForS3(endpointParams);\n    }\n    return endpointParams;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}