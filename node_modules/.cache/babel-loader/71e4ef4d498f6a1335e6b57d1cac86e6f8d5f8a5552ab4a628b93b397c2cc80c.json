{"ast":null,"code":"import { __assign, __awaiter, __generator, __read } from \"tslib\";\nimport { HttpRequest as __HttpRequest } from \"@aws-sdk/protocol-http\";\nexport var serializeAws_json1_1AddTagsToStreamCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"Content-Type\": \"application/x-amz-json-1.1\",\n        \"X-Amz-Target\": \"Kinesis_20131202.AddTagsToStream\"\n      };\n      body = JSON.stringify(serializeAws_json1_1AddTagsToStreamInput(input, context));\n      return [2 /*return*/, buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1CreateStreamCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"Content-Type\": \"application/x-amz-json-1.1\",\n        \"X-Amz-Target\": \"Kinesis_20131202.CreateStream\"\n      };\n      body = JSON.stringify(serializeAws_json1_1CreateStreamInput(input, context));\n      return [2 /*return*/, buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1DecreaseStreamRetentionPeriodCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"Content-Type\": \"application/x-amz-json-1.1\",\n        \"X-Amz-Target\": \"Kinesis_20131202.DecreaseStreamRetentionPeriod\"\n      };\n      body = JSON.stringify(serializeAws_json1_1DecreaseStreamRetentionPeriodInput(input, context));\n      return [2 /*return*/, buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1DeleteStreamCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"Content-Type\": \"application/x-amz-json-1.1\",\n        \"X-Amz-Target\": \"Kinesis_20131202.DeleteStream\"\n      };\n      body = JSON.stringify(serializeAws_json1_1DeleteStreamInput(input, context));\n      return [2 /*return*/, buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1DeregisterStreamConsumerCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"Content-Type\": \"application/x-amz-json-1.1\",\n        \"X-Amz-Target\": \"Kinesis_20131202.DeregisterStreamConsumer\"\n      };\n      body = JSON.stringify(serializeAws_json1_1DeregisterStreamConsumerInput(input, context));\n      return [2 /*return*/, buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1DescribeLimitsCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"Content-Type\": \"application/x-amz-json-1.1\",\n        \"X-Amz-Target\": \"Kinesis_20131202.DescribeLimits\"\n      };\n      body = JSON.stringify(serializeAws_json1_1DescribeLimitsInput(input, context));\n      return [2 /*return*/, buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1DescribeStreamCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"Content-Type\": \"application/x-amz-json-1.1\",\n        \"X-Amz-Target\": \"Kinesis_20131202.DescribeStream\"\n      };\n      body = JSON.stringify(serializeAws_json1_1DescribeStreamInput(input, context));\n      return [2 /*return*/, buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1DescribeStreamConsumerCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"Content-Type\": \"application/x-amz-json-1.1\",\n        \"X-Amz-Target\": \"Kinesis_20131202.DescribeStreamConsumer\"\n      };\n      body = JSON.stringify(serializeAws_json1_1DescribeStreamConsumerInput(input, context));\n      return [2 /*return*/, buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1DescribeStreamSummaryCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"Content-Type\": \"application/x-amz-json-1.1\",\n        \"X-Amz-Target\": \"Kinesis_20131202.DescribeStreamSummary\"\n      };\n      body = JSON.stringify(serializeAws_json1_1DescribeStreamSummaryInput(input, context));\n      return [2 /*return*/, buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1DisableEnhancedMonitoringCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"Content-Type\": \"application/x-amz-json-1.1\",\n        \"X-Amz-Target\": \"Kinesis_20131202.DisableEnhancedMonitoring\"\n      };\n      body = JSON.stringify(serializeAws_json1_1DisableEnhancedMonitoringInput(input, context));\n      return [2 /*return*/, buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1EnableEnhancedMonitoringCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"Content-Type\": \"application/x-amz-json-1.1\",\n        \"X-Amz-Target\": \"Kinesis_20131202.EnableEnhancedMonitoring\"\n      };\n      body = JSON.stringify(serializeAws_json1_1EnableEnhancedMonitoringInput(input, context));\n      return [2 /*return*/, buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1GetRecordsCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"Content-Type\": \"application/x-amz-json-1.1\",\n        \"X-Amz-Target\": \"Kinesis_20131202.GetRecords\"\n      };\n      body = JSON.stringify(serializeAws_json1_1GetRecordsInput(input, context));\n      return [2 /*return*/, buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1GetShardIteratorCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"Content-Type\": \"application/x-amz-json-1.1\",\n        \"X-Amz-Target\": \"Kinesis_20131202.GetShardIterator\"\n      };\n      body = JSON.stringify(serializeAws_json1_1GetShardIteratorInput(input, context));\n      return [2 /*return*/, buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1IncreaseStreamRetentionPeriodCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"Content-Type\": \"application/x-amz-json-1.1\",\n        \"X-Amz-Target\": \"Kinesis_20131202.IncreaseStreamRetentionPeriod\"\n      };\n      body = JSON.stringify(serializeAws_json1_1IncreaseStreamRetentionPeriodInput(input, context));\n      return [2 /*return*/, buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1ListShardsCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"Content-Type\": \"application/x-amz-json-1.1\",\n        \"X-Amz-Target\": \"Kinesis_20131202.ListShards\"\n      };\n      body = JSON.stringify(serializeAws_json1_1ListShardsInput(input, context));\n      return [2 /*return*/, buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1ListStreamConsumersCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"Content-Type\": \"application/x-amz-json-1.1\",\n        \"X-Amz-Target\": \"Kinesis_20131202.ListStreamConsumers\"\n      };\n      body = JSON.stringify(serializeAws_json1_1ListStreamConsumersInput(input, context));\n      return [2 /*return*/, buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1ListStreamsCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"Content-Type\": \"application/x-amz-json-1.1\",\n        \"X-Amz-Target\": \"Kinesis_20131202.ListStreams\"\n      };\n      body = JSON.stringify(serializeAws_json1_1ListStreamsInput(input, context));\n      return [2 /*return*/, buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1ListTagsForStreamCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"Content-Type\": \"application/x-amz-json-1.1\",\n        \"X-Amz-Target\": \"Kinesis_20131202.ListTagsForStream\"\n      };\n      body = JSON.stringify(serializeAws_json1_1ListTagsForStreamInput(input, context));\n      return [2 /*return*/, buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1MergeShardsCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"Content-Type\": \"application/x-amz-json-1.1\",\n        \"X-Amz-Target\": \"Kinesis_20131202.MergeShards\"\n      };\n      body = JSON.stringify(serializeAws_json1_1MergeShardsInput(input, context));\n      return [2 /*return*/, buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1PutRecordCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"Content-Type\": \"application/x-amz-json-1.1\",\n        \"X-Amz-Target\": \"Kinesis_20131202.PutRecord\"\n      };\n      body = JSON.stringify(serializeAws_json1_1PutRecordInput(input, context));\n      return [2 /*return*/, buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1PutRecordsCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"Content-Type\": \"application/x-amz-json-1.1\",\n        \"X-Amz-Target\": \"Kinesis_20131202.PutRecords\"\n      };\n      body = JSON.stringify(serializeAws_json1_1PutRecordsInput(input, context));\n      return [2 /*return*/, buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1RegisterStreamConsumerCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"Content-Type\": \"application/x-amz-json-1.1\",\n        \"X-Amz-Target\": \"Kinesis_20131202.RegisterStreamConsumer\"\n      };\n      body = JSON.stringify(serializeAws_json1_1RegisterStreamConsumerInput(input, context));\n      return [2 /*return*/, buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1RemoveTagsFromStreamCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"Content-Type\": \"application/x-amz-json-1.1\",\n        \"X-Amz-Target\": \"Kinesis_20131202.RemoveTagsFromStream\"\n      };\n      body = JSON.stringify(serializeAws_json1_1RemoveTagsFromStreamInput(input, context));\n      return [2 /*return*/, buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1SplitShardCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"Content-Type\": \"application/x-amz-json-1.1\",\n        \"X-Amz-Target\": \"Kinesis_20131202.SplitShard\"\n      };\n      body = JSON.stringify(serializeAws_json1_1SplitShardInput(input, context));\n      return [2 /*return*/, buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1StartStreamEncryptionCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"Content-Type\": \"application/x-amz-json-1.1\",\n        \"X-Amz-Target\": \"Kinesis_20131202.StartStreamEncryption\"\n      };\n      body = JSON.stringify(serializeAws_json1_1StartStreamEncryptionInput(input, context));\n      return [2 /*return*/, buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1StopStreamEncryptionCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"Content-Type\": \"application/x-amz-json-1.1\",\n        \"X-Amz-Target\": \"Kinesis_20131202.StopStreamEncryption\"\n      };\n      body = JSON.stringify(serializeAws_json1_1StopStreamEncryptionInput(input, context));\n      return [2 /*return*/, buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1SubscribeToShardCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"Content-Type\": \"application/x-amz-json-1.1\",\n        \"X-Amz-Target\": \"Kinesis_20131202.SubscribeToShard\"\n      };\n      body = JSON.stringify(serializeAws_json1_1SubscribeToShardInput(input, context));\n      return [2 /*return*/, buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1UpdateShardCountCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"Content-Type\": \"application/x-amz-json-1.1\",\n        \"X-Amz-Target\": \"Kinesis_20131202.UpdateShardCount\"\n      };\n      body = JSON.stringify(serializeAws_json1_1UpdateShardCountInput(input, context));\n      return [2 /*return*/, buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var deserializeAws_json1_1AddTagsToStreamCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 400) {\n            return [2 /*return*/, deserializeAws_json1_1AddTagsToStreamCommandError(output, context)];\n          }\n          return [4 /*yield*/, collectBody(output.body, context)];\n        case 1:\n          _a.sent();\n          response = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [2 /*return*/, Promise.resolve(response)];\n      }\n    });\n  });\n};\nvar deserializeAws_json1_1AddTagsToStreamCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, errorTypeParts, _b, _c, _d, _e, _f, parsedBody, message;\n    var _g;\n    return __generator(this, function (_h) {\n      switch (_h.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _g = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_g.body = _h.sent(), _g)]));\n          errorCode = \"UnknownError\";\n          errorTypeParts = parsedOutput.body[\"__type\"].split(\"#\");\n          errorCode = errorTypeParts[1] === undefined ? errorTypeParts[0] : errorTypeParts[1];\n          _b = errorCode;\n          switch (_b) {\n            case \"InvalidArgumentException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.kinesis#InvalidArgumentException\":\n              return [3 /*break*/, 2];\n            case \"LimitExceededException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.kinesis#LimitExceededException\":\n              return [3 /*break*/, 4];\n            case \"ResourceInUseException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.kinesis#ResourceInUseException\":\n              return [3 /*break*/, 6];\n            case \"ResourceNotFoundException\":\n              return [3 /*break*/, 8];\n            case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n              return [3 /*break*/, 8];\n          }\n          return [3 /*break*/, 10];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 11];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 11];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1ResourceInUseExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 11];\n        case 8:\n          _f = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 11];\n        case 10:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _h.label = 11;\n        case 11:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_json1_1CreateStreamCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 400) {\n            return [2 /*return*/, deserializeAws_json1_1CreateStreamCommandError(output, context)];\n          }\n          return [4 /*yield*/, collectBody(output.body, context)];\n        case 1:\n          _a.sent();\n          response = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [2 /*return*/, Promise.resolve(response)];\n      }\n    });\n  });\n};\nvar deserializeAws_json1_1CreateStreamCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, errorTypeParts, _b, _c, _d, _e, parsedBody, message;\n    var _f;\n    return __generator(this, function (_g) {\n      switch (_g.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _f = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_f.body = _g.sent(), _f)]));\n          errorCode = \"UnknownError\";\n          errorTypeParts = parsedOutput.body[\"__type\"].split(\"#\");\n          errorCode = errorTypeParts[1] === undefined ? errorTypeParts[0] : errorTypeParts[1];\n          _b = errorCode;\n          switch (_b) {\n            case \"InvalidArgumentException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.kinesis#InvalidArgumentException\":\n              return [3 /*break*/, 2];\n            case \"LimitExceededException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.kinesis#LimitExceededException\":\n              return [3 /*break*/, 4];\n            case \"ResourceInUseException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.kinesis#ResourceInUseException\":\n              return [3 /*break*/, 6];\n          }\n          return [3 /*break*/, 8];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 9];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 9];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1ResourceInUseExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 9];\n        case 8:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _g.label = 9;\n        case 9:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_json1_1DecreaseStreamRetentionPeriodCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 400) {\n            return [2 /*return*/, deserializeAws_json1_1DecreaseStreamRetentionPeriodCommandError(output, context)];\n          }\n          return [4 /*yield*/, collectBody(output.body, context)];\n        case 1:\n          _a.sent();\n          response = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [2 /*return*/, Promise.resolve(response)];\n      }\n    });\n  });\n};\nvar deserializeAws_json1_1DecreaseStreamRetentionPeriodCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, errorTypeParts, _b, _c, _d, _e, _f, parsedBody, message;\n    var _g;\n    return __generator(this, function (_h) {\n      switch (_h.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _g = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_g.body = _h.sent(), _g)]));\n          errorCode = \"UnknownError\";\n          errorTypeParts = parsedOutput.body[\"__type\"].split(\"#\");\n          errorCode = errorTypeParts[1] === undefined ? errorTypeParts[0] : errorTypeParts[1];\n          _b = errorCode;\n          switch (_b) {\n            case \"InvalidArgumentException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.kinesis#InvalidArgumentException\":\n              return [3 /*break*/, 2];\n            case \"LimitExceededException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.kinesis#LimitExceededException\":\n              return [3 /*break*/, 4];\n            case \"ResourceInUseException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.kinesis#ResourceInUseException\":\n              return [3 /*break*/, 6];\n            case \"ResourceNotFoundException\":\n              return [3 /*break*/, 8];\n            case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n              return [3 /*break*/, 8];\n          }\n          return [3 /*break*/, 10];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 11];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 11];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1ResourceInUseExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 11];\n        case 8:\n          _f = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 11];\n        case 10:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _h.label = 11;\n        case 11:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_json1_1DeleteStreamCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 400) {\n            return [2 /*return*/, deserializeAws_json1_1DeleteStreamCommandError(output, context)];\n          }\n          return [4 /*yield*/, collectBody(output.body, context)];\n        case 1:\n          _a.sent();\n          response = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [2 /*return*/, Promise.resolve(response)];\n      }\n    });\n  });\n};\nvar deserializeAws_json1_1DeleteStreamCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, errorTypeParts, _b, _c, _d, _e, parsedBody, message;\n    var _f;\n    return __generator(this, function (_g) {\n      switch (_g.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _f = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_f.body = _g.sent(), _f)]));\n          errorCode = \"UnknownError\";\n          errorTypeParts = parsedOutput.body[\"__type\"].split(\"#\");\n          errorCode = errorTypeParts[1] === undefined ? errorTypeParts[0] : errorTypeParts[1];\n          _b = errorCode;\n          switch (_b) {\n            case \"LimitExceededException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.kinesis#LimitExceededException\":\n              return [3 /*break*/, 2];\n            case \"ResourceInUseException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.kinesis#ResourceInUseException\":\n              return [3 /*break*/, 4];\n            case \"ResourceNotFoundException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n              return [3 /*break*/, 6];\n          }\n          return [3 /*break*/, 8];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 9];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1ResourceInUseExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 9];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 9];\n        case 8:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _g.label = 9;\n        case 9:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_json1_1DeregisterStreamConsumerCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 400) {\n            return [2 /*return*/, deserializeAws_json1_1DeregisterStreamConsumerCommandError(output, context)];\n          }\n          return [4 /*yield*/, collectBody(output.body, context)];\n        case 1:\n          _a.sent();\n          response = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [2 /*return*/, Promise.resolve(response)];\n      }\n    });\n  });\n};\nvar deserializeAws_json1_1DeregisterStreamConsumerCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, errorTypeParts, _b, _c, _d, _e, parsedBody, message;\n    var _f;\n    return __generator(this, function (_g) {\n      switch (_g.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _f = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_f.body = _g.sent(), _f)]));\n          errorCode = \"UnknownError\";\n          errorTypeParts = parsedOutput.body[\"__type\"].split(\"#\");\n          errorCode = errorTypeParts[1] === undefined ? errorTypeParts[0] : errorTypeParts[1];\n          _b = errorCode;\n          switch (_b) {\n            case \"InvalidArgumentException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.kinesis#InvalidArgumentException\":\n              return [3 /*break*/, 2];\n            case \"LimitExceededException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.kinesis#LimitExceededException\":\n              return [3 /*break*/, 4];\n            case \"ResourceNotFoundException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n              return [3 /*break*/, 6];\n          }\n          return [3 /*break*/, 8];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 9];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 9];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 9];\n        case 8:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _g.label = 9;\n        case 9:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_json1_1DescribeLimitsCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var data, contents, response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 400) {\n            return [2 /*return*/, deserializeAws_json1_1DescribeLimitsCommandError(output, context)];\n          }\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          contents = {};\n          contents = deserializeAws_json1_1DescribeLimitsOutput(data, context);\n          response = __assign({\n            $metadata: deserializeMetadata(output),\n            __type: \"DescribeLimitsOutput\"\n          }, contents);\n          return [2 /*return*/, Promise.resolve(response)];\n      }\n    });\n  });\n};\nvar deserializeAws_json1_1DescribeLimitsCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, errorTypeParts, _b, _c, parsedBody, message;\n    var _d;\n    return __generator(this, function (_e) {\n      switch (_e.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _d = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_d.body = _e.sent(), _d)]));\n          errorCode = \"UnknownError\";\n          errorTypeParts = parsedOutput.body[\"__type\"].split(\"#\");\n          errorCode = errorTypeParts[1] === undefined ? errorTypeParts[0] : errorTypeParts[1];\n          _b = errorCode;\n          switch (_b) {\n            case \"LimitExceededException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.kinesis#LimitExceededException\":\n              return [3 /*break*/, 2];\n          }\n          return [3 /*break*/, 4];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_e.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 5];\n        case 4:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _e.label = 5;\n        case 5:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_json1_1DescribeStreamCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var data, contents, response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 400) {\n            return [2 /*return*/, deserializeAws_json1_1DescribeStreamCommandError(output, context)];\n          }\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          contents = {};\n          contents = deserializeAws_json1_1DescribeStreamOutput(data, context);\n          response = __assign({\n            $metadata: deserializeMetadata(output),\n            __type: \"DescribeStreamOutput\"\n          }, contents);\n          return [2 /*return*/, Promise.resolve(response)];\n      }\n    });\n  });\n};\nvar deserializeAws_json1_1DescribeStreamCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, errorTypeParts, _b, _c, _d, parsedBody, message;\n    var _e;\n    return __generator(this, function (_f) {\n      switch (_f.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _e = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_e.body = _f.sent(), _e)]));\n          errorCode = \"UnknownError\";\n          errorTypeParts = parsedOutput.body[\"__type\"].split(\"#\");\n          errorCode = errorTypeParts[1] === undefined ? errorTypeParts[0] : errorTypeParts[1];\n          _b = errorCode;\n          switch (_b) {\n            case \"LimitExceededException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.kinesis#LimitExceededException\":\n              return [3 /*break*/, 2];\n            case \"ResourceNotFoundException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n              return [3 /*break*/, 4];\n          }\n          return [3 /*break*/, 6];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_f.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 7];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_f.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 7];\n        case 6:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _f.label = 7;\n        case 7:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_json1_1DescribeStreamConsumerCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var data, contents, response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 400) {\n            return [2 /*return*/, deserializeAws_json1_1DescribeStreamConsumerCommandError(output, context)];\n          }\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          contents = {};\n          contents = deserializeAws_json1_1DescribeStreamConsumerOutput(data, context);\n          response = __assign({\n            $metadata: deserializeMetadata(output),\n            __type: \"DescribeStreamConsumerOutput\"\n          }, contents);\n          return [2 /*return*/, Promise.resolve(response)];\n      }\n    });\n  });\n};\nvar deserializeAws_json1_1DescribeStreamConsumerCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, errorTypeParts, _b, _c, _d, _e, parsedBody, message;\n    var _f;\n    return __generator(this, function (_g) {\n      switch (_g.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _f = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_f.body = _g.sent(), _f)]));\n          errorCode = \"UnknownError\";\n          errorTypeParts = parsedOutput.body[\"__type\"].split(\"#\");\n          errorCode = errorTypeParts[1] === undefined ? errorTypeParts[0] : errorTypeParts[1];\n          _b = errorCode;\n          switch (_b) {\n            case \"InvalidArgumentException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.kinesis#InvalidArgumentException\":\n              return [3 /*break*/, 2];\n            case \"LimitExceededException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.kinesis#LimitExceededException\":\n              return [3 /*break*/, 4];\n            case \"ResourceNotFoundException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n              return [3 /*break*/, 6];\n          }\n          return [3 /*break*/, 8];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 9];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 9];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 9];\n        case 8:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _g.label = 9;\n        case 9:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_json1_1DescribeStreamSummaryCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var data, contents, response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 400) {\n            return [2 /*return*/, deserializeAws_json1_1DescribeStreamSummaryCommandError(output, context)];\n          }\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          contents = {};\n          contents = deserializeAws_json1_1DescribeStreamSummaryOutput(data, context);\n          response = __assign({\n            $metadata: deserializeMetadata(output),\n            __type: \"DescribeStreamSummaryOutput\"\n          }, contents);\n          return [2 /*return*/, Promise.resolve(response)];\n      }\n    });\n  });\n};\nvar deserializeAws_json1_1DescribeStreamSummaryCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, errorTypeParts, _b, _c, _d, parsedBody, message;\n    var _e;\n    return __generator(this, function (_f) {\n      switch (_f.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _e = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_e.body = _f.sent(), _e)]));\n          errorCode = \"UnknownError\";\n          errorTypeParts = parsedOutput.body[\"__type\"].split(\"#\");\n          errorCode = errorTypeParts[1] === undefined ? errorTypeParts[0] : errorTypeParts[1];\n          _b = errorCode;\n          switch (_b) {\n            case \"LimitExceededException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.kinesis#LimitExceededException\":\n              return [3 /*break*/, 2];\n            case \"ResourceNotFoundException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n              return [3 /*break*/, 4];\n          }\n          return [3 /*break*/, 6];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_f.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 7];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_f.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 7];\n        case 6:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _f.label = 7;\n        case 7:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_json1_1DisableEnhancedMonitoringCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var data, contents, response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 400) {\n            return [2 /*return*/, deserializeAws_json1_1DisableEnhancedMonitoringCommandError(output, context)];\n          }\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          contents = {};\n          contents = deserializeAws_json1_1EnhancedMonitoringOutput(data, context);\n          response = __assign({\n            $metadata: deserializeMetadata(output),\n            __type: \"EnhancedMonitoringOutput\"\n          }, contents);\n          return [2 /*return*/, Promise.resolve(response)];\n      }\n    });\n  });\n};\nvar deserializeAws_json1_1DisableEnhancedMonitoringCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, errorTypeParts, _b, _c, _d, _e, _f, parsedBody, message;\n    var _g;\n    return __generator(this, function (_h) {\n      switch (_h.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _g = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_g.body = _h.sent(), _g)]));\n          errorCode = \"UnknownError\";\n          errorTypeParts = parsedOutput.body[\"__type\"].split(\"#\");\n          errorCode = errorTypeParts[1] === undefined ? errorTypeParts[0] : errorTypeParts[1];\n          _b = errorCode;\n          switch (_b) {\n            case \"InvalidArgumentException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.kinesis#InvalidArgumentException\":\n              return [3 /*break*/, 2];\n            case \"LimitExceededException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.kinesis#LimitExceededException\":\n              return [3 /*break*/, 4];\n            case \"ResourceInUseException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.kinesis#ResourceInUseException\":\n              return [3 /*break*/, 6];\n            case \"ResourceNotFoundException\":\n              return [3 /*break*/, 8];\n            case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n              return [3 /*break*/, 8];\n          }\n          return [3 /*break*/, 10];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 11];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 11];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1ResourceInUseExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 11];\n        case 8:\n          _f = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 11];\n        case 10:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _h.label = 11;\n        case 11:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_json1_1EnableEnhancedMonitoringCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var data, contents, response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 400) {\n            return [2 /*return*/, deserializeAws_json1_1EnableEnhancedMonitoringCommandError(output, context)];\n          }\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          contents = {};\n          contents = deserializeAws_json1_1EnhancedMonitoringOutput(data, context);\n          response = __assign({\n            $metadata: deserializeMetadata(output),\n            __type: \"EnhancedMonitoringOutput\"\n          }, contents);\n          return [2 /*return*/, Promise.resolve(response)];\n      }\n    });\n  });\n};\nvar deserializeAws_json1_1EnableEnhancedMonitoringCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, errorTypeParts, _b, _c, _d, _e, _f, parsedBody, message;\n    var _g;\n    return __generator(this, function (_h) {\n      switch (_h.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _g = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_g.body = _h.sent(), _g)]));\n          errorCode = \"UnknownError\";\n          errorTypeParts = parsedOutput.body[\"__type\"].split(\"#\");\n          errorCode = errorTypeParts[1] === undefined ? errorTypeParts[0] : errorTypeParts[1];\n          _b = errorCode;\n          switch (_b) {\n            case \"InvalidArgumentException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.kinesis#InvalidArgumentException\":\n              return [3 /*break*/, 2];\n            case \"LimitExceededException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.kinesis#LimitExceededException\":\n              return [3 /*break*/, 4];\n            case \"ResourceInUseException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.kinesis#ResourceInUseException\":\n              return [3 /*break*/, 6];\n            case \"ResourceNotFoundException\":\n              return [3 /*break*/, 8];\n            case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n              return [3 /*break*/, 8];\n          }\n          return [3 /*break*/, 10];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 11];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 11];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1ResourceInUseExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 11];\n        case 8:\n          _f = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 11];\n        case 10:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _h.label = 11;\n        case 11:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_json1_1GetRecordsCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var data, contents, response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 400) {\n            return [2 /*return*/, deserializeAws_json1_1GetRecordsCommandError(output, context)];\n          }\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          contents = {};\n          contents = deserializeAws_json1_1GetRecordsOutput(data, context);\n          response = __assign({\n            $metadata: deserializeMetadata(output),\n            __type: \"GetRecordsOutput\"\n          }, contents);\n          return [2 /*return*/, Promise.resolve(response)];\n      }\n    });\n  });\n};\nvar deserializeAws_json1_1GetRecordsCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, errorTypeParts, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, parsedBody, message;\n    var _o;\n    return __generator(this, function (_p) {\n      switch (_p.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _o = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_o.body = _p.sent(), _o)]));\n          errorCode = \"UnknownError\";\n          errorTypeParts = parsedOutput.body[\"__type\"].split(\"#\");\n          errorCode = errorTypeParts[1] === undefined ? errorTypeParts[0] : errorTypeParts[1];\n          _b = errorCode;\n          switch (_b) {\n            case \"ExpiredIteratorException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.kinesis#ExpiredIteratorException\":\n              return [3 /*break*/, 2];\n            case \"InvalidArgumentException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.kinesis#InvalidArgumentException\":\n              return [3 /*break*/, 4];\n            case \"KMSAccessDeniedException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.kinesis#KMSAccessDeniedException\":\n              return [3 /*break*/, 6];\n            case \"KMSDisabledException\":\n              return [3 /*break*/, 8];\n            case \"com.amazonaws.kinesis#KMSDisabledException\":\n              return [3 /*break*/, 8];\n            case \"KMSInvalidStateException\":\n              return [3 /*break*/, 10];\n            case \"com.amazonaws.kinesis#KMSInvalidStateException\":\n              return [3 /*break*/, 10];\n            case \"KMSNotFoundException\":\n              return [3 /*break*/, 12];\n            case \"com.amazonaws.kinesis#KMSNotFoundException\":\n              return [3 /*break*/, 12];\n            case \"KMSOptInRequired\":\n              return [3 /*break*/, 14];\n            case \"com.amazonaws.kinesis#KMSOptInRequired\":\n              return [3 /*break*/, 14];\n            case \"KMSThrottlingException\":\n              return [3 /*break*/, 16];\n            case \"com.amazonaws.kinesis#KMSThrottlingException\":\n              return [3 /*break*/, 16];\n            case \"ProvisionedThroughputExceededException\":\n              return [3 /*break*/, 18];\n            case \"com.amazonaws.kinesis#ProvisionedThroughputExceededException\":\n              return [3 /*break*/, 18];\n            case \"ResourceNotFoundException\":\n              return [3 /*break*/, 20];\n            case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n              return [3 /*break*/, 20];\n          }\n          return [3 /*break*/, 22];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1ExpiredIteratorExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_p.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 23];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_p.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 23];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1KMSAccessDeniedExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_p.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 23];\n        case 8:\n          _f = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1KMSDisabledExceptionResponse(parsedOutput, context)];\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_p.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 23];\n        case 10:\n          _g = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1KMSInvalidStateExceptionResponse(parsedOutput, context)];\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_p.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 23];\n        case 12:\n          _h = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1KMSNotFoundExceptionResponse(parsedOutput, context)];\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_p.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 23];\n        case 14:\n          _j = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1KMSOptInRequiredResponse(parsedOutput, context)];\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_p.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 23];\n        case 16:\n          _k = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1KMSThrottlingExceptionResponse(parsedOutput, context)];\n        case 17:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _k.concat([_p.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 23];\n        case 18:\n          _l = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1ProvisionedThroughputExceededExceptionResponse(parsedOutput, context)];\n        case 19:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _l.concat([_p.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 23];\n        case 20:\n          _m = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n        case 21:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _m.concat([_p.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 23];\n        case 22:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _p.label = 23;\n        case 23:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_json1_1GetShardIteratorCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var data, contents, response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 400) {\n            return [2 /*return*/, deserializeAws_json1_1GetShardIteratorCommandError(output, context)];\n          }\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          contents = {};\n          contents = deserializeAws_json1_1GetShardIteratorOutput(data, context);\n          response = __assign({\n            $metadata: deserializeMetadata(output),\n            __type: \"GetShardIteratorOutput\"\n          }, contents);\n          return [2 /*return*/, Promise.resolve(response)];\n      }\n    });\n  });\n};\nvar deserializeAws_json1_1GetShardIteratorCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, errorTypeParts, _b, _c, _d, _e, parsedBody, message;\n    var _f;\n    return __generator(this, function (_g) {\n      switch (_g.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _f = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_f.body = _g.sent(), _f)]));\n          errorCode = \"UnknownError\";\n          errorTypeParts = parsedOutput.body[\"__type\"].split(\"#\");\n          errorCode = errorTypeParts[1] === undefined ? errorTypeParts[0] : errorTypeParts[1];\n          _b = errorCode;\n          switch (_b) {\n            case \"InvalidArgumentException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.kinesis#InvalidArgumentException\":\n              return [3 /*break*/, 2];\n            case \"ProvisionedThroughputExceededException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.kinesis#ProvisionedThroughputExceededException\":\n              return [3 /*break*/, 4];\n            case \"ResourceNotFoundException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n              return [3 /*break*/, 6];\n          }\n          return [3 /*break*/, 8];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 9];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1ProvisionedThroughputExceededExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 9];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 9];\n        case 8:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _g.label = 9;\n        case 9:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_json1_1IncreaseStreamRetentionPeriodCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 400) {\n            return [2 /*return*/, deserializeAws_json1_1IncreaseStreamRetentionPeriodCommandError(output, context)];\n          }\n          return [4 /*yield*/, collectBody(output.body, context)];\n        case 1:\n          _a.sent();\n          response = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [2 /*return*/, Promise.resolve(response)];\n      }\n    });\n  });\n};\nvar deserializeAws_json1_1IncreaseStreamRetentionPeriodCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, errorTypeParts, _b, _c, _d, _e, _f, parsedBody, message;\n    var _g;\n    return __generator(this, function (_h) {\n      switch (_h.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _g = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_g.body = _h.sent(), _g)]));\n          errorCode = \"UnknownError\";\n          errorTypeParts = parsedOutput.body[\"__type\"].split(\"#\");\n          errorCode = errorTypeParts[1] === undefined ? errorTypeParts[0] : errorTypeParts[1];\n          _b = errorCode;\n          switch (_b) {\n            case \"InvalidArgumentException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.kinesis#InvalidArgumentException\":\n              return [3 /*break*/, 2];\n            case \"LimitExceededException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.kinesis#LimitExceededException\":\n              return [3 /*break*/, 4];\n            case \"ResourceInUseException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.kinesis#ResourceInUseException\":\n              return [3 /*break*/, 6];\n            case \"ResourceNotFoundException\":\n              return [3 /*break*/, 8];\n            case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n              return [3 /*break*/, 8];\n          }\n          return [3 /*break*/, 10];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 11];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 11];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1ResourceInUseExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 11];\n        case 8:\n          _f = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 11];\n        case 10:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _h.label = 11;\n        case 11:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_json1_1ListShardsCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var data, contents, response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 400) {\n            return [2 /*return*/, deserializeAws_json1_1ListShardsCommandError(output, context)];\n          }\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          contents = {};\n          contents = deserializeAws_json1_1ListShardsOutput(data, context);\n          response = __assign({\n            $metadata: deserializeMetadata(output),\n            __type: \"ListShardsOutput\"\n          }, contents);\n          return [2 /*return*/, Promise.resolve(response)];\n      }\n    });\n  });\n};\nvar deserializeAws_json1_1ListShardsCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, errorTypeParts, _b, _c, _d, _e, _f, _g, parsedBody, message;\n    var _h;\n    return __generator(this, function (_j) {\n      switch (_j.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _h = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_h.body = _j.sent(), _h)]));\n          errorCode = \"UnknownError\";\n          errorTypeParts = parsedOutput.body[\"__type\"].split(\"#\");\n          errorCode = errorTypeParts[1] === undefined ? errorTypeParts[0] : errorTypeParts[1];\n          _b = errorCode;\n          switch (_b) {\n            case \"ExpiredNextTokenException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.kinesis#ExpiredNextTokenException\":\n              return [3 /*break*/, 2];\n            case \"InvalidArgumentException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.kinesis#InvalidArgumentException\":\n              return [3 /*break*/, 4];\n            case \"LimitExceededException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.kinesis#LimitExceededException\":\n              return [3 /*break*/, 6];\n            case \"ResourceInUseException\":\n              return [3 /*break*/, 8];\n            case \"com.amazonaws.kinesis#ResourceInUseException\":\n              return [3 /*break*/, 8];\n            case \"ResourceNotFoundException\":\n              return [3 /*break*/, 10];\n            case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n              return [3 /*break*/, 10];\n          }\n          return [3 /*break*/, 12];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1ExpiredNextTokenExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 13];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 13];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 13];\n        case 8:\n          _f = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1ResourceInUseExceptionResponse(parsedOutput, context)];\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 13];\n        case 10:\n          _g = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 13];\n        case 12:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _j.label = 13;\n        case 13:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_json1_1ListStreamConsumersCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var data, contents, response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 400) {\n            return [2 /*return*/, deserializeAws_json1_1ListStreamConsumersCommandError(output, context)];\n          }\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          contents = {};\n          contents = deserializeAws_json1_1ListStreamConsumersOutput(data, context);\n          response = __assign({\n            $metadata: deserializeMetadata(output),\n            __type: \"ListStreamConsumersOutput\"\n          }, contents);\n          return [2 /*return*/, Promise.resolve(response)];\n      }\n    });\n  });\n};\nvar deserializeAws_json1_1ListStreamConsumersCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, errorTypeParts, _b, _c, _d, _e, _f, _g, parsedBody, message;\n    var _h;\n    return __generator(this, function (_j) {\n      switch (_j.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _h = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_h.body = _j.sent(), _h)]));\n          errorCode = \"UnknownError\";\n          errorTypeParts = parsedOutput.body[\"__type\"].split(\"#\");\n          errorCode = errorTypeParts[1] === undefined ? errorTypeParts[0] : errorTypeParts[1];\n          _b = errorCode;\n          switch (_b) {\n            case \"ExpiredNextTokenException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.kinesis#ExpiredNextTokenException\":\n              return [3 /*break*/, 2];\n            case \"InvalidArgumentException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.kinesis#InvalidArgumentException\":\n              return [3 /*break*/, 4];\n            case \"LimitExceededException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.kinesis#LimitExceededException\":\n              return [3 /*break*/, 6];\n            case \"ResourceInUseException\":\n              return [3 /*break*/, 8];\n            case \"com.amazonaws.kinesis#ResourceInUseException\":\n              return [3 /*break*/, 8];\n            case \"ResourceNotFoundException\":\n              return [3 /*break*/, 10];\n            case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n              return [3 /*break*/, 10];\n          }\n          return [3 /*break*/, 12];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1ExpiredNextTokenExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 13];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 13];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 13];\n        case 8:\n          _f = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1ResourceInUseExceptionResponse(parsedOutput, context)];\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 13];\n        case 10:\n          _g = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 13];\n        case 12:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _j.label = 13;\n        case 13:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_json1_1ListStreamsCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var data, contents, response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 400) {\n            return [2 /*return*/, deserializeAws_json1_1ListStreamsCommandError(output, context)];\n          }\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          contents = {};\n          contents = deserializeAws_json1_1ListStreamsOutput(data, context);\n          response = __assign({\n            $metadata: deserializeMetadata(output),\n            __type: \"ListStreamsOutput\"\n          }, contents);\n          return [2 /*return*/, Promise.resolve(response)];\n      }\n    });\n  });\n};\nvar deserializeAws_json1_1ListStreamsCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, errorTypeParts, _b, _c, parsedBody, message;\n    var _d;\n    return __generator(this, function (_e) {\n      switch (_e.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _d = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_d.body = _e.sent(), _d)]));\n          errorCode = \"UnknownError\";\n          errorTypeParts = parsedOutput.body[\"__type\"].split(\"#\");\n          errorCode = errorTypeParts[1] === undefined ? errorTypeParts[0] : errorTypeParts[1];\n          _b = errorCode;\n          switch (_b) {\n            case \"LimitExceededException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.kinesis#LimitExceededException\":\n              return [3 /*break*/, 2];\n          }\n          return [3 /*break*/, 4];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_e.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 5];\n        case 4:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _e.label = 5;\n        case 5:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_json1_1ListTagsForStreamCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var data, contents, response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 400) {\n            return [2 /*return*/, deserializeAws_json1_1ListTagsForStreamCommandError(output, context)];\n          }\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          contents = {};\n          contents = deserializeAws_json1_1ListTagsForStreamOutput(data, context);\n          response = __assign({\n            $metadata: deserializeMetadata(output),\n            __type: \"ListTagsForStreamOutput\"\n          }, contents);\n          return [2 /*return*/, Promise.resolve(response)];\n      }\n    });\n  });\n};\nvar deserializeAws_json1_1ListTagsForStreamCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, errorTypeParts, _b, _c, _d, _e, parsedBody, message;\n    var _f;\n    return __generator(this, function (_g) {\n      switch (_g.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _f = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_f.body = _g.sent(), _f)]));\n          errorCode = \"UnknownError\";\n          errorTypeParts = parsedOutput.body[\"__type\"].split(\"#\");\n          errorCode = errorTypeParts[1] === undefined ? errorTypeParts[0] : errorTypeParts[1];\n          _b = errorCode;\n          switch (_b) {\n            case \"InvalidArgumentException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.kinesis#InvalidArgumentException\":\n              return [3 /*break*/, 2];\n            case \"LimitExceededException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.kinesis#LimitExceededException\":\n              return [3 /*break*/, 4];\n            case \"ResourceNotFoundException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n              return [3 /*break*/, 6];\n          }\n          return [3 /*break*/, 8];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 9];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 9];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 9];\n        case 8:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _g.label = 9;\n        case 9:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_json1_1MergeShardsCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 400) {\n            return [2 /*return*/, deserializeAws_json1_1MergeShardsCommandError(output, context)];\n          }\n          return [4 /*yield*/, collectBody(output.body, context)];\n        case 1:\n          _a.sent();\n          response = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [2 /*return*/, Promise.resolve(response)];\n      }\n    });\n  });\n};\nvar deserializeAws_json1_1MergeShardsCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, errorTypeParts, _b, _c, _d, _e, _f, parsedBody, message;\n    var _g;\n    return __generator(this, function (_h) {\n      switch (_h.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _g = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_g.body = _h.sent(), _g)]));\n          errorCode = \"UnknownError\";\n          errorTypeParts = parsedOutput.body[\"__type\"].split(\"#\");\n          errorCode = errorTypeParts[1] === undefined ? errorTypeParts[0] : errorTypeParts[1];\n          _b = errorCode;\n          switch (_b) {\n            case \"InvalidArgumentException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.kinesis#InvalidArgumentException\":\n              return [3 /*break*/, 2];\n            case \"LimitExceededException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.kinesis#LimitExceededException\":\n              return [3 /*break*/, 4];\n            case \"ResourceInUseException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.kinesis#ResourceInUseException\":\n              return [3 /*break*/, 6];\n            case \"ResourceNotFoundException\":\n              return [3 /*break*/, 8];\n            case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n              return [3 /*break*/, 8];\n          }\n          return [3 /*break*/, 10];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 11];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 11];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1ResourceInUseExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 11];\n        case 8:\n          _f = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 11];\n        case 10:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _h.label = 11;\n        case 11:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_json1_1PutRecordCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var data, contents, response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 400) {\n            return [2 /*return*/, deserializeAws_json1_1PutRecordCommandError(output, context)];\n          }\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          contents = {};\n          contents = deserializeAws_json1_1PutRecordOutput(data, context);\n          response = __assign({\n            $metadata: deserializeMetadata(output),\n            __type: \"PutRecordOutput\"\n          }, contents);\n          return [2 /*return*/, Promise.resolve(response)];\n      }\n    });\n  });\n};\nvar deserializeAws_json1_1PutRecordCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, errorTypeParts, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, parsedBody, message;\n    var _m;\n    return __generator(this, function (_o) {\n      switch (_o.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _m = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_m.body = _o.sent(), _m)]));\n          errorCode = \"UnknownError\";\n          errorTypeParts = parsedOutput.body[\"__type\"].split(\"#\");\n          errorCode = errorTypeParts[1] === undefined ? errorTypeParts[0] : errorTypeParts[1];\n          _b = errorCode;\n          switch (_b) {\n            case \"InvalidArgumentException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.kinesis#InvalidArgumentException\":\n              return [3 /*break*/, 2];\n            case \"KMSAccessDeniedException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.kinesis#KMSAccessDeniedException\":\n              return [3 /*break*/, 4];\n            case \"KMSDisabledException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.kinesis#KMSDisabledException\":\n              return [3 /*break*/, 6];\n            case \"KMSInvalidStateException\":\n              return [3 /*break*/, 8];\n            case \"com.amazonaws.kinesis#KMSInvalidStateException\":\n              return [3 /*break*/, 8];\n            case \"KMSNotFoundException\":\n              return [3 /*break*/, 10];\n            case \"com.amazonaws.kinesis#KMSNotFoundException\":\n              return [3 /*break*/, 10];\n            case \"KMSOptInRequired\":\n              return [3 /*break*/, 12];\n            case \"com.amazonaws.kinesis#KMSOptInRequired\":\n              return [3 /*break*/, 12];\n            case \"KMSThrottlingException\":\n              return [3 /*break*/, 14];\n            case \"com.amazonaws.kinesis#KMSThrottlingException\":\n              return [3 /*break*/, 14];\n            case \"ProvisionedThroughputExceededException\":\n              return [3 /*break*/, 16];\n            case \"com.amazonaws.kinesis#ProvisionedThroughputExceededException\":\n              return [3 /*break*/, 16];\n            case \"ResourceNotFoundException\":\n              return [3 /*break*/, 18];\n            case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n              return [3 /*break*/, 18];\n          }\n          return [3 /*break*/, 20];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_o.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 21];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1KMSAccessDeniedExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_o.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 21];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1KMSDisabledExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_o.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 21];\n        case 8:\n          _f = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1KMSInvalidStateExceptionResponse(parsedOutput, context)];\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_o.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 21];\n        case 10:\n          _g = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1KMSNotFoundExceptionResponse(parsedOutput, context)];\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_o.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 21];\n        case 12:\n          _h = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1KMSOptInRequiredResponse(parsedOutput, context)];\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_o.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 21];\n        case 14:\n          _j = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1KMSThrottlingExceptionResponse(parsedOutput, context)];\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_o.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 21];\n        case 16:\n          _k = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1ProvisionedThroughputExceededExceptionResponse(parsedOutput, context)];\n        case 17:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _k.concat([_o.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 21];\n        case 18:\n          _l = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n        case 19:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _l.concat([_o.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 21];\n        case 20:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _o.label = 21;\n        case 21:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_json1_1PutRecordsCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var data, contents, response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 400) {\n            return [2 /*return*/, deserializeAws_json1_1PutRecordsCommandError(output, context)];\n          }\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          contents = {};\n          contents = deserializeAws_json1_1PutRecordsOutput(data, context);\n          response = __assign({\n            $metadata: deserializeMetadata(output),\n            __type: \"PutRecordsOutput\"\n          }, contents);\n          return [2 /*return*/, Promise.resolve(response)];\n      }\n    });\n  });\n};\nvar deserializeAws_json1_1PutRecordsCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, errorTypeParts, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, parsedBody, message;\n    var _m;\n    return __generator(this, function (_o) {\n      switch (_o.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _m = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_m.body = _o.sent(), _m)]));\n          errorCode = \"UnknownError\";\n          errorTypeParts = parsedOutput.body[\"__type\"].split(\"#\");\n          errorCode = errorTypeParts[1] === undefined ? errorTypeParts[0] : errorTypeParts[1];\n          _b = errorCode;\n          switch (_b) {\n            case \"InvalidArgumentException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.kinesis#InvalidArgumentException\":\n              return [3 /*break*/, 2];\n            case \"KMSAccessDeniedException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.kinesis#KMSAccessDeniedException\":\n              return [3 /*break*/, 4];\n            case \"KMSDisabledException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.kinesis#KMSDisabledException\":\n              return [3 /*break*/, 6];\n            case \"KMSInvalidStateException\":\n              return [3 /*break*/, 8];\n            case \"com.amazonaws.kinesis#KMSInvalidStateException\":\n              return [3 /*break*/, 8];\n            case \"KMSNotFoundException\":\n              return [3 /*break*/, 10];\n            case \"com.amazonaws.kinesis#KMSNotFoundException\":\n              return [3 /*break*/, 10];\n            case \"KMSOptInRequired\":\n              return [3 /*break*/, 12];\n            case \"com.amazonaws.kinesis#KMSOptInRequired\":\n              return [3 /*break*/, 12];\n            case \"KMSThrottlingException\":\n              return [3 /*break*/, 14];\n            case \"com.amazonaws.kinesis#KMSThrottlingException\":\n              return [3 /*break*/, 14];\n            case \"ProvisionedThroughputExceededException\":\n              return [3 /*break*/, 16];\n            case \"com.amazonaws.kinesis#ProvisionedThroughputExceededException\":\n              return [3 /*break*/, 16];\n            case \"ResourceNotFoundException\":\n              return [3 /*break*/, 18];\n            case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n              return [3 /*break*/, 18];\n          }\n          return [3 /*break*/, 20];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_o.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 21];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1KMSAccessDeniedExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_o.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 21];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1KMSDisabledExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_o.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 21];\n        case 8:\n          _f = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1KMSInvalidStateExceptionResponse(parsedOutput, context)];\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_o.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 21];\n        case 10:\n          _g = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1KMSNotFoundExceptionResponse(parsedOutput, context)];\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_o.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 21];\n        case 12:\n          _h = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1KMSOptInRequiredResponse(parsedOutput, context)];\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_o.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 21];\n        case 14:\n          _j = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1KMSThrottlingExceptionResponse(parsedOutput, context)];\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_o.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 21];\n        case 16:\n          _k = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1ProvisionedThroughputExceededExceptionResponse(parsedOutput, context)];\n        case 17:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _k.concat([_o.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 21];\n        case 18:\n          _l = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n        case 19:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _l.concat([_o.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 21];\n        case 20:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _o.label = 21;\n        case 21:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_json1_1RegisterStreamConsumerCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var data, contents, response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 400) {\n            return [2 /*return*/, deserializeAws_json1_1RegisterStreamConsumerCommandError(output, context)];\n          }\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          contents = {};\n          contents = deserializeAws_json1_1RegisterStreamConsumerOutput(data, context);\n          response = __assign({\n            $metadata: deserializeMetadata(output),\n            __type: \"RegisterStreamConsumerOutput\"\n          }, contents);\n          return [2 /*return*/, Promise.resolve(response)];\n      }\n    });\n  });\n};\nvar deserializeAws_json1_1RegisterStreamConsumerCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, errorTypeParts, _b, _c, _d, _e, _f, parsedBody, message;\n    var _g;\n    return __generator(this, function (_h) {\n      switch (_h.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _g = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_g.body = _h.sent(), _g)]));\n          errorCode = \"UnknownError\";\n          errorTypeParts = parsedOutput.body[\"__type\"].split(\"#\");\n          errorCode = errorTypeParts[1] === undefined ? errorTypeParts[0] : errorTypeParts[1];\n          _b = errorCode;\n          switch (_b) {\n            case \"InvalidArgumentException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.kinesis#InvalidArgumentException\":\n              return [3 /*break*/, 2];\n            case \"LimitExceededException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.kinesis#LimitExceededException\":\n              return [3 /*break*/, 4];\n            case \"ResourceInUseException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.kinesis#ResourceInUseException\":\n              return [3 /*break*/, 6];\n            case \"ResourceNotFoundException\":\n              return [3 /*break*/, 8];\n            case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n              return [3 /*break*/, 8];\n          }\n          return [3 /*break*/, 10];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 11];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 11];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1ResourceInUseExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 11];\n        case 8:\n          _f = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 11];\n        case 10:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _h.label = 11;\n        case 11:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_json1_1RemoveTagsFromStreamCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 400) {\n            return [2 /*return*/, deserializeAws_json1_1RemoveTagsFromStreamCommandError(output, context)];\n          }\n          return [4 /*yield*/, collectBody(output.body, context)];\n        case 1:\n          _a.sent();\n          response = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [2 /*return*/, Promise.resolve(response)];\n      }\n    });\n  });\n};\nvar deserializeAws_json1_1RemoveTagsFromStreamCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, errorTypeParts, _b, _c, _d, _e, _f, parsedBody, message;\n    var _g;\n    return __generator(this, function (_h) {\n      switch (_h.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _g = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_g.body = _h.sent(), _g)]));\n          errorCode = \"UnknownError\";\n          errorTypeParts = parsedOutput.body[\"__type\"].split(\"#\");\n          errorCode = errorTypeParts[1] === undefined ? errorTypeParts[0] : errorTypeParts[1];\n          _b = errorCode;\n          switch (_b) {\n            case \"InvalidArgumentException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.kinesis#InvalidArgumentException\":\n              return [3 /*break*/, 2];\n            case \"LimitExceededException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.kinesis#LimitExceededException\":\n              return [3 /*break*/, 4];\n            case \"ResourceInUseException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.kinesis#ResourceInUseException\":\n              return [3 /*break*/, 6];\n            case \"ResourceNotFoundException\":\n              return [3 /*break*/, 8];\n            case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n              return [3 /*break*/, 8];\n          }\n          return [3 /*break*/, 10];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 11];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 11];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1ResourceInUseExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 11];\n        case 8:\n          _f = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 11];\n        case 10:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _h.label = 11;\n        case 11:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_json1_1SplitShardCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 400) {\n            return [2 /*return*/, deserializeAws_json1_1SplitShardCommandError(output, context)];\n          }\n          return [4 /*yield*/, collectBody(output.body, context)];\n        case 1:\n          _a.sent();\n          response = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [2 /*return*/, Promise.resolve(response)];\n      }\n    });\n  });\n};\nvar deserializeAws_json1_1SplitShardCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, errorTypeParts, _b, _c, _d, _e, _f, parsedBody, message;\n    var _g;\n    return __generator(this, function (_h) {\n      switch (_h.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _g = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_g.body = _h.sent(), _g)]));\n          errorCode = \"UnknownError\";\n          errorTypeParts = parsedOutput.body[\"__type\"].split(\"#\");\n          errorCode = errorTypeParts[1] === undefined ? errorTypeParts[0] : errorTypeParts[1];\n          _b = errorCode;\n          switch (_b) {\n            case \"InvalidArgumentException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.kinesis#InvalidArgumentException\":\n              return [3 /*break*/, 2];\n            case \"LimitExceededException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.kinesis#LimitExceededException\":\n              return [3 /*break*/, 4];\n            case \"ResourceInUseException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.kinesis#ResourceInUseException\":\n              return [3 /*break*/, 6];\n            case \"ResourceNotFoundException\":\n              return [3 /*break*/, 8];\n            case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n              return [3 /*break*/, 8];\n          }\n          return [3 /*break*/, 10];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 11];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 11];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1ResourceInUseExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 11];\n        case 8:\n          _f = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 11];\n        case 10:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _h.label = 11;\n        case 11:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_json1_1StartStreamEncryptionCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 400) {\n            return [2 /*return*/, deserializeAws_json1_1StartStreamEncryptionCommandError(output, context)];\n          }\n          return [4 /*yield*/, collectBody(output.body, context)];\n        case 1:\n          _a.sent();\n          response = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [2 /*return*/, Promise.resolve(response)];\n      }\n    });\n  });\n};\nvar deserializeAws_json1_1StartStreamEncryptionCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, errorTypeParts, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, parsedBody, message;\n    var _o;\n    return __generator(this, function (_p) {\n      switch (_p.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _o = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_o.body = _p.sent(), _o)]));\n          errorCode = \"UnknownError\";\n          errorTypeParts = parsedOutput.body[\"__type\"].split(\"#\");\n          errorCode = errorTypeParts[1] === undefined ? errorTypeParts[0] : errorTypeParts[1];\n          _b = errorCode;\n          switch (_b) {\n            case \"InvalidArgumentException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.kinesis#InvalidArgumentException\":\n              return [3 /*break*/, 2];\n            case \"KMSAccessDeniedException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.kinesis#KMSAccessDeniedException\":\n              return [3 /*break*/, 4];\n            case \"KMSDisabledException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.kinesis#KMSDisabledException\":\n              return [3 /*break*/, 6];\n            case \"KMSInvalidStateException\":\n              return [3 /*break*/, 8];\n            case \"com.amazonaws.kinesis#KMSInvalidStateException\":\n              return [3 /*break*/, 8];\n            case \"KMSNotFoundException\":\n              return [3 /*break*/, 10];\n            case \"com.amazonaws.kinesis#KMSNotFoundException\":\n              return [3 /*break*/, 10];\n            case \"KMSOptInRequired\":\n              return [3 /*break*/, 12];\n            case \"com.amazonaws.kinesis#KMSOptInRequired\":\n              return [3 /*break*/, 12];\n            case \"KMSThrottlingException\":\n              return [3 /*break*/, 14];\n            case \"com.amazonaws.kinesis#KMSThrottlingException\":\n              return [3 /*break*/, 14];\n            case \"LimitExceededException\":\n              return [3 /*break*/, 16];\n            case \"com.amazonaws.kinesis#LimitExceededException\":\n              return [3 /*break*/, 16];\n            case \"ResourceInUseException\":\n              return [3 /*break*/, 18];\n            case \"com.amazonaws.kinesis#ResourceInUseException\":\n              return [3 /*break*/, 18];\n            case \"ResourceNotFoundException\":\n              return [3 /*break*/, 20];\n            case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n              return [3 /*break*/, 20];\n          }\n          return [3 /*break*/, 22];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_p.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 23];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1KMSAccessDeniedExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_p.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 23];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1KMSDisabledExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_p.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 23];\n        case 8:\n          _f = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1KMSInvalidStateExceptionResponse(parsedOutput, context)];\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_p.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 23];\n        case 10:\n          _g = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1KMSNotFoundExceptionResponse(parsedOutput, context)];\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_p.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 23];\n        case 12:\n          _h = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1KMSOptInRequiredResponse(parsedOutput, context)];\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_p.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 23];\n        case 14:\n          _j = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1KMSThrottlingExceptionResponse(parsedOutput, context)];\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_p.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 23];\n        case 16:\n          _k = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n        case 17:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _k.concat([_p.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 23];\n        case 18:\n          _l = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1ResourceInUseExceptionResponse(parsedOutput, context)];\n        case 19:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _l.concat([_p.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 23];\n        case 20:\n          _m = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n        case 21:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _m.concat([_p.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 23];\n        case 22:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _p.label = 23;\n        case 23:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_json1_1StopStreamEncryptionCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 400) {\n            return [2 /*return*/, deserializeAws_json1_1StopStreamEncryptionCommandError(output, context)];\n          }\n          return [4 /*yield*/, collectBody(output.body, context)];\n        case 1:\n          _a.sent();\n          response = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [2 /*return*/, Promise.resolve(response)];\n      }\n    });\n  });\n};\nvar deserializeAws_json1_1StopStreamEncryptionCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, errorTypeParts, _b, _c, _d, _e, _f, parsedBody, message;\n    var _g;\n    return __generator(this, function (_h) {\n      switch (_h.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _g = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_g.body = _h.sent(), _g)]));\n          errorCode = \"UnknownError\";\n          errorTypeParts = parsedOutput.body[\"__type\"].split(\"#\");\n          errorCode = errorTypeParts[1] === undefined ? errorTypeParts[0] : errorTypeParts[1];\n          _b = errorCode;\n          switch (_b) {\n            case \"InvalidArgumentException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.kinesis#InvalidArgumentException\":\n              return [3 /*break*/, 2];\n            case \"LimitExceededException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.kinesis#LimitExceededException\":\n              return [3 /*break*/, 4];\n            case \"ResourceInUseException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.kinesis#ResourceInUseException\":\n              return [3 /*break*/, 6];\n            case \"ResourceNotFoundException\":\n              return [3 /*break*/, 8];\n            case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n              return [3 /*break*/, 8];\n          }\n          return [3 /*break*/, 10];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 11];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 11];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1ResourceInUseExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 11];\n        case 8:\n          _f = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 11];\n        case 10:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _h.label = 11;\n        case 11:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_json1_1SubscribeToShardCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var data, contents, response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 400) {\n            return [2 /*return*/, deserializeAws_json1_1SubscribeToShardCommandError(output, context)];\n          }\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          contents = {};\n          contents = deserializeAws_json1_1SubscribeToShardOutput(data, context);\n          response = __assign({\n            $metadata: deserializeMetadata(output),\n            __type: \"SubscribeToShardOutput\"\n          }, contents);\n          return [2 /*return*/, Promise.resolve(response)];\n      }\n    });\n  });\n};\nvar deserializeAws_json1_1SubscribeToShardCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, errorTypeParts, _b, _c, _d, _e, _f, parsedBody, message;\n    var _g;\n    return __generator(this, function (_h) {\n      switch (_h.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _g = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_g.body = _h.sent(), _g)]));\n          errorCode = \"UnknownError\";\n          errorTypeParts = parsedOutput.body[\"__type\"].split(\"#\");\n          errorCode = errorTypeParts[1] === undefined ? errorTypeParts[0] : errorTypeParts[1];\n          _b = errorCode;\n          switch (_b) {\n            case \"InvalidArgumentException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.kinesis#InvalidArgumentException\":\n              return [3 /*break*/, 2];\n            case \"LimitExceededException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.kinesis#LimitExceededException\":\n              return [3 /*break*/, 4];\n            case \"ResourceInUseException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.kinesis#ResourceInUseException\":\n              return [3 /*break*/, 6];\n            case \"ResourceNotFoundException\":\n              return [3 /*break*/, 8];\n            case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n              return [3 /*break*/, 8];\n          }\n          return [3 /*break*/, 10];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 11];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 11];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1ResourceInUseExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 11];\n        case 8:\n          _f = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 11];\n        case 10:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _h.label = 11;\n        case 11:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_json1_1UpdateShardCountCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var data, contents, response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 400) {\n            return [2 /*return*/, deserializeAws_json1_1UpdateShardCountCommandError(output, context)];\n          }\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          contents = {};\n          contents = deserializeAws_json1_1UpdateShardCountOutput(data, context);\n          response = __assign({\n            $metadata: deserializeMetadata(output),\n            __type: \"UpdateShardCountOutput\"\n          }, contents);\n          return [2 /*return*/, Promise.resolve(response)];\n      }\n    });\n  });\n};\nvar deserializeAws_json1_1UpdateShardCountCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, errorTypeParts, _b, _c, _d, _e, _f, parsedBody, message;\n    var _g;\n    return __generator(this, function (_h) {\n      switch (_h.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _g = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_g.body = _h.sent(), _g)]));\n          errorCode = \"UnknownError\";\n          errorTypeParts = parsedOutput.body[\"__type\"].split(\"#\");\n          errorCode = errorTypeParts[1] === undefined ? errorTypeParts[0] : errorTypeParts[1];\n          _b = errorCode;\n          switch (_b) {\n            case \"InvalidArgumentException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.kinesis#InvalidArgumentException\":\n              return [3 /*break*/, 2];\n            case \"LimitExceededException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.kinesis#LimitExceededException\":\n              return [3 /*break*/, 4];\n            case \"ResourceInUseException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.kinesis#ResourceInUseException\":\n              return [3 /*break*/, 6];\n            case \"ResourceNotFoundException\":\n              return [3 /*break*/, 8];\n            case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n              return [3 /*break*/, 8];\n          }\n          return [3 /*break*/, 10];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 11];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 11];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1ResourceInUseExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 11];\n        case 8:\n          _f = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 11];\n        case 10:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _h.label = 11;\n        case 11:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nvar deserializeAws_json1_1ExpiredIteratorExceptionResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var body, deserialized, contents;\n    return __generator(this, function (_a) {\n      body = parsedOutput.body;\n      deserialized = deserializeAws_json1_1ExpiredIteratorException(body, context);\n      contents = __assign({\n        name: \"ExpiredIteratorException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput)\n      }, deserialized);\n      return [2 /*return*/, contents];\n    });\n  });\n};\nvar deserializeAws_json1_1ExpiredNextTokenExceptionResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var body, deserialized, contents;\n    return __generator(this, function (_a) {\n      body = parsedOutput.body;\n      deserialized = deserializeAws_json1_1ExpiredNextTokenException(body, context);\n      contents = __assign({\n        name: \"ExpiredNextTokenException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput)\n      }, deserialized);\n      return [2 /*return*/, contents];\n    });\n  });\n};\nvar deserializeAws_json1_1InvalidArgumentExceptionResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var body, deserialized, contents;\n    return __generator(this, function (_a) {\n      body = parsedOutput.body;\n      deserialized = deserializeAws_json1_1InvalidArgumentException(body, context);\n      contents = __assign({\n        name: \"InvalidArgumentException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput)\n      }, deserialized);\n      return [2 /*return*/, contents];\n    });\n  });\n};\nvar deserializeAws_json1_1KMSAccessDeniedExceptionResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var body, deserialized, contents;\n    return __generator(this, function (_a) {\n      body = parsedOutput.body;\n      deserialized = deserializeAws_json1_1KMSAccessDeniedException(body, context);\n      contents = __assign({\n        name: \"KMSAccessDeniedException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput)\n      }, deserialized);\n      return [2 /*return*/, contents];\n    });\n  });\n};\nvar deserializeAws_json1_1KMSDisabledExceptionResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var body, deserialized, contents;\n    return __generator(this, function (_a) {\n      body = parsedOutput.body;\n      deserialized = deserializeAws_json1_1KMSDisabledException(body, context);\n      contents = __assign({\n        name: \"KMSDisabledException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput)\n      }, deserialized);\n      return [2 /*return*/, contents];\n    });\n  });\n};\nvar deserializeAws_json1_1KMSInvalidStateExceptionResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var body, deserialized, contents;\n    return __generator(this, function (_a) {\n      body = parsedOutput.body;\n      deserialized = deserializeAws_json1_1KMSInvalidStateException(body, context);\n      contents = __assign({\n        name: \"KMSInvalidStateException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput)\n      }, deserialized);\n      return [2 /*return*/, contents];\n    });\n  });\n};\nvar deserializeAws_json1_1KMSNotFoundExceptionResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var body, deserialized, contents;\n    return __generator(this, function (_a) {\n      body = parsedOutput.body;\n      deserialized = deserializeAws_json1_1KMSNotFoundException(body, context);\n      contents = __assign({\n        name: \"KMSNotFoundException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput)\n      }, deserialized);\n      return [2 /*return*/, contents];\n    });\n  });\n};\nvar deserializeAws_json1_1KMSOptInRequiredResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var body, deserialized, contents;\n    return __generator(this, function (_a) {\n      body = parsedOutput.body;\n      deserialized = deserializeAws_json1_1KMSOptInRequired(body, context);\n      contents = __assign({\n        name: \"KMSOptInRequired\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput)\n      }, deserialized);\n      return [2 /*return*/, contents];\n    });\n  });\n};\nvar deserializeAws_json1_1KMSThrottlingExceptionResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var body, deserialized, contents;\n    return __generator(this, function (_a) {\n      body = parsedOutput.body;\n      deserialized = deserializeAws_json1_1KMSThrottlingException(body, context);\n      contents = __assign({\n        name: \"KMSThrottlingException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput)\n      }, deserialized);\n      return [2 /*return*/, contents];\n    });\n  });\n};\nvar deserializeAws_json1_1LimitExceededExceptionResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var body, deserialized, contents;\n    return __generator(this, function (_a) {\n      body = parsedOutput.body;\n      deserialized = deserializeAws_json1_1LimitExceededException(body, context);\n      contents = __assign({\n        name: \"LimitExceededException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput)\n      }, deserialized);\n      return [2 /*return*/, contents];\n    });\n  });\n};\nvar deserializeAws_json1_1ProvisionedThroughputExceededExceptionResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var body, deserialized, contents;\n    return __generator(this, function (_a) {\n      body = parsedOutput.body;\n      deserialized = deserializeAws_json1_1ProvisionedThroughputExceededException(body, context);\n      contents = __assign({\n        name: \"ProvisionedThroughputExceededException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput)\n      }, deserialized);\n      return [2 /*return*/, contents];\n    });\n  });\n};\nvar deserializeAws_json1_1ResourceInUseExceptionResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var body, deserialized, contents;\n    return __generator(this, function (_a) {\n      body = parsedOutput.body;\n      deserialized = deserializeAws_json1_1ResourceInUseException(body, context);\n      contents = __assign({\n        name: \"ResourceInUseException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput)\n      }, deserialized);\n      return [2 /*return*/, contents];\n    });\n  });\n};\nvar deserializeAws_json1_1ResourceNotFoundExceptionResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var body, deserialized, contents;\n    return __generator(this, function (_a) {\n      body = parsedOutput.body;\n      deserialized = deserializeAws_json1_1ResourceNotFoundException(body, context);\n      contents = __assign({\n        name: \"ResourceNotFoundException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput)\n      }, deserialized);\n      return [2 /*return*/, contents];\n    });\n  });\n};\nvar serializeAws_json1_1AddTagsToStreamInput = function (input, context) {\n  return __assign(__assign({}, input.StreamName !== undefined && {\n    StreamName: input.StreamName\n  }), input.Tags !== undefined && {\n    Tags: serializeAws_json1_1TagMap(input.Tags, context)\n  });\n};\nvar serializeAws_json1_1CreateStreamInput = function (input, context) {\n  return __assign(__assign({}, input.ShardCount !== undefined && {\n    ShardCount: input.ShardCount\n  }), input.StreamName !== undefined && {\n    StreamName: input.StreamName\n  });\n};\nvar serializeAws_json1_1DecreaseStreamRetentionPeriodInput = function (input, context) {\n  return __assign(__assign({}, input.RetentionPeriodHours !== undefined && {\n    RetentionPeriodHours: input.RetentionPeriodHours\n  }), input.StreamName !== undefined && {\n    StreamName: input.StreamName\n  });\n};\nvar serializeAws_json1_1DeleteStreamInput = function (input, context) {\n  return __assign(__assign({}, input.EnforceConsumerDeletion !== undefined && {\n    EnforceConsumerDeletion: input.EnforceConsumerDeletion\n  }), input.StreamName !== undefined && {\n    StreamName: input.StreamName\n  });\n};\nvar serializeAws_json1_1DeregisterStreamConsumerInput = function (input, context) {\n  return __assign(__assign(__assign({}, input.ConsumerARN !== undefined && {\n    ConsumerARN: input.ConsumerARN\n  }), input.ConsumerName !== undefined && {\n    ConsumerName: input.ConsumerName\n  }), input.StreamARN !== undefined && {\n    StreamARN: input.StreamARN\n  });\n};\nvar serializeAws_json1_1DescribeLimitsInput = function (input, context) {\n  return {};\n};\nvar serializeAws_json1_1DescribeStreamConsumerInput = function (input, context) {\n  return __assign(__assign(__assign({}, input.ConsumerARN !== undefined && {\n    ConsumerARN: input.ConsumerARN\n  }), input.ConsumerName !== undefined && {\n    ConsumerName: input.ConsumerName\n  }), input.StreamARN !== undefined && {\n    StreamARN: input.StreamARN\n  });\n};\nvar serializeAws_json1_1DescribeStreamInput = function (input, context) {\n  return __assign(__assign(__assign({}, input.ExclusiveStartShardId !== undefined && {\n    ExclusiveStartShardId: input.ExclusiveStartShardId\n  }), input.Limit !== undefined && {\n    Limit: input.Limit\n  }), input.StreamName !== undefined && {\n    StreamName: input.StreamName\n  });\n};\nvar serializeAws_json1_1DescribeStreamSummaryInput = function (input, context) {\n  return __assign({}, input.StreamName !== undefined && {\n    StreamName: input.StreamName\n  });\n};\nvar serializeAws_json1_1DisableEnhancedMonitoringInput = function (input, context) {\n  return __assign(__assign({}, input.ShardLevelMetrics !== undefined && {\n    ShardLevelMetrics: serializeAws_json1_1MetricsNameList(input.ShardLevelMetrics, context)\n  }), input.StreamName !== undefined && {\n    StreamName: input.StreamName\n  });\n};\nvar serializeAws_json1_1EnableEnhancedMonitoringInput = function (input, context) {\n  return __assign(__assign({}, input.ShardLevelMetrics !== undefined && {\n    ShardLevelMetrics: serializeAws_json1_1MetricsNameList(input.ShardLevelMetrics, context)\n  }), input.StreamName !== undefined && {\n    StreamName: input.StreamName\n  });\n};\nvar serializeAws_json1_1GetRecordsInput = function (input, context) {\n  return __assign(__assign({}, input.Limit !== undefined && {\n    Limit: input.Limit\n  }), input.ShardIterator !== undefined && {\n    ShardIterator: input.ShardIterator\n  });\n};\nvar serializeAws_json1_1GetShardIteratorInput = function (input, context) {\n  return __assign(__assign(__assign(__assign(__assign({}, input.ShardId !== undefined && {\n    ShardId: input.ShardId\n  }), input.ShardIteratorType !== undefined && {\n    ShardIteratorType: input.ShardIteratorType\n  }), input.StartingSequenceNumber !== undefined && {\n    StartingSequenceNumber: input.StartingSequenceNumber\n  }), input.StreamName !== undefined && {\n    StreamName: input.StreamName\n  }), input.Timestamp !== undefined && {\n    Timestamp: Math.round(input.Timestamp.getTime() / 1000)\n  });\n};\nvar serializeAws_json1_1IncreaseStreamRetentionPeriodInput = function (input, context) {\n  return __assign(__assign({}, input.RetentionPeriodHours !== undefined && {\n    RetentionPeriodHours: input.RetentionPeriodHours\n  }), input.StreamName !== undefined && {\n    StreamName: input.StreamName\n  });\n};\nvar serializeAws_json1_1ListShardsInput = function (input, context) {\n  return __assign(__assign(__assign(__assign(__assign({}, input.ExclusiveStartShardId !== undefined && {\n    ExclusiveStartShardId: input.ExclusiveStartShardId\n  }), input.MaxResults !== undefined && {\n    MaxResults: input.MaxResults\n  }), input.NextToken !== undefined && {\n    NextToken: input.NextToken\n  }), input.StreamCreationTimestamp !== undefined && {\n    StreamCreationTimestamp: Math.round(input.StreamCreationTimestamp.getTime() / 1000)\n  }), input.StreamName !== undefined && {\n    StreamName: input.StreamName\n  });\n};\nvar serializeAws_json1_1ListStreamConsumersInput = function (input, context) {\n  return __assign(__assign(__assign(__assign({}, input.MaxResults !== undefined && {\n    MaxResults: input.MaxResults\n  }), input.NextToken !== undefined && {\n    NextToken: input.NextToken\n  }), input.StreamARN !== undefined && {\n    StreamARN: input.StreamARN\n  }), input.StreamCreationTimestamp !== undefined && {\n    StreamCreationTimestamp: Math.round(input.StreamCreationTimestamp.getTime() / 1000)\n  });\n};\nvar serializeAws_json1_1ListStreamsInput = function (input, context) {\n  return __assign(__assign({}, input.ExclusiveStartStreamName !== undefined && {\n    ExclusiveStartStreamName: input.ExclusiveStartStreamName\n  }), input.Limit !== undefined && {\n    Limit: input.Limit\n  });\n};\nvar serializeAws_json1_1ListTagsForStreamInput = function (input, context) {\n  return __assign(__assign(__assign({}, input.ExclusiveStartTagKey !== undefined && {\n    ExclusiveStartTagKey: input.ExclusiveStartTagKey\n  }), input.Limit !== undefined && {\n    Limit: input.Limit\n  }), input.StreamName !== undefined && {\n    StreamName: input.StreamName\n  });\n};\nvar serializeAws_json1_1MergeShardsInput = function (input, context) {\n  return __assign(__assign(__assign({}, input.AdjacentShardToMerge !== undefined && {\n    AdjacentShardToMerge: input.AdjacentShardToMerge\n  }), input.ShardToMerge !== undefined && {\n    ShardToMerge: input.ShardToMerge\n  }), input.StreamName !== undefined && {\n    StreamName: input.StreamName\n  });\n};\nvar serializeAws_json1_1MetricsNameList = function (input, context) {\n  return input.map(function (entry) {\n    return entry;\n  });\n};\nvar serializeAws_json1_1PutRecordInput = function (input, context) {\n  return __assign(__assign(__assign(__assign(__assign({}, input.Data !== undefined && {\n    Data: context.base64Encoder(input.Data)\n  }), input.ExplicitHashKey !== undefined && {\n    ExplicitHashKey: input.ExplicitHashKey\n  }), input.PartitionKey !== undefined && {\n    PartitionKey: input.PartitionKey\n  }), input.SequenceNumberForOrdering !== undefined && {\n    SequenceNumberForOrdering: input.SequenceNumberForOrdering\n  }), input.StreamName !== undefined && {\n    StreamName: input.StreamName\n  });\n};\nvar serializeAws_json1_1PutRecordsInput = function (input, context) {\n  return __assign(__assign({}, input.Records !== undefined && {\n    Records: serializeAws_json1_1PutRecordsRequestEntryList(input.Records, context)\n  }), input.StreamName !== undefined && {\n    StreamName: input.StreamName\n  });\n};\nvar serializeAws_json1_1PutRecordsRequestEntry = function (input, context) {\n  return __assign(__assign(__assign({}, input.Data !== undefined && {\n    Data: context.base64Encoder(input.Data)\n  }), input.ExplicitHashKey !== undefined && {\n    ExplicitHashKey: input.ExplicitHashKey\n  }), input.PartitionKey !== undefined && {\n    PartitionKey: input.PartitionKey\n  });\n};\nvar serializeAws_json1_1PutRecordsRequestEntryList = function (input, context) {\n  return input.map(function (entry) {\n    return serializeAws_json1_1PutRecordsRequestEntry(entry, context);\n  });\n};\nvar serializeAws_json1_1RegisterStreamConsumerInput = function (input, context) {\n  return __assign(__assign({}, input.ConsumerName !== undefined && {\n    ConsumerName: input.ConsumerName\n  }), input.StreamARN !== undefined && {\n    StreamARN: input.StreamARN\n  });\n};\nvar serializeAws_json1_1RemoveTagsFromStreamInput = function (input, context) {\n  return __assign(__assign({}, input.StreamName !== undefined && {\n    StreamName: input.StreamName\n  }), input.TagKeys !== undefined && {\n    TagKeys: serializeAws_json1_1TagKeyList(input.TagKeys, context)\n  });\n};\nvar serializeAws_json1_1SplitShardInput = function (input, context) {\n  return __assign(__assign(__assign({}, input.NewStartingHashKey !== undefined && {\n    NewStartingHashKey: input.NewStartingHashKey\n  }), input.ShardToSplit !== undefined && {\n    ShardToSplit: input.ShardToSplit\n  }), input.StreamName !== undefined && {\n    StreamName: input.StreamName\n  });\n};\nvar serializeAws_json1_1StartingPosition = function (input, context) {\n  return __assign(__assign(__assign({}, input.SequenceNumber !== undefined && {\n    SequenceNumber: input.SequenceNumber\n  }), input.Timestamp !== undefined && {\n    Timestamp: Math.round(input.Timestamp.getTime() / 1000)\n  }), input.Type !== undefined && {\n    Type: input.Type\n  });\n};\nvar serializeAws_json1_1StartStreamEncryptionInput = function (input, context) {\n  return __assign(__assign(__assign({}, input.EncryptionType !== undefined && {\n    EncryptionType: input.EncryptionType\n  }), input.KeyId !== undefined && {\n    KeyId: input.KeyId\n  }), input.StreamName !== undefined && {\n    StreamName: input.StreamName\n  });\n};\nvar serializeAws_json1_1StopStreamEncryptionInput = function (input, context) {\n  return __assign(__assign(__assign({}, input.EncryptionType !== undefined && {\n    EncryptionType: input.EncryptionType\n  }), input.KeyId !== undefined && {\n    KeyId: input.KeyId\n  }), input.StreamName !== undefined && {\n    StreamName: input.StreamName\n  });\n};\nvar serializeAws_json1_1SubscribeToShardInput = function (input, context) {\n  return __assign(__assign(__assign({}, input.ConsumerARN !== undefined && {\n    ConsumerARN: input.ConsumerARN\n  }), input.ShardId !== undefined && {\n    ShardId: input.ShardId\n  }), input.StartingPosition !== undefined && {\n    StartingPosition: serializeAws_json1_1StartingPosition(input.StartingPosition, context)\n  });\n};\nvar serializeAws_json1_1TagKeyList = function (input, context) {\n  return input.map(function (entry) {\n    return entry;\n  });\n};\nvar serializeAws_json1_1TagMap = function (input, context) {\n  return Object.entries(input).reduce(function (acc, _a) {\n    var _b;\n    var _c = __read(_a, 2),\n      key = _c[0],\n      value = _c[1];\n    return __assign(__assign({}, acc), (_b = {}, _b[key] = value, _b));\n  }, {});\n};\nvar serializeAws_json1_1UpdateShardCountInput = function (input, context) {\n  return __assign(__assign(__assign({}, input.ScalingType !== undefined && {\n    ScalingType: input.ScalingType\n  }), input.StreamName !== undefined && {\n    StreamName: input.StreamName\n  }), input.TargetShardCount !== undefined && {\n    TargetShardCount: input.TargetShardCount\n  });\n};\nvar deserializeAws_json1_1Consumer = function (output, context) {\n  return {\n    __type: \"Consumer\",\n    ConsumerARN: output.ConsumerARN !== undefined && output.ConsumerARN !== null ? output.ConsumerARN : undefined,\n    ConsumerCreationTimestamp: output.ConsumerCreationTimestamp !== undefined && output.ConsumerCreationTimestamp !== null ? new Date(Math.round(output.ConsumerCreationTimestamp * 1000)) : undefined,\n    ConsumerName: output.ConsumerName !== undefined && output.ConsumerName !== null ? output.ConsumerName : undefined,\n    ConsumerStatus: output.ConsumerStatus !== undefined && output.ConsumerStatus !== null ? output.ConsumerStatus : undefined\n  };\n};\nvar deserializeAws_json1_1ConsumerDescription = function (output, context) {\n  return {\n    __type: \"ConsumerDescription\",\n    ConsumerARN: output.ConsumerARN !== undefined && output.ConsumerARN !== null ? output.ConsumerARN : undefined,\n    ConsumerCreationTimestamp: output.ConsumerCreationTimestamp !== undefined && output.ConsumerCreationTimestamp !== null ? new Date(Math.round(output.ConsumerCreationTimestamp * 1000)) : undefined,\n    ConsumerName: output.ConsumerName !== undefined && output.ConsumerName !== null ? output.ConsumerName : undefined,\n    ConsumerStatus: output.ConsumerStatus !== undefined && output.ConsumerStatus !== null ? output.ConsumerStatus : undefined,\n    StreamARN: output.StreamARN !== undefined && output.StreamARN !== null ? output.StreamARN : undefined\n  };\n};\nvar deserializeAws_json1_1ConsumerList = function (output, context) {\n  return (output || []).map(function (entry) {\n    return deserializeAws_json1_1Consumer(entry, context);\n  });\n};\nvar deserializeAws_json1_1DescribeLimitsOutput = function (output, context) {\n  return {\n    __type: \"DescribeLimitsOutput\",\n    OpenShardCount: output.OpenShardCount !== undefined && output.OpenShardCount !== null ? output.OpenShardCount : undefined,\n    ShardLimit: output.ShardLimit !== undefined && output.ShardLimit !== null ? output.ShardLimit : undefined\n  };\n};\nvar deserializeAws_json1_1DescribeStreamConsumerOutput = function (output, context) {\n  return {\n    __type: \"DescribeStreamConsumerOutput\",\n    ConsumerDescription: output.ConsumerDescription !== undefined && output.ConsumerDescription !== null ? deserializeAws_json1_1ConsumerDescription(output.ConsumerDescription, context) : undefined\n  };\n};\nvar deserializeAws_json1_1DescribeStreamOutput = function (output, context) {\n  return {\n    __type: \"DescribeStreamOutput\",\n    StreamDescription: output.StreamDescription !== undefined && output.StreamDescription !== null ? deserializeAws_json1_1StreamDescription(output.StreamDescription, context) : undefined\n  };\n};\nvar deserializeAws_json1_1DescribeStreamSummaryOutput = function (output, context) {\n  return {\n    __type: \"DescribeStreamSummaryOutput\",\n    StreamDescriptionSummary: output.StreamDescriptionSummary !== undefined && output.StreamDescriptionSummary !== null ? deserializeAws_json1_1StreamDescriptionSummary(output.StreamDescriptionSummary, context) : undefined\n  };\n};\nvar deserializeAws_json1_1EnhancedMetrics = function (output, context) {\n  return {\n    __type: \"EnhancedMetrics\",\n    ShardLevelMetrics: output.ShardLevelMetrics !== undefined && output.ShardLevelMetrics !== null ? deserializeAws_json1_1MetricsNameList(output.ShardLevelMetrics, context) : undefined\n  };\n};\nvar deserializeAws_json1_1EnhancedMonitoringList = function (output, context) {\n  return (output || []).map(function (entry) {\n    return deserializeAws_json1_1EnhancedMetrics(entry, context);\n  });\n};\nvar deserializeAws_json1_1EnhancedMonitoringOutput = function (output, context) {\n  return {\n    __type: \"EnhancedMonitoringOutput\",\n    CurrentShardLevelMetrics: output.CurrentShardLevelMetrics !== undefined && output.CurrentShardLevelMetrics !== null ? deserializeAws_json1_1MetricsNameList(output.CurrentShardLevelMetrics, context) : undefined,\n    DesiredShardLevelMetrics: output.DesiredShardLevelMetrics !== undefined && output.DesiredShardLevelMetrics !== null ? deserializeAws_json1_1MetricsNameList(output.DesiredShardLevelMetrics, context) : undefined,\n    StreamName: output.StreamName !== undefined && output.StreamName !== null ? output.StreamName : undefined\n  };\n};\nvar deserializeAws_json1_1ExpiredIteratorException = function (output, context) {\n  return {\n    __type: \"ExpiredIteratorException\",\n    message: output.message !== undefined && output.message !== null ? output.message : undefined\n  };\n};\nvar deserializeAws_json1_1ExpiredNextTokenException = function (output, context) {\n  return {\n    __type: \"ExpiredNextTokenException\",\n    message: output.message !== undefined && output.message !== null ? output.message : undefined\n  };\n};\nvar deserializeAws_json1_1GetRecordsOutput = function (output, context) {\n  return {\n    __type: \"GetRecordsOutput\",\n    MillisBehindLatest: output.MillisBehindLatest !== undefined && output.MillisBehindLatest !== null ? output.MillisBehindLatest : undefined,\n    NextShardIterator: output.NextShardIterator !== undefined && output.NextShardIterator !== null ? output.NextShardIterator : undefined,\n    Records: output.Records !== undefined && output.Records !== null ? deserializeAws_json1_1RecordList(output.Records, context) : undefined\n  };\n};\nvar deserializeAws_json1_1GetShardIteratorOutput = function (output, context) {\n  return {\n    __type: \"GetShardIteratorOutput\",\n    ShardIterator: output.ShardIterator !== undefined && output.ShardIterator !== null ? output.ShardIterator : undefined\n  };\n};\nvar deserializeAws_json1_1HashKeyRange = function (output, context) {\n  return {\n    __type: \"HashKeyRange\",\n    EndingHashKey: output.EndingHashKey !== undefined && output.EndingHashKey !== null ? output.EndingHashKey : undefined,\n    StartingHashKey: output.StartingHashKey !== undefined && output.StartingHashKey !== null ? output.StartingHashKey : undefined\n  };\n};\nvar deserializeAws_json1_1InternalFailureException = function (output, context) {\n  return {\n    __type: \"InternalFailureException\",\n    message: output.message !== undefined && output.message !== null ? output.message : undefined\n  };\n};\nvar deserializeAws_json1_1InvalidArgumentException = function (output, context) {\n  return {\n    __type: \"InvalidArgumentException\",\n    message: output.message !== undefined && output.message !== null ? output.message : undefined\n  };\n};\nvar deserializeAws_json1_1KMSAccessDeniedException = function (output, context) {\n  return {\n    __type: \"KMSAccessDeniedException\",\n    message: output.message !== undefined && output.message !== null ? output.message : undefined\n  };\n};\nvar deserializeAws_json1_1KMSDisabledException = function (output, context) {\n  return {\n    __type: \"KMSDisabledException\",\n    message: output.message !== undefined && output.message !== null ? output.message : undefined\n  };\n};\nvar deserializeAws_json1_1KMSInvalidStateException = function (output, context) {\n  return {\n    __type: \"KMSInvalidStateException\",\n    message: output.message !== undefined && output.message !== null ? output.message : undefined\n  };\n};\nvar deserializeAws_json1_1KMSNotFoundException = function (output, context) {\n  return {\n    __type: \"KMSNotFoundException\",\n    message: output.message !== undefined && output.message !== null ? output.message : undefined\n  };\n};\nvar deserializeAws_json1_1KMSOptInRequired = function (output, context) {\n  return {\n    __type: \"KMSOptInRequired\",\n    message: output.message !== undefined && output.message !== null ? output.message : undefined\n  };\n};\nvar deserializeAws_json1_1KMSThrottlingException = function (output, context) {\n  return {\n    __type: \"KMSThrottlingException\",\n    message: output.message !== undefined && output.message !== null ? output.message : undefined\n  };\n};\nvar deserializeAws_json1_1LimitExceededException = function (output, context) {\n  return {\n    __type: \"LimitExceededException\",\n    message: output.message !== undefined && output.message !== null ? output.message : undefined\n  };\n};\nvar deserializeAws_json1_1ListShardsOutput = function (output, context) {\n  return {\n    __type: \"ListShardsOutput\",\n    NextToken: output.NextToken !== undefined && output.NextToken !== null ? output.NextToken : undefined,\n    Shards: output.Shards !== undefined && output.Shards !== null ? deserializeAws_json1_1ShardList(output.Shards, context) : undefined\n  };\n};\nvar deserializeAws_json1_1ListStreamConsumersOutput = function (output, context) {\n  return {\n    __type: \"ListStreamConsumersOutput\",\n    Consumers: output.Consumers !== undefined && output.Consumers !== null ? deserializeAws_json1_1ConsumerList(output.Consumers, context) : undefined,\n    NextToken: output.NextToken !== undefined && output.NextToken !== null ? output.NextToken : undefined\n  };\n};\nvar deserializeAws_json1_1ListStreamsOutput = function (output, context) {\n  return {\n    __type: \"ListStreamsOutput\",\n    HasMoreStreams: output.HasMoreStreams !== undefined && output.HasMoreStreams !== null ? output.HasMoreStreams : undefined,\n    StreamNames: output.StreamNames !== undefined && output.StreamNames !== null ? deserializeAws_json1_1StreamNameList(output.StreamNames, context) : undefined\n  };\n};\nvar deserializeAws_json1_1ListTagsForStreamOutput = function (output, context) {\n  return {\n    __type: \"ListTagsForStreamOutput\",\n    HasMoreTags: output.HasMoreTags !== undefined && output.HasMoreTags !== null ? output.HasMoreTags : undefined,\n    Tags: output.Tags !== undefined && output.Tags !== null ? deserializeAws_json1_1TagList(output.Tags, context) : undefined\n  };\n};\nvar deserializeAws_json1_1MetricsNameList = function (output, context) {\n  return (output || []).map(function (entry) {\n    return entry;\n  });\n};\nvar deserializeAws_json1_1ProvisionedThroughputExceededException = function (output, context) {\n  return {\n    __type: \"ProvisionedThroughputExceededException\",\n    message: output.message !== undefined && output.message !== null ? output.message : undefined\n  };\n};\nvar deserializeAws_json1_1PutRecordOutput = function (output, context) {\n  return {\n    __type: \"PutRecordOutput\",\n    EncryptionType: output.EncryptionType !== undefined && output.EncryptionType !== null ? output.EncryptionType : undefined,\n    SequenceNumber: output.SequenceNumber !== undefined && output.SequenceNumber !== null ? output.SequenceNumber : undefined,\n    ShardId: output.ShardId !== undefined && output.ShardId !== null ? output.ShardId : undefined\n  };\n};\nvar deserializeAws_json1_1PutRecordsOutput = function (output, context) {\n  return {\n    __type: \"PutRecordsOutput\",\n    EncryptionType: output.EncryptionType !== undefined && output.EncryptionType !== null ? output.EncryptionType : undefined,\n    FailedRecordCount: output.FailedRecordCount !== undefined && output.FailedRecordCount !== null ? output.FailedRecordCount : undefined,\n    Records: output.Records !== undefined && output.Records !== null ? deserializeAws_json1_1PutRecordsResultEntryList(output.Records, context) : undefined\n  };\n};\nvar deserializeAws_json1_1PutRecordsResultEntry = function (output, context) {\n  return {\n    __type: \"PutRecordsResultEntry\",\n    ErrorCode: output.ErrorCode !== undefined && output.ErrorCode !== null ? output.ErrorCode : undefined,\n    ErrorMessage: output.ErrorMessage !== undefined && output.ErrorMessage !== null ? output.ErrorMessage : undefined,\n    SequenceNumber: output.SequenceNumber !== undefined && output.SequenceNumber !== null ? output.SequenceNumber : undefined,\n    ShardId: output.ShardId !== undefined && output.ShardId !== null ? output.ShardId : undefined\n  };\n};\nvar deserializeAws_json1_1PutRecordsResultEntryList = function (output, context) {\n  return (output || []).map(function (entry) {\n    return deserializeAws_json1_1PutRecordsResultEntry(entry, context);\n  });\n};\nvar deserializeAws_json1_1_Record = function (output, context) {\n  return {\n    __type: \"Record\",\n    ApproximateArrivalTimestamp: output.ApproximateArrivalTimestamp !== undefined && output.ApproximateArrivalTimestamp !== null ? new Date(Math.round(output.ApproximateArrivalTimestamp * 1000)) : undefined,\n    Data: output.Data !== undefined && output.Data !== null ? context.base64Decoder(output.Data) : undefined,\n    EncryptionType: output.EncryptionType !== undefined && output.EncryptionType !== null ? output.EncryptionType : undefined,\n    PartitionKey: output.PartitionKey !== undefined && output.PartitionKey !== null ? output.PartitionKey : undefined,\n    SequenceNumber: output.SequenceNumber !== undefined && output.SequenceNumber !== null ? output.SequenceNumber : undefined\n  };\n};\nvar deserializeAws_json1_1RecordList = function (output, context) {\n  return (output || []).map(function (entry) {\n    return deserializeAws_json1_1_Record(entry, context);\n  });\n};\nvar deserializeAws_json1_1RegisterStreamConsumerOutput = function (output, context) {\n  return {\n    __type: \"RegisterStreamConsumerOutput\",\n    Consumer: output.Consumer !== undefined && output.Consumer !== null ? deserializeAws_json1_1Consumer(output.Consumer, context) : undefined\n  };\n};\nvar deserializeAws_json1_1ResourceInUseException = function (output, context) {\n  return {\n    __type: \"ResourceInUseException\",\n    message: output.message !== undefined && output.message !== null ? output.message : undefined\n  };\n};\nvar deserializeAws_json1_1ResourceNotFoundException = function (output, context) {\n  return {\n    __type: \"ResourceNotFoundException\",\n    message: output.message !== undefined && output.message !== null ? output.message : undefined\n  };\n};\nvar deserializeAws_json1_1SequenceNumberRange = function (output, context) {\n  return {\n    __type: \"SequenceNumberRange\",\n    EndingSequenceNumber: output.EndingSequenceNumber !== undefined && output.EndingSequenceNumber !== null ? output.EndingSequenceNumber : undefined,\n    StartingSequenceNumber: output.StartingSequenceNumber !== undefined && output.StartingSequenceNumber !== null ? output.StartingSequenceNumber : undefined\n  };\n};\nvar deserializeAws_json1_1Shard = function (output, context) {\n  return {\n    __type: \"Shard\",\n    AdjacentParentShardId: output.AdjacentParentShardId !== undefined && output.AdjacentParentShardId !== null ? output.AdjacentParentShardId : undefined,\n    HashKeyRange: output.HashKeyRange !== undefined && output.HashKeyRange !== null ? deserializeAws_json1_1HashKeyRange(output.HashKeyRange, context) : undefined,\n    ParentShardId: output.ParentShardId !== undefined && output.ParentShardId !== null ? output.ParentShardId : undefined,\n    SequenceNumberRange: output.SequenceNumberRange !== undefined && output.SequenceNumberRange !== null ? deserializeAws_json1_1SequenceNumberRange(output.SequenceNumberRange, context) : undefined,\n    ShardId: output.ShardId !== undefined && output.ShardId !== null ? output.ShardId : undefined\n  };\n};\nvar deserializeAws_json1_1ShardList = function (output, context) {\n  return (output || []).map(function (entry) {\n    return deserializeAws_json1_1Shard(entry, context);\n  });\n};\nvar deserializeAws_json1_1StreamDescription = function (output, context) {\n  return {\n    __type: \"StreamDescription\",\n    EncryptionType: output.EncryptionType !== undefined && output.EncryptionType !== null ? output.EncryptionType : undefined,\n    EnhancedMonitoring: output.EnhancedMonitoring !== undefined && output.EnhancedMonitoring !== null ? deserializeAws_json1_1EnhancedMonitoringList(output.EnhancedMonitoring, context) : undefined,\n    HasMoreShards: output.HasMoreShards !== undefined && output.HasMoreShards !== null ? output.HasMoreShards : undefined,\n    KeyId: output.KeyId !== undefined && output.KeyId !== null ? output.KeyId : undefined,\n    RetentionPeriodHours: output.RetentionPeriodHours !== undefined && output.RetentionPeriodHours !== null ? output.RetentionPeriodHours : undefined,\n    Shards: output.Shards !== undefined && output.Shards !== null ? deserializeAws_json1_1ShardList(output.Shards, context) : undefined,\n    StreamARN: output.StreamARN !== undefined && output.StreamARN !== null ? output.StreamARN : undefined,\n    StreamCreationTimestamp: output.StreamCreationTimestamp !== undefined && output.StreamCreationTimestamp !== null ? new Date(Math.round(output.StreamCreationTimestamp * 1000)) : undefined,\n    StreamName: output.StreamName !== undefined && output.StreamName !== null ? output.StreamName : undefined,\n    StreamStatus: output.StreamStatus !== undefined && output.StreamStatus !== null ? output.StreamStatus : undefined\n  };\n};\nvar deserializeAws_json1_1StreamDescriptionSummary = function (output, context) {\n  return {\n    __type: \"StreamDescriptionSummary\",\n    ConsumerCount: output.ConsumerCount !== undefined && output.ConsumerCount !== null ? output.ConsumerCount : undefined,\n    EncryptionType: output.EncryptionType !== undefined && output.EncryptionType !== null ? output.EncryptionType : undefined,\n    EnhancedMonitoring: output.EnhancedMonitoring !== undefined && output.EnhancedMonitoring !== null ? deserializeAws_json1_1EnhancedMonitoringList(output.EnhancedMonitoring, context) : undefined,\n    KeyId: output.KeyId !== undefined && output.KeyId !== null ? output.KeyId : undefined,\n    OpenShardCount: output.OpenShardCount !== undefined && output.OpenShardCount !== null ? output.OpenShardCount : undefined,\n    RetentionPeriodHours: output.RetentionPeriodHours !== undefined && output.RetentionPeriodHours !== null ? output.RetentionPeriodHours : undefined,\n    StreamARN: output.StreamARN !== undefined && output.StreamARN !== null ? output.StreamARN : undefined,\n    StreamCreationTimestamp: output.StreamCreationTimestamp !== undefined && output.StreamCreationTimestamp !== null ? new Date(Math.round(output.StreamCreationTimestamp * 1000)) : undefined,\n    StreamName: output.StreamName !== undefined && output.StreamName !== null ? output.StreamName : undefined,\n    StreamStatus: output.StreamStatus !== undefined && output.StreamStatus !== null ? output.StreamStatus : undefined\n  };\n};\nvar deserializeAws_json1_1StreamNameList = function (output, context) {\n  return (output || []).map(function (entry) {\n    return entry;\n  });\n};\nvar deserializeAws_json1_1SubscribeToShardEvent = function (output, context) {\n  return {\n    __type: \"SubscribeToShardEvent\",\n    ContinuationSequenceNumber: output.ContinuationSequenceNumber !== undefined && output.ContinuationSequenceNumber !== null ? output.ContinuationSequenceNumber : undefined,\n    MillisBehindLatest: output.MillisBehindLatest !== undefined && output.MillisBehindLatest !== null ? output.MillisBehindLatest : undefined,\n    Records: output.Records !== undefined && output.Records !== null ? deserializeAws_json1_1RecordList(output.Records, context) : undefined\n  };\n};\nvar deserializeAws_json1_1SubscribeToShardEventStream = function (output, context) {\n  if (output.InternalFailureException !== undefined && output.InternalFailureException !== null) {\n    return {\n      InternalFailureException: deserializeAws_json1_1InternalFailureException(output.InternalFailureException, context)\n    };\n  }\n  if (output.KMSAccessDeniedException !== undefined && output.KMSAccessDeniedException !== null) {\n    return {\n      KMSAccessDeniedException: deserializeAws_json1_1KMSAccessDeniedException(output.KMSAccessDeniedException, context)\n    };\n  }\n  if (output.KMSDisabledException !== undefined && output.KMSDisabledException !== null) {\n    return {\n      KMSDisabledException: deserializeAws_json1_1KMSDisabledException(output.KMSDisabledException, context)\n    };\n  }\n  if (output.KMSInvalidStateException !== undefined && output.KMSInvalidStateException !== null) {\n    return {\n      KMSInvalidStateException: deserializeAws_json1_1KMSInvalidStateException(output.KMSInvalidStateException, context)\n    };\n  }\n  if (output.KMSNotFoundException !== undefined && output.KMSNotFoundException !== null) {\n    return {\n      KMSNotFoundException: deserializeAws_json1_1KMSNotFoundException(output.KMSNotFoundException, context)\n    };\n  }\n  if (output.KMSOptInRequired !== undefined && output.KMSOptInRequired !== null) {\n    return {\n      KMSOptInRequired: deserializeAws_json1_1KMSOptInRequired(output.KMSOptInRequired, context)\n    };\n  }\n  if (output.KMSThrottlingException !== undefined && output.KMSThrottlingException !== null) {\n    return {\n      KMSThrottlingException: deserializeAws_json1_1KMSThrottlingException(output.KMSThrottlingException, context)\n    };\n  }\n  if (output.ResourceInUseException !== undefined && output.ResourceInUseException !== null) {\n    return {\n      ResourceInUseException: deserializeAws_json1_1ResourceInUseException(output.ResourceInUseException, context)\n    };\n  }\n  if (output.ResourceNotFoundException !== undefined && output.ResourceNotFoundException !== null) {\n    return {\n      ResourceNotFoundException: deserializeAws_json1_1ResourceNotFoundException(output.ResourceNotFoundException, context)\n    };\n  }\n  if (output.SubscribeToShardEvent !== undefined && output.SubscribeToShardEvent !== null) {\n    return {\n      SubscribeToShardEvent: deserializeAws_json1_1SubscribeToShardEvent(output.SubscribeToShardEvent, context)\n    };\n  }\n  return {\n    $unknown: Object.entries(output)[0]\n  };\n};\nvar deserializeAws_json1_1SubscribeToShardOutput = function (output, context) {\n  return {\n    __type: \"SubscribeToShardOutput\",\n    EventStream: output.EventStream !== undefined && output.EventStream !== null ? deserializeAws_json1_1SubscribeToShardEventStream(output.EventStream, context) : undefined\n  };\n};\nvar deserializeAws_json1_1Tag = function (output, context) {\n  return {\n    __type: \"Tag\",\n    Key: output.Key !== undefined && output.Key !== null ? output.Key : undefined,\n    Value: output.Value !== undefined && output.Value !== null ? output.Value : undefined\n  };\n};\nvar deserializeAws_json1_1TagList = function (output, context) {\n  return (output || []).map(function (entry) {\n    return deserializeAws_json1_1Tag(entry, context);\n  });\n};\nvar deserializeAws_json1_1UpdateShardCountOutput = function (output, context) {\n  return {\n    __type: \"UpdateShardCountOutput\",\n    CurrentShardCount: output.CurrentShardCount !== undefined && output.CurrentShardCount !== null ? output.CurrentShardCount : undefined,\n    StreamName: output.StreamName !== undefined && output.StreamName !== null ? output.StreamName : undefined,\n    TargetShardCount: output.TargetShardCount !== undefined && output.TargetShardCount !== null ? output.TargetShardCount : undefined\n  };\n};\nvar deserializeMetadata = function (output) {\n  return {\n    httpStatusCode: output.statusCode,\n    httpHeaders: output.headers,\n    requestId: output.headers[\"x-amzn-requestid\"]\n  };\n};\n// Collect low-level response body stream to Uint8Array.\nvar collectBody = function (streamBody, context) {\n  if (streamBody === void 0) {\n    streamBody = new Uint8Array();\n  }\n  if (streamBody instanceof Uint8Array) {\n    return Promise.resolve(streamBody);\n  }\n  return context.streamCollector(streamBody) || Promise.resolve(new Uint8Array());\n};\n// Encode Uint8Array data into string with utf-8.\nvar collectBodyString = function (streamBody, context) {\n  return collectBody(streamBody, context).then(function (body) {\n    return context.utf8Encoder(body);\n  });\n};\nvar buildHttpRpcRequest = function (context, headers, path, resolvedHostname, body) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, contents;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          contents = {\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"POST\",\n            path: path,\n            headers: headers\n          };\n          if (resolvedHostname !== undefined) {\n            contents.hostname = resolvedHostname;\n          }\n          if (body !== undefined) {\n            contents.body = body;\n          }\n          return [2 /*return*/, new __HttpRequest(contents)];\n      }\n    });\n  });\n};\nvar parseBody = function (streamBody, context) {\n  return collectBodyString(streamBody, context).then(function (encoded) {\n    if (encoded.length) {\n      return JSON.parse(encoded);\n    }\n    return {};\n  });\n};","map":{"version":3,"names":["HttpRequest","__HttpRequest","serializeAws_json1_1AddTagsToStreamCommand","input","context","__awaiter","headers","body","JSON","stringify","serializeAws_json1_1AddTagsToStreamInput","buildHttpRpcRequest","undefined","serializeAws_json1_1CreateStreamCommand","serializeAws_json1_1CreateStreamInput","serializeAws_json1_1DecreaseStreamRetentionPeriodCommand","serializeAws_json1_1DecreaseStreamRetentionPeriodInput","serializeAws_json1_1DeleteStreamCommand","serializeAws_json1_1DeleteStreamInput","serializeAws_json1_1DeregisterStreamConsumerCommand","serializeAws_json1_1DeregisterStreamConsumerInput","serializeAws_json1_1DescribeLimitsCommand","serializeAws_json1_1DescribeLimitsInput","serializeAws_json1_1DescribeStreamCommand","serializeAws_json1_1DescribeStreamInput","serializeAws_json1_1DescribeStreamConsumerCommand","serializeAws_json1_1DescribeStreamConsumerInput","serializeAws_json1_1DescribeStreamSummaryCommand","serializeAws_json1_1DescribeStreamSummaryInput","serializeAws_json1_1DisableEnhancedMonitoringCommand","serializeAws_json1_1DisableEnhancedMonitoringInput","serializeAws_json1_1EnableEnhancedMonitoringCommand","serializeAws_json1_1EnableEnhancedMonitoringInput","serializeAws_json1_1GetRecordsCommand","serializeAws_json1_1GetRecordsInput","serializeAws_json1_1GetShardIteratorCommand","serializeAws_json1_1GetShardIteratorInput","serializeAws_json1_1IncreaseStreamRetentionPeriodCommand","serializeAws_json1_1IncreaseStreamRetentionPeriodInput","serializeAws_json1_1ListShardsCommand","serializeAws_json1_1ListShardsInput","serializeAws_json1_1ListStreamConsumersCommand","serializeAws_json1_1ListStreamConsumersInput","serializeAws_json1_1ListStreamsCommand","serializeAws_json1_1ListStreamsInput","serializeAws_json1_1ListTagsForStreamCommand","serializeAws_json1_1ListTagsForStreamInput","serializeAws_json1_1MergeShardsCommand","serializeAws_json1_1MergeShardsInput","serializeAws_json1_1PutRecordCommand","serializeAws_json1_1PutRecordInput","serializeAws_json1_1PutRecordsCommand","serializeAws_json1_1PutRecordsInput","serializeAws_json1_1RegisterStreamConsumerCommand","serializeAws_json1_1RegisterStreamConsumerInput","serializeAws_json1_1RemoveTagsFromStreamCommand","serializeAws_json1_1RemoveTagsFromStreamInput","serializeAws_json1_1SplitShardCommand","serializeAws_json1_1SplitShardInput","serializeAws_json1_1StartStreamEncryptionCommand","serializeAws_json1_1StartStreamEncryptionInput","serializeAws_json1_1StopStreamEncryptionCommand","serializeAws_json1_1StopStreamEncryptionInput","serializeAws_json1_1SubscribeToShardCommand","serializeAws_json1_1SubscribeToShardInput","serializeAws_json1_1UpdateShardCountCommand","serializeAws_json1_1UpdateShardCountInput","deserializeAws_json1_1AddTagsToStreamCommand","output","statusCode","deserializeAws_json1_1AddTagsToStreamCommandError","collectBody","_a","sent","response","$metadata","deserializeMetadata","Promise","resolve","parseBody","parsedOutput","__assign","apply","concat","_g","_h","errorCode","errorTypeParts","split","_b","deserializeAws_json1_1InvalidArgumentExceptionResponse","_c","name","deserializeAws_json1_1LimitExceededExceptionResponse","_d","deserializeAws_json1_1ResourceInUseExceptionResponse","_e","deserializeAws_json1_1ResourceNotFoundExceptionResponse","_f","parsedBody","code","Code","message","Message","$fault","reject","Object","assign","Error","deserializeAws_json1_1CreateStreamCommand","deserializeAws_json1_1CreateStreamCommandError","deserializeAws_json1_1DecreaseStreamRetentionPeriodCommand","deserializeAws_json1_1DecreaseStreamRetentionPeriodCommandError","deserializeAws_json1_1DeleteStreamCommand","deserializeAws_json1_1DeleteStreamCommandError","deserializeAws_json1_1DeregisterStreamConsumerCommand","deserializeAws_json1_1DeregisterStreamConsumerCommandError","deserializeAws_json1_1DescribeLimitsCommand","deserializeAws_json1_1DescribeLimitsCommandError","data","contents","deserializeAws_json1_1DescribeLimitsOutput","__type","deserializeAws_json1_1DescribeStreamCommand","deserializeAws_json1_1DescribeStreamCommandError","deserializeAws_json1_1DescribeStreamOutput","deserializeAws_json1_1DescribeStreamConsumerCommand","deserializeAws_json1_1DescribeStreamConsumerCommandError","deserializeAws_json1_1DescribeStreamConsumerOutput","deserializeAws_json1_1DescribeStreamSummaryCommand","deserializeAws_json1_1DescribeStreamSummaryCommandError","deserializeAws_json1_1DescribeStreamSummaryOutput","deserializeAws_json1_1DisableEnhancedMonitoringCommand","deserializeAws_json1_1DisableEnhancedMonitoringCommandError","deserializeAws_json1_1EnhancedMonitoringOutput","deserializeAws_json1_1EnableEnhancedMonitoringCommand","deserializeAws_json1_1EnableEnhancedMonitoringCommandError","deserializeAws_json1_1GetRecordsCommand","deserializeAws_json1_1GetRecordsCommandError","deserializeAws_json1_1GetRecordsOutput","_o","_p","deserializeAws_json1_1ExpiredIteratorExceptionResponse","deserializeAws_json1_1KMSAccessDeniedExceptionResponse","deserializeAws_json1_1KMSDisabledExceptionResponse","deserializeAws_json1_1KMSInvalidStateExceptionResponse","deserializeAws_json1_1KMSNotFoundExceptionResponse","deserializeAws_json1_1KMSOptInRequiredResponse","_j","deserializeAws_json1_1KMSThrottlingExceptionResponse","_k","deserializeAws_json1_1ProvisionedThroughputExceededExceptionResponse","_l","_m","deserializeAws_json1_1GetShardIteratorCommand","deserializeAws_json1_1GetShardIteratorCommandError","deserializeAws_json1_1GetShardIteratorOutput","deserializeAws_json1_1IncreaseStreamRetentionPeriodCommand","deserializeAws_json1_1IncreaseStreamRetentionPeriodCommandError","deserializeAws_json1_1ListShardsCommand","deserializeAws_json1_1ListShardsCommandError","deserializeAws_json1_1ListShardsOutput","deserializeAws_json1_1ExpiredNextTokenExceptionResponse","deserializeAws_json1_1ListStreamConsumersCommand","deserializeAws_json1_1ListStreamConsumersCommandError","deserializeAws_json1_1ListStreamConsumersOutput","deserializeAws_json1_1ListStreamsCommand","deserializeAws_json1_1ListStreamsCommandError","deserializeAws_json1_1ListStreamsOutput","deserializeAws_json1_1ListTagsForStreamCommand","deserializeAws_json1_1ListTagsForStreamCommandError","deserializeAws_json1_1ListTagsForStreamOutput","deserializeAws_json1_1MergeShardsCommand","deserializeAws_json1_1MergeShardsCommandError","deserializeAws_json1_1PutRecordCommand","deserializeAws_json1_1PutRecordCommandError","deserializeAws_json1_1PutRecordOutput","deserializeAws_json1_1PutRecordsCommand","deserializeAws_json1_1PutRecordsCommandError","deserializeAws_json1_1PutRecordsOutput","deserializeAws_json1_1RegisterStreamConsumerCommand","deserializeAws_json1_1RegisterStreamConsumerCommandError","deserializeAws_json1_1RegisterStreamConsumerOutput","deserializeAws_json1_1RemoveTagsFromStreamCommand","deserializeAws_json1_1RemoveTagsFromStreamCommandError","deserializeAws_json1_1SplitShardCommand","deserializeAws_json1_1SplitShardCommandError","deserializeAws_json1_1StartStreamEncryptionCommand","deserializeAws_json1_1StartStreamEncryptionCommandError","deserializeAws_json1_1StopStreamEncryptionCommand","deserializeAws_json1_1StopStreamEncryptionCommandError","deserializeAws_json1_1SubscribeToShardCommand","deserializeAws_json1_1SubscribeToShardCommandError","deserializeAws_json1_1SubscribeToShardOutput","deserializeAws_json1_1UpdateShardCountCommand","deserializeAws_json1_1UpdateShardCountCommandError","deserializeAws_json1_1UpdateShardCountOutput","deserialized","deserializeAws_json1_1ExpiredIteratorException","deserializeAws_json1_1ExpiredNextTokenException","deserializeAws_json1_1InvalidArgumentException","deserializeAws_json1_1KMSAccessDeniedException","deserializeAws_json1_1KMSDisabledException","deserializeAws_json1_1KMSInvalidStateException","deserializeAws_json1_1KMSNotFoundException","deserializeAws_json1_1KMSOptInRequired","deserializeAws_json1_1KMSThrottlingException","deserializeAws_json1_1LimitExceededException","deserializeAws_json1_1ProvisionedThroughputExceededException","deserializeAws_json1_1ResourceInUseException","deserializeAws_json1_1ResourceNotFoundException","StreamName","Tags","serializeAws_json1_1TagMap","ShardCount","RetentionPeriodHours","EnforceConsumerDeletion","ConsumerARN","ConsumerName","StreamARN","ExclusiveStartShardId","Limit","ShardLevelMetrics","serializeAws_json1_1MetricsNameList","ShardIterator","ShardId","ShardIteratorType","StartingSequenceNumber","Timestamp","Math","round","getTime","MaxResults","NextToken","StreamCreationTimestamp","ExclusiveStartStreamName","ExclusiveStartTagKey","AdjacentShardToMerge","ShardToMerge","map","entry","Data","base64Encoder","ExplicitHashKey","PartitionKey","SequenceNumberForOrdering","Records","serializeAws_json1_1PutRecordsRequestEntryList","serializeAws_json1_1PutRecordsRequestEntry","TagKeys","serializeAws_json1_1TagKeyList","NewStartingHashKey","ShardToSplit","serializeAws_json1_1StartingPosition","SequenceNumber","Type","EncryptionType","KeyId","StartingPosition","entries","reduce","acc","__read","key","value","ScalingType","TargetShardCount","deserializeAws_json1_1Consumer","ConsumerCreationTimestamp","Date","ConsumerStatus","deserializeAws_json1_1ConsumerDescription","deserializeAws_json1_1ConsumerList","OpenShardCount","ShardLimit","ConsumerDescription","StreamDescription","deserializeAws_json1_1StreamDescription","StreamDescriptionSummary","deserializeAws_json1_1StreamDescriptionSummary","deserializeAws_json1_1EnhancedMetrics","deserializeAws_json1_1MetricsNameList","deserializeAws_json1_1EnhancedMonitoringList","CurrentShardLevelMetrics","DesiredShardLevelMetrics","MillisBehindLatest","NextShardIterator","deserializeAws_json1_1RecordList","deserializeAws_json1_1HashKeyRange","EndingHashKey","StartingHashKey","deserializeAws_json1_1InternalFailureException","Shards","deserializeAws_json1_1ShardList","Consumers","HasMoreStreams","StreamNames","deserializeAws_json1_1StreamNameList","HasMoreTags","deserializeAws_json1_1TagList","FailedRecordCount","deserializeAws_json1_1PutRecordsResultEntryList","deserializeAws_json1_1PutRecordsResultEntry","ErrorCode","ErrorMessage","deserializeAws_json1_1_Record","ApproximateArrivalTimestamp","base64Decoder","Consumer","deserializeAws_json1_1SequenceNumberRange","EndingSequenceNumber","deserializeAws_json1_1Shard","AdjacentParentShardId","HashKeyRange","ParentShardId","SequenceNumberRange","EnhancedMonitoring","HasMoreShards","StreamStatus","ConsumerCount","deserializeAws_json1_1SubscribeToShardEvent","ContinuationSequenceNumber","deserializeAws_json1_1SubscribeToShardEventStream","InternalFailureException","KMSAccessDeniedException","KMSDisabledException","KMSInvalidStateException","KMSNotFoundException","KMSOptInRequired","KMSThrottlingException","ResourceInUseException","ResourceNotFoundException","SubscribeToShardEvent","$unknown","EventStream","deserializeAws_json1_1Tag","Key","Value","CurrentShardCount","httpStatusCode","httpHeaders","requestId","streamBody","Uint8Array","streamCollector","collectBodyString","then","utf8Encoder","path","resolvedHostname","endpoint","hostname","protocol","port","method","encoded","length","parse"],"sources":["/Users/ericli/node_modules/@aws-sdk/client-kinesis/protocols/Aws_json1_1.ts"],"sourcesContent":["import { AddTagsToStreamCommandInput, AddTagsToStreamCommandOutput } from \"../commands/AddTagsToStreamCommand\";\nimport { CreateStreamCommandInput, CreateStreamCommandOutput } from \"../commands/CreateStreamCommand\";\nimport {\n  DecreaseStreamRetentionPeriodCommandInput,\n  DecreaseStreamRetentionPeriodCommandOutput,\n} from \"../commands/DecreaseStreamRetentionPeriodCommand\";\nimport { DeleteStreamCommandInput, DeleteStreamCommandOutput } from \"../commands/DeleteStreamCommand\";\nimport {\n  DeregisterStreamConsumerCommandInput,\n  DeregisterStreamConsumerCommandOutput,\n} from \"../commands/DeregisterStreamConsumerCommand\";\nimport { DescribeLimitsCommandInput, DescribeLimitsCommandOutput } from \"../commands/DescribeLimitsCommand\";\nimport { DescribeStreamCommandInput, DescribeStreamCommandOutput } from \"../commands/DescribeStreamCommand\";\nimport {\n  DescribeStreamConsumerCommandInput,\n  DescribeStreamConsumerCommandOutput,\n} from \"../commands/DescribeStreamConsumerCommand\";\nimport {\n  DescribeStreamSummaryCommandInput,\n  DescribeStreamSummaryCommandOutput,\n} from \"../commands/DescribeStreamSummaryCommand\";\nimport {\n  DisableEnhancedMonitoringCommandInput,\n  DisableEnhancedMonitoringCommandOutput,\n} from \"../commands/DisableEnhancedMonitoringCommand\";\nimport {\n  EnableEnhancedMonitoringCommandInput,\n  EnableEnhancedMonitoringCommandOutput,\n} from \"../commands/EnableEnhancedMonitoringCommand\";\nimport { GetRecordsCommandInput, GetRecordsCommandOutput } from \"../commands/GetRecordsCommand\";\nimport { GetShardIteratorCommandInput, GetShardIteratorCommandOutput } from \"../commands/GetShardIteratorCommand\";\nimport {\n  IncreaseStreamRetentionPeriodCommandInput,\n  IncreaseStreamRetentionPeriodCommandOutput,\n} from \"../commands/IncreaseStreamRetentionPeriodCommand\";\nimport { ListShardsCommandInput, ListShardsCommandOutput } from \"../commands/ListShardsCommand\";\nimport {\n  ListStreamConsumersCommandInput,\n  ListStreamConsumersCommandOutput,\n} from \"../commands/ListStreamConsumersCommand\";\nimport { ListStreamsCommandInput, ListStreamsCommandOutput } from \"../commands/ListStreamsCommand\";\nimport { ListTagsForStreamCommandInput, ListTagsForStreamCommandOutput } from \"../commands/ListTagsForStreamCommand\";\nimport { MergeShardsCommandInput, MergeShardsCommandOutput } from \"../commands/MergeShardsCommand\";\nimport { PutRecordCommandInput, PutRecordCommandOutput } from \"../commands/PutRecordCommand\";\nimport { PutRecordsCommandInput, PutRecordsCommandOutput } from \"../commands/PutRecordsCommand\";\nimport {\n  RegisterStreamConsumerCommandInput,\n  RegisterStreamConsumerCommandOutput,\n} from \"../commands/RegisterStreamConsumerCommand\";\nimport {\n  RemoveTagsFromStreamCommandInput,\n  RemoveTagsFromStreamCommandOutput,\n} from \"../commands/RemoveTagsFromStreamCommand\";\nimport { SplitShardCommandInput, SplitShardCommandOutput } from \"../commands/SplitShardCommand\";\nimport {\n  StartStreamEncryptionCommandInput,\n  StartStreamEncryptionCommandOutput,\n} from \"../commands/StartStreamEncryptionCommand\";\nimport {\n  StopStreamEncryptionCommandInput,\n  StopStreamEncryptionCommandOutput,\n} from \"../commands/StopStreamEncryptionCommand\";\nimport { SubscribeToShardCommandInput, SubscribeToShardCommandOutput } from \"../commands/SubscribeToShardCommand\";\nimport { UpdateShardCountCommandInput, UpdateShardCountCommandOutput } from \"../commands/UpdateShardCountCommand\";\nimport {\n  AddTagsToStreamInput,\n  Consumer,\n  ConsumerDescription,\n  CreateStreamInput,\n  DecreaseStreamRetentionPeriodInput,\n  DeleteStreamInput,\n  DeregisterStreamConsumerInput,\n  DescribeLimitsInput,\n  DescribeLimitsOutput,\n  DescribeStreamConsumerInput,\n  DescribeStreamConsumerOutput,\n  DescribeStreamInput,\n  DescribeStreamOutput,\n  DescribeStreamSummaryInput,\n  DescribeStreamSummaryOutput,\n  DisableEnhancedMonitoringInput,\n  EnableEnhancedMonitoringInput,\n  EnhancedMetrics,\n  EnhancedMonitoringOutput,\n  ExpiredIteratorException,\n  ExpiredNextTokenException,\n  GetRecordsInput,\n  GetRecordsOutput,\n  GetShardIteratorInput,\n  GetShardIteratorOutput,\n  HashKeyRange,\n  IncreaseStreamRetentionPeriodInput,\n  InternalFailureException,\n  InvalidArgumentException,\n  KMSAccessDeniedException,\n  KMSDisabledException,\n  KMSInvalidStateException,\n  KMSNotFoundException,\n  KMSOptInRequired,\n  KMSThrottlingException,\n  LimitExceededException,\n  ListShardsInput,\n  ListShardsOutput,\n  ListStreamConsumersInput,\n  ListStreamConsumersOutput,\n  ListStreamsInput,\n  ListStreamsOutput,\n  ListTagsForStreamInput,\n  ListTagsForStreamOutput,\n  MergeShardsInput,\n  MetricsName,\n  ProvisionedThroughputExceededException,\n  PutRecordInput,\n  PutRecordOutput,\n  PutRecordsInput,\n  PutRecordsOutput,\n  PutRecordsRequestEntry,\n  PutRecordsResultEntry,\n  RegisterStreamConsumerInput,\n  RegisterStreamConsumerOutput,\n  RemoveTagsFromStreamInput,\n  ResourceInUseException,\n  ResourceNotFoundException,\n  SequenceNumberRange,\n  Shard,\n  SplitShardInput,\n  StartStreamEncryptionInput,\n  StartingPosition,\n  StopStreamEncryptionInput,\n  StreamDescription,\n  StreamDescriptionSummary,\n  SubscribeToShardEvent,\n  SubscribeToShardEventStream,\n  SubscribeToShardInput,\n  SubscribeToShardOutput,\n  Tag,\n  UpdateShardCountInput,\n  UpdateShardCountOutput,\n  _Record,\n} from \"../models/index\";\nimport { HttpRequest as __HttpRequest, HttpResponse as __HttpResponse } from \"@aws-sdk/protocol-http\";\nimport { SmithyException as __SmithyException } from \"@aws-sdk/smithy-client\";\nimport {\n  Endpoint as __Endpoint,\n  HeaderBag as __HeaderBag,\n  MetadataBearer as __MetadataBearer,\n  ResponseMetadata as __ResponseMetadata,\n  SerdeContext as __SerdeContext,\n} from \"@aws-sdk/types\";\n\nexport const serializeAws_json1_1AddTagsToStreamCommand = async (\n  input: AddTagsToStreamCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"Content-Type\": \"application/x-amz-json-1.1\",\n    \"X-Amz-Target\": \"Kinesis_20131202.AddTagsToStream\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1AddTagsToStreamInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1CreateStreamCommand = async (\n  input: CreateStreamCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"Content-Type\": \"application/x-amz-json-1.1\",\n    \"X-Amz-Target\": \"Kinesis_20131202.CreateStream\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1CreateStreamInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1DecreaseStreamRetentionPeriodCommand = async (\n  input: DecreaseStreamRetentionPeriodCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"Content-Type\": \"application/x-amz-json-1.1\",\n    \"X-Amz-Target\": \"Kinesis_20131202.DecreaseStreamRetentionPeriod\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1DecreaseStreamRetentionPeriodInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1DeleteStreamCommand = async (\n  input: DeleteStreamCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"Content-Type\": \"application/x-amz-json-1.1\",\n    \"X-Amz-Target\": \"Kinesis_20131202.DeleteStream\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1DeleteStreamInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1DeregisterStreamConsumerCommand = async (\n  input: DeregisterStreamConsumerCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"Content-Type\": \"application/x-amz-json-1.1\",\n    \"X-Amz-Target\": \"Kinesis_20131202.DeregisterStreamConsumer\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1DeregisterStreamConsumerInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1DescribeLimitsCommand = async (\n  input: DescribeLimitsCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"Content-Type\": \"application/x-amz-json-1.1\",\n    \"X-Amz-Target\": \"Kinesis_20131202.DescribeLimits\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1DescribeLimitsInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1DescribeStreamCommand = async (\n  input: DescribeStreamCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"Content-Type\": \"application/x-amz-json-1.1\",\n    \"X-Amz-Target\": \"Kinesis_20131202.DescribeStream\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1DescribeStreamInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1DescribeStreamConsumerCommand = async (\n  input: DescribeStreamConsumerCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"Content-Type\": \"application/x-amz-json-1.1\",\n    \"X-Amz-Target\": \"Kinesis_20131202.DescribeStreamConsumer\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1DescribeStreamConsumerInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1DescribeStreamSummaryCommand = async (\n  input: DescribeStreamSummaryCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"Content-Type\": \"application/x-amz-json-1.1\",\n    \"X-Amz-Target\": \"Kinesis_20131202.DescribeStreamSummary\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1DescribeStreamSummaryInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1DisableEnhancedMonitoringCommand = async (\n  input: DisableEnhancedMonitoringCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"Content-Type\": \"application/x-amz-json-1.1\",\n    \"X-Amz-Target\": \"Kinesis_20131202.DisableEnhancedMonitoring\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1DisableEnhancedMonitoringInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1EnableEnhancedMonitoringCommand = async (\n  input: EnableEnhancedMonitoringCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"Content-Type\": \"application/x-amz-json-1.1\",\n    \"X-Amz-Target\": \"Kinesis_20131202.EnableEnhancedMonitoring\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1EnableEnhancedMonitoringInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1GetRecordsCommand = async (\n  input: GetRecordsCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"Content-Type\": \"application/x-amz-json-1.1\",\n    \"X-Amz-Target\": \"Kinesis_20131202.GetRecords\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1GetRecordsInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1GetShardIteratorCommand = async (\n  input: GetShardIteratorCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"Content-Type\": \"application/x-amz-json-1.1\",\n    \"X-Amz-Target\": \"Kinesis_20131202.GetShardIterator\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1GetShardIteratorInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1IncreaseStreamRetentionPeriodCommand = async (\n  input: IncreaseStreamRetentionPeriodCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"Content-Type\": \"application/x-amz-json-1.1\",\n    \"X-Amz-Target\": \"Kinesis_20131202.IncreaseStreamRetentionPeriod\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1IncreaseStreamRetentionPeriodInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1ListShardsCommand = async (\n  input: ListShardsCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"Content-Type\": \"application/x-amz-json-1.1\",\n    \"X-Amz-Target\": \"Kinesis_20131202.ListShards\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1ListShardsInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1ListStreamConsumersCommand = async (\n  input: ListStreamConsumersCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"Content-Type\": \"application/x-amz-json-1.1\",\n    \"X-Amz-Target\": \"Kinesis_20131202.ListStreamConsumers\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1ListStreamConsumersInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1ListStreamsCommand = async (\n  input: ListStreamsCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"Content-Type\": \"application/x-amz-json-1.1\",\n    \"X-Amz-Target\": \"Kinesis_20131202.ListStreams\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1ListStreamsInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1ListTagsForStreamCommand = async (\n  input: ListTagsForStreamCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"Content-Type\": \"application/x-amz-json-1.1\",\n    \"X-Amz-Target\": \"Kinesis_20131202.ListTagsForStream\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1ListTagsForStreamInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1MergeShardsCommand = async (\n  input: MergeShardsCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"Content-Type\": \"application/x-amz-json-1.1\",\n    \"X-Amz-Target\": \"Kinesis_20131202.MergeShards\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1MergeShardsInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1PutRecordCommand = async (\n  input: PutRecordCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"Content-Type\": \"application/x-amz-json-1.1\",\n    \"X-Amz-Target\": \"Kinesis_20131202.PutRecord\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1PutRecordInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1PutRecordsCommand = async (\n  input: PutRecordsCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"Content-Type\": \"application/x-amz-json-1.1\",\n    \"X-Amz-Target\": \"Kinesis_20131202.PutRecords\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1PutRecordsInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1RegisterStreamConsumerCommand = async (\n  input: RegisterStreamConsumerCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"Content-Type\": \"application/x-amz-json-1.1\",\n    \"X-Amz-Target\": \"Kinesis_20131202.RegisterStreamConsumer\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1RegisterStreamConsumerInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1RemoveTagsFromStreamCommand = async (\n  input: RemoveTagsFromStreamCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"Content-Type\": \"application/x-amz-json-1.1\",\n    \"X-Amz-Target\": \"Kinesis_20131202.RemoveTagsFromStream\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1RemoveTagsFromStreamInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1SplitShardCommand = async (\n  input: SplitShardCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"Content-Type\": \"application/x-amz-json-1.1\",\n    \"X-Amz-Target\": \"Kinesis_20131202.SplitShard\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1SplitShardInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1StartStreamEncryptionCommand = async (\n  input: StartStreamEncryptionCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"Content-Type\": \"application/x-amz-json-1.1\",\n    \"X-Amz-Target\": \"Kinesis_20131202.StartStreamEncryption\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1StartStreamEncryptionInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1StopStreamEncryptionCommand = async (\n  input: StopStreamEncryptionCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"Content-Type\": \"application/x-amz-json-1.1\",\n    \"X-Amz-Target\": \"Kinesis_20131202.StopStreamEncryption\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1StopStreamEncryptionInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1SubscribeToShardCommand = async (\n  input: SubscribeToShardCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"Content-Type\": \"application/x-amz-json-1.1\",\n    \"X-Amz-Target\": \"Kinesis_20131202.SubscribeToShard\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1SubscribeToShardInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1UpdateShardCountCommand = async (\n  input: UpdateShardCountCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"Content-Type\": \"application/x-amz-json-1.1\",\n    \"X-Amz-Target\": \"Kinesis_20131202.UpdateShardCount\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1UpdateShardCountInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const deserializeAws_json1_1AddTagsToStreamCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<AddTagsToStreamCommandOutput> => {\n  if (output.statusCode >= 400) {\n    return deserializeAws_json1_1AddTagsToStreamCommandError(output, context);\n  }\n  await collectBody(output.body, context);\n  const response: AddTagsToStreamCommandOutput = {\n    $metadata: deserializeMetadata(output),\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1AddTagsToStreamCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<AddTagsToStreamCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  const errorTypeParts: String = parsedOutput.body[\"__type\"].split(\"#\");\n  errorCode = errorTypeParts[1] === undefined ? errorTypeParts[0] : errorTypeParts[1];\n  switch (errorCode) {\n    case \"InvalidArgumentException\":\n    case \"com.amazonaws.kinesis#InvalidArgumentException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"LimitExceededException\":\n    case \"com.amazonaws.kinesis#LimitExceededException\":\n      response = {\n        ...(await deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceInUseException\":\n    case \"com.amazonaws.kinesis#ResourceInUseException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceInUseExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1CreateStreamCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<CreateStreamCommandOutput> => {\n  if (output.statusCode >= 400) {\n    return deserializeAws_json1_1CreateStreamCommandError(output, context);\n  }\n  await collectBody(output.body, context);\n  const response: CreateStreamCommandOutput = {\n    $metadata: deserializeMetadata(output),\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1CreateStreamCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<CreateStreamCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  const errorTypeParts: String = parsedOutput.body[\"__type\"].split(\"#\");\n  errorCode = errorTypeParts[1] === undefined ? errorTypeParts[0] : errorTypeParts[1];\n  switch (errorCode) {\n    case \"InvalidArgumentException\":\n    case \"com.amazonaws.kinesis#InvalidArgumentException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"LimitExceededException\":\n    case \"com.amazonaws.kinesis#LimitExceededException\":\n      response = {\n        ...(await deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceInUseException\":\n    case \"com.amazonaws.kinesis#ResourceInUseException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceInUseExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1DecreaseStreamRetentionPeriodCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DecreaseStreamRetentionPeriodCommandOutput> => {\n  if (output.statusCode >= 400) {\n    return deserializeAws_json1_1DecreaseStreamRetentionPeriodCommandError(output, context);\n  }\n  await collectBody(output.body, context);\n  const response: DecreaseStreamRetentionPeriodCommandOutput = {\n    $metadata: deserializeMetadata(output),\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1DecreaseStreamRetentionPeriodCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DecreaseStreamRetentionPeriodCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  const errorTypeParts: String = parsedOutput.body[\"__type\"].split(\"#\");\n  errorCode = errorTypeParts[1] === undefined ? errorTypeParts[0] : errorTypeParts[1];\n  switch (errorCode) {\n    case \"InvalidArgumentException\":\n    case \"com.amazonaws.kinesis#InvalidArgumentException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"LimitExceededException\":\n    case \"com.amazonaws.kinesis#LimitExceededException\":\n      response = {\n        ...(await deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceInUseException\":\n    case \"com.amazonaws.kinesis#ResourceInUseException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceInUseExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1DeleteStreamCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteStreamCommandOutput> => {\n  if (output.statusCode >= 400) {\n    return deserializeAws_json1_1DeleteStreamCommandError(output, context);\n  }\n  await collectBody(output.body, context);\n  const response: DeleteStreamCommandOutput = {\n    $metadata: deserializeMetadata(output),\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1DeleteStreamCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteStreamCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  const errorTypeParts: String = parsedOutput.body[\"__type\"].split(\"#\");\n  errorCode = errorTypeParts[1] === undefined ? errorTypeParts[0] : errorTypeParts[1];\n  switch (errorCode) {\n    case \"LimitExceededException\":\n    case \"com.amazonaws.kinesis#LimitExceededException\":\n      response = {\n        ...(await deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceInUseException\":\n    case \"com.amazonaws.kinesis#ResourceInUseException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceInUseExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1DeregisterStreamConsumerCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeregisterStreamConsumerCommandOutput> => {\n  if (output.statusCode >= 400) {\n    return deserializeAws_json1_1DeregisterStreamConsumerCommandError(output, context);\n  }\n  await collectBody(output.body, context);\n  const response: DeregisterStreamConsumerCommandOutput = {\n    $metadata: deserializeMetadata(output),\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1DeregisterStreamConsumerCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeregisterStreamConsumerCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  const errorTypeParts: String = parsedOutput.body[\"__type\"].split(\"#\");\n  errorCode = errorTypeParts[1] === undefined ? errorTypeParts[0] : errorTypeParts[1];\n  switch (errorCode) {\n    case \"InvalidArgumentException\":\n    case \"com.amazonaws.kinesis#InvalidArgumentException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"LimitExceededException\":\n    case \"com.amazonaws.kinesis#LimitExceededException\":\n      response = {\n        ...(await deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1DescribeLimitsCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DescribeLimitsCommandOutput> => {\n  if (output.statusCode >= 400) {\n    return deserializeAws_json1_1DescribeLimitsCommandError(output, context);\n  }\n  const data: any = await parseBody(output.body, context);\n  let contents: any = {};\n  contents = deserializeAws_json1_1DescribeLimitsOutput(data, context);\n  const response: DescribeLimitsCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    __type: \"DescribeLimitsOutput\",\n    ...contents,\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1DescribeLimitsCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DescribeLimitsCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  const errorTypeParts: String = parsedOutput.body[\"__type\"].split(\"#\");\n  errorCode = errorTypeParts[1] === undefined ? errorTypeParts[0] : errorTypeParts[1];\n  switch (errorCode) {\n    case \"LimitExceededException\":\n    case \"com.amazonaws.kinesis#LimitExceededException\":\n      response = {\n        ...(await deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1DescribeStreamCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DescribeStreamCommandOutput> => {\n  if (output.statusCode >= 400) {\n    return deserializeAws_json1_1DescribeStreamCommandError(output, context);\n  }\n  const data: any = await parseBody(output.body, context);\n  let contents: any = {};\n  contents = deserializeAws_json1_1DescribeStreamOutput(data, context);\n  const response: DescribeStreamCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    __type: \"DescribeStreamOutput\",\n    ...contents,\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1DescribeStreamCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DescribeStreamCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  const errorTypeParts: String = parsedOutput.body[\"__type\"].split(\"#\");\n  errorCode = errorTypeParts[1] === undefined ? errorTypeParts[0] : errorTypeParts[1];\n  switch (errorCode) {\n    case \"LimitExceededException\":\n    case \"com.amazonaws.kinesis#LimitExceededException\":\n      response = {\n        ...(await deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1DescribeStreamConsumerCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DescribeStreamConsumerCommandOutput> => {\n  if (output.statusCode >= 400) {\n    return deserializeAws_json1_1DescribeStreamConsumerCommandError(output, context);\n  }\n  const data: any = await parseBody(output.body, context);\n  let contents: any = {};\n  contents = deserializeAws_json1_1DescribeStreamConsumerOutput(data, context);\n  const response: DescribeStreamConsumerCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    __type: \"DescribeStreamConsumerOutput\",\n    ...contents,\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1DescribeStreamConsumerCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DescribeStreamConsumerCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  const errorTypeParts: String = parsedOutput.body[\"__type\"].split(\"#\");\n  errorCode = errorTypeParts[1] === undefined ? errorTypeParts[0] : errorTypeParts[1];\n  switch (errorCode) {\n    case \"InvalidArgumentException\":\n    case \"com.amazonaws.kinesis#InvalidArgumentException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"LimitExceededException\":\n    case \"com.amazonaws.kinesis#LimitExceededException\":\n      response = {\n        ...(await deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1DescribeStreamSummaryCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DescribeStreamSummaryCommandOutput> => {\n  if (output.statusCode >= 400) {\n    return deserializeAws_json1_1DescribeStreamSummaryCommandError(output, context);\n  }\n  const data: any = await parseBody(output.body, context);\n  let contents: any = {};\n  contents = deserializeAws_json1_1DescribeStreamSummaryOutput(data, context);\n  const response: DescribeStreamSummaryCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    __type: \"DescribeStreamSummaryOutput\",\n    ...contents,\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1DescribeStreamSummaryCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DescribeStreamSummaryCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  const errorTypeParts: String = parsedOutput.body[\"__type\"].split(\"#\");\n  errorCode = errorTypeParts[1] === undefined ? errorTypeParts[0] : errorTypeParts[1];\n  switch (errorCode) {\n    case \"LimitExceededException\":\n    case \"com.amazonaws.kinesis#LimitExceededException\":\n      response = {\n        ...(await deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1DisableEnhancedMonitoringCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DisableEnhancedMonitoringCommandOutput> => {\n  if (output.statusCode >= 400) {\n    return deserializeAws_json1_1DisableEnhancedMonitoringCommandError(output, context);\n  }\n  const data: any = await parseBody(output.body, context);\n  let contents: any = {};\n  contents = deserializeAws_json1_1EnhancedMonitoringOutput(data, context);\n  const response: DisableEnhancedMonitoringCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    __type: \"EnhancedMonitoringOutput\",\n    ...contents,\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1DisableEnhancedMonitoringCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DisableEnhancedMonitoringCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  const errorTypeParts: String = parsedOutput.body[\"__type\"].split(\"#\");\n  errorCode = errorTypeParts[1] === undefined ? errorTypeParts[0] : errorTypeParts[1];\n  switch (errorCode) {\n    case \"InvalidArgumentException\":\n    case \"com.amazonaws.kinesis#InvalidArgumentException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"LimitExceededException\":\n    case \"com.amazonaws.kinesis#LimitExceededException\":\n      response = {\n        ...(await deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceInUseException\":\n    case \"com.amazonaws.kinesis#ResourceInUseException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceInUseExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1EnableEnhancedMonitoringCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<EnableEnhancedMonitoringCommandOutput> => {\n  if (output.statusCode >= 400) {\n    return deserializeAws_json1_1EnableEnhancedMonitoringCommandError(output, context);\n  }\n  const data: any = await parseBody(output.body, context);\n  let contents: any = {};\n  contents = deserializeAws_json1_1EnhancedMonitoringOutput(data, context);\n  const response: EnableEnhancedMonitoringCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    __type: \"EnhancedMonitoringOutput\",\n    ...contents,\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1EnableEnhancedMonitoringCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<EnableEnhancedMonitoringCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  const errorTypeParts: String = parsedOutput.body[\"__type\"].split(\"#\");\n  errorCode = errorTypeParts[1] === undefined ? errorTypeParts[0] : errorTypeParts[1];\n  switch (errorCode) {\n    case \"InvalidArgumentException\":\n    case \"com.amazonaws.kinesis#InvalidArgumentException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"LimitExceededException\":\n    case \"com.amazonaws.kinesis#LimitExceededException\":\n      response = {\n        ...(await deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceInUseException\":\n    case \"com.amazonaws.kinesis#ResourceInUseException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceInUseExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1GetRecordsCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetRecordsCommandOutput> => {\n  if (output.statusCode >= 400) {\n    return deserializeAws_json1_1GetRecordsCommandError(output, context);\n  }\n  const data: any = await parseBody(output.body, context);\n  let contents: any = {};\n  contents = deserializeAws_json1_1GetRecordsOutput(data, context);\n  const response: GetRecordsCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    __type: \"GetRecordsOutput\",\n    ...contents,\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1GetRecordsCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetRecordsCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  const errorTypeParts: String = parsedOutput.body[\"__type\"].split(\"#\");\n  errorCode = errorTypeParts[1] === undefined ? errorTypeParts[0] : errorTypeParts[1];\n  switch (errorCode) {\n    case \"ExpiredIteratorException\":\n    case \"com.amazonaws.kinesis#ExpiredIteratorException\":\n      response = {\n        ...(await deserializeAws_json1_1ExpiredIteratorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InvalidArgumentException\":\n    case \"com.amazonaws.kinesis#InvalidArgumentException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"KMSAccessDeniedException\":\n    case \"com.amazonaws.kinesis#KMSAccessDeniedException\":\n      response = {\n        ...(await deserializeAws_json1_1KMSAccessDeniedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"KMSDisabledException\":\n    case \"com.amazonaws.kinesis#KMSDisabledException\":\n      response = {\n        ...(await deserializeAws_json1_1KMSDisabledExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"KMSInvalidStateException\":\n    case \"com.amazonaws.kinesis#KMSInvalidStateException\":\n      response = {\n        ...(await deserializeAws_json1_1KMSInvalidStateExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"KMSNotFoundException\":\n    case \"com.amazonaws.kinesis#KMSNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1KMSNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"KMSOptInRequired\":\n    case \"com.amazonaws.kinesis#KMSOptInRequired\":\n      response = {\n        ...(await deserializeAws_json1_1KMSOptInRequiredResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"KMSThrottlingException\":\n    case \"com.amazonaws.kinesis#KMSThrottlingException\":\n      response = {\n        ...(await deserializeAws_json1_1KMSThrottlingExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ProvisionedThroughputExceededException\":\n    case \"com.amazonaws.kinesis#ProvisionedThroughputExceededException\":\n      response = {\n        ...(await deserializeAws_json1_1ProvisionedThroughputExceededExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1GetShardIteratorCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetShardIteratorCommandOutput> => {\n  if (output.statusCode >= 400) {\n    return deserializeAws_json1_1GetShardIteratorCommandError(output, context);\n  }\n  const data: any = await parseBody(output.body, context);\n  let contents: any = {};\n  contents = deserializeAws_json1_1GetShardIteratorOutput(data, context);\n  const response: GetShardIteratorCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    __type: \"GetShardIteratorOutput\",\n    ...contents,\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1GetShardIteratorCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetShardIteratorCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  const errorTypeParts: String = parsedOutput.body[\"__type\"].split(\"#\");\n  errorCode = errorTypeParts[1] === undefined ? errorTypeParts[0] : errorTypeParts[1];\n  switch (errorCode) {\n    case \"InvalidArgumentException\":\n    case \"com.amazonaws.kinesis#InvalidArgumentException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ProvisionedThroughputExceededException\":\n    case \"com.amazonaws.kinesis#ProvisionedThroughputExceededException\":\n      response = {\n        ...(await deserializeAws_json1_1ProvisionedThroughputExceededExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1IncreaseStreamRetentionPeriodCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<IncreaseStreamRetentionPeriodCommandOutput> => {\n  if (output.statusCode >= 400) {\n    return deserializeAws_json1_1IncreaseStreamRetentionPeriodCommandError(output, context);\n  }\n  await collectBody(output.body, context);\n  const response: IncreaseStreamRetentionPeriodCommandOutput = {\n    $metadata: deserializeMetadata(output),\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1IncreaseStreamRetentionPeriodCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<IncreaseStreamRetentionPeriodCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  const errorTypeParts: String = parsedOutput.body[\"__type\"].split(\"#\");\n  errorCode = errorTypeParts[1] === undefined ? errorTypeParts[0] : errorTypeParts[1];\n  switch (errorCode) {\n    case \"InvalidArgumentException\":\n    case \"com.amazonaws.kinesis#InvalidArgumentException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"LimitExceededException\":\n    case \"com.amazonaws.kinesis#LimitExceededException\":\n      response = {\n        ...(await deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceInUseException\":\n    case \"com.amazonaws.kinesis#ResourceInUseException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceInUseExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1ListShardsCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<ListShardsCommandOutput> => {\n  if (output.statusCode >= 400) {\n    return deserializeAws_json1_1ListShardsCommandError(output, context);\n  }\n  const data: any = await parseBody(output.body, context);\n  let contents: any = {};\n  contents = deserializeAws_json1_1ListShardsOutput(data, context);\n  const response: ListShardsCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    __type: \"ListShardsOutput\",\n    ...contents,\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1ListShardsCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<ListShardsCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  const errorTypeParts: String = parsedOutput.body[\"__type\"].split(\"#\");\n  errorCode = errorTypeParts[1] === undefined ? errorTypeParts[0] : errorTypeParts[1];\n  switch (errorCode) {\n    case \"ExpiredNextTokenException\":\n    case \"com.amazonaws.kinesis#ExpiredNextTokenException\":\n      response = {\n        ...(await deserializeAws_json1_1ExpiredNextTokenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InvalidArgumentException\":\n    case \"com.amazonaws.kinesis#InvalidArgumentException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"LimitExceededException\":\n    case \"com.amazonaws.kinesis#LimitExceededException\":\n      response = {\n        ...(await deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceInUseException\":\n    case \"com.amazonaws.kinesis#ResourceInUseException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceInUseExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1ListStreamConsumersCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<ListStreamConsumersCommandOutput> => {\n  if (output.statusCode >= 400) {\n    return deserializeAws_json1_1ListStreamConsumersCommandError(output, context);\n  }\n  const data: any = await parseBody(output.body, context);\n  let contents: any = {};\n  contents = deserializeAws_json1_1ListStreamConsumersOutput(data, context);\n  const response: ListStreamConsumersCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    __type: \"ListStreamConsumersOutput\",\n    ...contents,\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1ListStreamConsumersCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<ListStreamConsumersCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  const errorTypeParts: String = parsedOutput.body[\"__type\"].split(\"#\");\n  errorCode = errorTypeParts[1] === undefined ? errorTypeParts[0] : errorTypeParts[1];\n  switch (errorCode) {\n    case \"ExpiredNextTokenException\":\n    case \"com.amazonaws.kinesis#ExpiredNextTokenException\":\n      response = {\n        ...(await deserializeAws_json1_1ExpiredNextTokenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InvalidArgumentException\":\n    case \"com.amazonaws.kinesis#InvalidArgumentException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"LimitExceededException\":\n    case \"com.amazonaws.kinesis#LimitExceededException\":\n      response = {\n        ...(await deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceInUseException\":\n    case \"com.amazonaws.kinesis#ResourceInUseException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceInUseExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1ListStreamsCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<ListStreamsCommandOutput> => {\n  if (output.statusCode >= 400) {\n    return deserializeAws_json1_1ListStreamsCommandError(output, context);\n  }\n  const data: any = await parseBody(output.body, context);\n  let contents: any = {};\n  contents = deserializeAws_json1_1ListStreamsOutput(data, context);\n  const response: ListStreamsCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    __type: \"ListStreamsOutput\",\n    ...contents,\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1ListStreamsCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<ListStreamsCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  const errorTypeParts: String = parsedOutput.body[\"__type\"].split(\"#\");\n  errorCode = errorTypeParts[1] === undefined ? errorTypeParts[0] : errorTypeParts[1];\n  switch (errorCode) {\n    case \"LimitExceededException\":\n    case \"com.amazonaws.kinesis#LimitExceededException\":\n      response = {\n        ...(await deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1ListTagsForStreamCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<ListTagsForStreamCommandOutput> => {\n  if (output.statusCode >= 400) {\n    return deserializeAws_json1_1ListTagsForStreamCommandError(output, context);\n  }\n  const data: any = await parseBody(output.body, context);\n  let contents: any = {};\n  contents = deserializeAws_json1_1ListTagsForStreamOutput(data, context);\n  const response: ListTagsForStreamCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    __type: \"ListTagsForStreamOutput\",\n    ...contents,\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1ListTagsForStreamCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<ListTagsForStreamCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  const errorTypeParts: String = parsedOutput.body[\"__type\"].split(\"#\");\n  errorCode = errorTypeParts[1] === undefined ? errorTypeParts[0] : errorTypeParts[1];\n  switch (errorCode) {\n    case \"InvalidArgumentException\":\n    case \"com.amazonaws.kinesis#InvalidArgumentException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"LimitExceededException\":\n    case \"com.amazonaws.kinesis#LimitExceededException\":\n      response = {\n        ...(await deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1MergeShardsCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<MergeShardsCommandOutput> => {\n  if (output.statusCode >= 400) {\n    return deserializeAws_json1_1MergeShardsCommandError(output, context);\n  }\n  await collectBody(output.body, context);\n  const response: MergeShardsCommandOutput = {\n    $metadata: deserializeMetadata(output),\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1MergeShardsCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<MergeShardsCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  const errorTypeParts: String = parsedOutput.body[\"__type\"].split(\"#\");\n  errorCode = errorTypeParts[1] === undefined ? errorTypeParts[0] : errorTypeParts[1];\n  switch (errorCode) {\n    case \"InvalidArgumentException\":\n    case \"com.amazonaws.kinesis#InvalidArgumentException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"LimitExceededException\":\n    case \"com.amazonaws.kinesis#LimitExceededException\":\n      response = {\n        ...(await deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceInUseException\":\n    case \"com.amazonaws.kinesis#ResourceInUseException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceInUseExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1PutRecordCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<PutRecordCommandOutput> => {\n  if (output.statusCode >= 400) {\n    return deserializeAws_json1_1PutRecordCommandError(output, context);\n  }\n  const data: any = await parseBody(output.body, context);\n  let contents: any = {};\n  contents = deserializeAws_json1_1PutRecordOutput(data, context);\n  const response: PutRecordCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    __type: \"PutRecordOutput\",\n    ...contents,\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1PutRecordCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<PutRecordCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  const errorTypeParts: String = parsedOutput.body[\"__type\"].split(\"#\");\n  errorCode = errorTypeParts[1] === undefined ? errorTypeParts[0] : errorTypeParts[1];\n  switch (errorCode) {\n    case \"InvalidArgumentException\":\n    case \"com.amazonaws.kinesis#InvalidArgumentException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"KMSAccessDeniedException\":\n    case \"com.amazonaws.kinesis#KMSAccessDeniedException\":\n      response = {\n        ...(await deserializeAws_json1_1KMSAccessDeniedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"KMSDisabledException\":\n    case \"com.amazonaws.kinesis#KMSDisabledException\":\n      response = {\n        ...(await deserializeAws_json1_1KMSDisabledExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"KMSInvalidStateException\":\n    case \"com.amazonaws.kinesis#KMSInvalidStateException\":\n      response = {\n        ...(await deserializeAws_json1_1KMSInvalidStateExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"KMSNotFoundException\":\n    case \"com.amazonaws.kinesis#KMSNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1KMSNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"KMSOptInRequired\":\n    case \"com.amazonaws.kinesis#KMSOptInRequired\":\n      response = {\n        ...(await deserializeAws_json1_1KMSOptInRequiredResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"KMSThrottlingException\":\n    case \"com.amazonaws.kinesis#KMSThrottlingException\":\n      response = {\n        ...(await deserializeAws_json1_1KMSThrottlingExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ProvisionedThroughputExceededException\":\n    case \"com.amazonaws.kinesis#ProvisionedThroughputExceededException\":\n      response = {\n        ...(await deserializeAws_json1_1ProvisionedThroughputExceededExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1PutRecordsCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<PutRecordsCommandOutput> => {\n  if (output.statusCode >= 400) {\n    return deserializeAws_json1_1PutRecordsCommandError(output, context);\n  }\n  const data: any = await parseBody(output.body, context);\n  let contents: any = {};\n  contents = deserializeAws_json1_1PutRecordsOutput(data, context);\n  const response: PutRecordsCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    __type: \"PutRecordsOutput\",\n    ...contents,\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1PutRecordsCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<PutRecordsCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  const errorTypeParts: String = parsedOutput.body[\"__type\"].split(\"#\");\n  errorCode = errorTypeParts[1] === undefined ? errorTypeParts[0] : errorTypeParts[1];\n  switch (errorCode) {\n    case \"InvalidArgumentException\":\n    case \"com.amazonaws.kinesis#InvalidArgumentException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"KMSAccessDeniedException\":\n    case \"com.amazonaws.kinesis#KMSAccessDeniedException\":\n      response = {\n        ...(await deserializeAws_json1_1KMSAccessDeniedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"KMSDisabledException\":\n    case \"com.amazonaws.kinesis#KMSDisabledException\":\n      response = {\n        ...(await deserializeAws_json1_1KMSDisabledExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"KMSInvalidStateException\":\n    case \"com.amazonaws.kinesis#KMSInvalidStateException\":\n      response = {\n        ...(await deserializeAws_json1_1KMSInvalidStateExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"KMSNotFoundException\":\n    case \"com.amazonaws.kinesis#KMSNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1KMSNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"KMSOptInRequired\":\n    case \"com.amazonaws.kinesis#KMSOptInRequired\":\n      response = {\n        ...(await deserializeAws_json1_1KMSOptInRequiredResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"KMSThrottlingException\":\n    case \"com.amazonaws.kinesis#KMSThrottlingException\":\n      response = {\n        ...(await deserializeAws_json1_1KMSThrottlingExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ProvisionedThroughputExceededException\":\n    case \"com.amazonaws.kinesis#ProvisionedThroughputExceededException\":\n      response = {\n        ...(await deserializeAws_json1_1ProvisionedThroughputExceededExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1RegisterStreamConsumerCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<RegisterStreamConsumerCommandOutput> => {\n  if (output.statusCode >= 400) {\n    return deserializeAws_json1_1RegisterStreamConsumerCommandError(output, context);\n  }\n  const data: any = await parseBody(output.body, context);\n  let contents: any = {};\n  contents = deserializeAws_json1_1RegisterStreamConsumerOutput(data, context);\n  const response: RegisterStreamConsumerCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    __type: \"RegisterStreamConsumerOutput\",\n    ...contents,\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1RegisterStreamConsumerCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<RegisterStreamConsumerCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  const errorTypeParts: String = parsedOutput.body[\"__type\"].split(\"#\");\n  errorCode = errorTypeParts[1] === undefined ? errorTypeParts[0] : errorTypeParts[1];\n  switch (errorCode) {\n    case \"InvalidArgumentException\":\n    case \"com.amazonaws.kinesis#InvalidArgumentException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"LimitExceededException\":\n    case \"com.amazonaws.kinesis#LimitExceededException\":\n      response = {\n        ...(await deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceInUseException\":\n    case \"com.amazonaws.kinesis#ResourceInUseException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceInUseExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1RemoveTagsFromStreamCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<RemoveTagsFromStreamCommandOutput> => {\n  if (output.statusCode >= 400) {\n    return deserializeAws_json1_1RemoveTagsFromStreamCommandError(output, context);\n  }\n  await collectBody(output.body, context);\n  const response: RemoveTagsFromStreamCommandOutput = {\n    $metadata: deserializeMetadata(output),\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1RemoveTagsFromStreamCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<RemoveTagsFromStreamCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  const errorTypeParts: String = parsedOutput.body[\"__type\"].split(\"#\");\n  errorCode = errorTypeParts[1] === undefined ? errorTypeParts[0] : errorTypeParts[1];\n  switch (errorCode) {\n    case \"InvalidArgumentException\":\n    case \"com.amazonaws.kinesis#InvalidArgumentException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"LimitExceededException\":\n    case \"com.amazonaws.kinesis#LimitExceededException\":\n      response = {\n        ...(await deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceInUseException\":\n    case \"com.amazonaws.kinesis#ResourceInUseException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceInUseExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1SplitShardCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<SplitShardCommandOutput> => {\n  if (output.statusCode >= 400) {\n    return deserializeAws_json1_1SplitShardCommandError(output, context);\n  }\n  await collectBody(output.body, context);\n  const response: SplitShardCommandOutput = {\n    $metadata: deserializeMetadata(output),\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1SplitShardCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<SplitShardCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  const errorTypeParts: String = parsedOutput.body[\"__type\"].split(\"#\");\n  errorCode = errorTypeParts[1] === undefined ? errorTypeParts[0] : errorTypeParts[1];\n  switch (errorCode) {\n    case \"InvalidArgumentException\":\n    case \"com.amazonaws.kinesis#InvalidArgumentException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"LimitExceededException\":\n    case \"com.amazonaws.kinesis#LimitExceededException\":\n      response = {\n        ...(await deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceInUseException\":\n    case \"com.amazonaws.kinesis#ResourceInUseException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceInUseExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1StartStreamEncryptionCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<StartStreamEncryptionCommandOutput> => {\n  if (output.statusCode >= 400) {\n    return deserializeAws_json1_1StartStreamEncryptionCommandError(output, context);\n  }\n  await collectBody(output.body, context);\n  const response: StartStreamEncryptionCommandOutput = {\n    $metadata: deserializeMetadata(output),\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1StartStreamEncryptionCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<StartStreamEncryptionCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  const errorTypeParts: String = parsedOutput.body[\"__type\"].split(\"#\");\n  errorCode = errorTypeParts[1] === undefined ? errorTypeParts[0] : errorTypeParts[1];\n  switch (errorCode) {\n    case \"InvalidArgumentException\":\n    case \"com.amazonaws.kinesis#InvalidArgumentException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"KMSAccessDeniedException\":\n    case \"com.amazonaws.kinesis#KMSAccessDeniedException\":\n      response = {\n        ...(await deserializeAws_json1_1KMSAccessDeniedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"KMSDisabledException\":\n    case \"com.amazonaws.kinesis#KMSDisabledException\":\n      response = {\n        ...(await deserializeAws_json1_1KMSDisabledExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"KMSInvalidStateException\":\n    case \"com.amazonaws.kinesis#KMSInvalidStateException\":\n      response = {\n        ...(await deserializeAws_json1_1KMSInvalidStateExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"KMSNotFoundException\":\n    case \"com.amazonaws.kinesis#KMSNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1KMSNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"KMSOptInRequired\":\n    case \"com.amazonaws.kinesis#KMSOptInRequired\":\n      response = {\n        ...(await deserializeAws_json1_1KMSOptInRequiredResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"KMSThrottlingException\":\n    case \"com.amazonaws.kinesis#KMSThrottlingException\":\n      response = {\n        ...(await deserializeAws_json1_1KMSThrottlingExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"LimitExceededException\":\n    case \"com.amazonaws.kinesis#LimitExceededException\":\n      response = {\n        ...(await deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceInUseException\":\n    case \"com.amazonaws.kinesis#ResourceInUseException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceInUseExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1StopStreamEncryptionCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<StopStreamEncryptionCommandOutput> => {\n  if (output.statusCode >= 400) {\n    return deserializeAws_json1_1StopStreamEncryptionCommandError(output, context);\n  }\n  await collectBody(output.body, context);\n  const response: StopStreamEncryptionCommandOutput = {\n    $metadata: deserializeMetadata(output),\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1StopStreamEncryptionCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<StopStreamEncryptionCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  const errorTypeParts: String = parsedOutput.body[\"__type\"].split(\"#\");\n  errorCode = errorTypeParts[1] === undefined ? errorTypeParts[0] : errorTypeParts[1];\n  switch (errorCode) {\n    case \"InvalidArgumentException\":\n    case \"com.amazonaws.kinesis#InvalidArgumentException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"LimitExceededException\":\n    case \"com.amazonaws.kinesis#LimitExceededException\":\n      response = {\n        ...(await deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceInUseException\":\n    case \"com.amazonaws.kinesis#ResourceInUseException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceInUseExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1SubscribeToShardCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<SubscribeToShardCommandOutput> => {\n  if (output.statusCode >= 400) {\n    return deserializeAws_json1_1SubscribeToShardCommandError(output, context);\n  }\n  const data: any = await parseBody(output.body, context);\n  let contents: any = {};\n  contents = deserializeAws_json1_1SubscribeToShardOutput(data, context);\n  const response: SubscribeToShardCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    __type: \"SubscribeToShardOutput\",\n    ...contents,\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1SubscribeToShardCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<SubscribeToShardCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  const errorTypeParts: String = parsedOutput.body[\"__type\"].split(\"#\");\n  errorCode = errorTypeParts[1] === undefined ? errorTypeParts[0] : errorTypeParts[1];\n  switch (errorCode) {\n    case \"InvalidArgumentException\":\n    case \"com.amazonaws.kinesis#InvalidArgumentException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"LimitExceededException\":\n    case \"com.amazonaws.kinesis#LimitExceededException\":\n      response = {\n        ...(await deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceInUseException\":\n    case \"com.amazonaws.kinesis#ResourceInUseException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceInUseExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1UpdateShardCountCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<UpdateShardCountCommandOutput> => {\n  if (output.statusCode >= 400) {\n    return deserializeAws_json1_1UpdateShardCountCommandError(output, context);\n  }\n  const data: any = await parseBody(output.body, context);\n  let contents: any = {};\n  contents = deserializeAws_json1_1UpdateShardCountOutput(data, context);\n  const response: UpdateShardCountCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    __type: \"UpdateShardCountOutput\",\n    ...contents,\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1UpdateShardCountCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<UpdateShardCountCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  const errorTypeParts: String = parsedOutput.body[\"__type\"].split(\"#\");\n  errorCode = errorTypeParts[1] === undefined ? errorTypeParts[0] : errorTypeParts[1];\n  switch (errorCode) {\n    case \"InvalidArgumentException\":\n    case \"com.amazonaws.kinesis#InvalidArgumentException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"LimitExceededException\":\n    case \"com.amazonaws.kinesis#LimitExceededException\":\n      response = {\n        ...(await deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceInUseException\":\n    case \"com.amazonaws.kinesis#ResourceInUseException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceInUseExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nconst deserializeAws_json1_1ExpiredIteratorExceptionResponse = async (\n  parsedOutput: any,\n  context: __SerdeContext\n): Promise<ExpiredIteratorException> => {\n  const body = parsedOutput.body;\n  const deserialized: any = deserializeAws_json1_1ExpiredIteratorException(body, context);\n  const contents: ExpiredIteratorException = {\n    name: \"ExpiredIteratorException\",\n    $fault: \"client\",\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized,\n  };\n  return contents;\n};\n\nconst deserializeAws_json1_1ExpiredNextTokenExceptionResponse = async (\n  parsedOutput: any,\n  context: __SerdeContext\n): Promise<ExpiredNextTokenException> => {\n  const body = parsedOutput.body;\n  const deserialized: any = deserializeAws_json1_1ExpiredNextTokenException(body, context);\n  const contents: ExpiredNextTokenException = {\n    name: \"ExpiredNextTokenException\",\n    $fault: \"client\",\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized,\n  };\n  return contents;\n};\n\nconst deserializeAws_json1_1InvalidArgumentExceptionResponse = async (\n  parsedOutput: any,\n  context: __SerdeContext\n): Promise<InvalidArgumentException> => {\n  const body = parsedOutput.body;\n  const deserialized: any = deserializeAws_json1_1InvalidArgumentException(body, context);\n  const contents: InvalidArgumentException = {\n    name: \"InvalidArgumentException\",\n    $fault: \"client\",\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized,\n  };\n  return contents;\n};\n\nconst deserializeAws_json1_1KMSAccessDeniedExceptionResponse = async (\n  parsedOutput: any,\n  context: __SerdeContext\n): Promise<KMSAccessDeniedException> => {\n  const body = parsedOutput.body;\n  const deserialized: any = deserializeAws_json1_1KMSAccessDeniedException(body, context);\n  const contents: KMSAccessDeniedException = {\n    name: \"KMSAccessDeniedException\",\n    $fault: \"client\",\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized,\n  };\n  return contents;\n};\n\nconst deserializeAws_json1_1KMSDisabledExceptionResponse = async (\n  parsedOutput: any,\n  context: __SerdeContext\n): Promise<KMSDisabledException> => {\n  const body = parsedOutput.body;\n  const deserialized: any = deserializeAws_json1_1KMSDisabledException(body, context);\n  const contents: KMSDisabledException = {\n    name: \"KMSDisabledException\",\n    $fault: \"client\",\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized,\n  };\n  return contents;\n};\n\nconst deserializeAws_json1_1KMSInvalidStateExceptionResponse = async (\n  parsedOutput: any,\n  context: __SerdeContext\n): Promise<KMSInvalidStateException> => {\n  const body = parsedOutput.body;\n  const deserialized: any = deserializeAws_json1_1KMSInvalidStateException(body, context);\n  const contents: KMSInvalidStateException = {\n    name: \"KMSInvalidStateException\",\n    $fault: \"client\",\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized,\n  };\n  return contents;\n};\n\nconst deserializeAws_json1_1KMSNotFoundExceptionResponse = async (\n  parsedOutput: any,\n  context: __SerdeContext\n): Promise<KMSNotFoundException> => {\n  const body = parsedOutput.body;\n  const deserialized: any = deserializeAws_json1_1KMSNotFoundException(body, context);\n  const contents: KMSNotFoundException = {\n    name: \"KMSNotFoundException\",\n    $fault: \"client\",\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized,\n  };\n  return contents;\n};\n\nconst deserializeAws_json1_1KMSOptInRequiredResponse = async (\n  parsedOutput: any,\n  context: __SerdeContext\n): Promise<KMSOptInRequired> => {\n  const body = parsedOutput.body;\n  const deserialized: any = deserializeAws_json1_1KMSOptInRequired(body, context);\n  const contents: KMSOptInRequired = {\n    name: \"KMSOptInRequired\",\n    $fault: \"client\",\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized,\n  };\n  return contents;\n};\n\nconst deserializeAws_json1_1KMSThrottlingExceptionResponse = async (\n  parsedOutput: any,\n  context: __SerdeContext\n): Promise<KMSThrottlingException> => {\n  const body = parsedOutput.body;\n  const deserialized: any = deserializeAws_json1_1KMSThrottlingException(body, context);\n  const contents: KMSThrottlingException = {\n    name: \"KMSThrottlingException\",\n    $fault: \"client\",\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized,\n  };\n  return contents;\n};\n\nconst deserializeAws_json1_1LimitExceededExceptionResponse = async (\n  parsedOutput: any,\n  context: __SerdeContext\n): Promise<LimitExceededException> => {\n  const body = parsedOutput.body;\n  const deserialized: any = deserializeAws_json1_1LimitExceededException(body, context);\n  const contents: LimitExceededException = {\n    name: \"LimitExceededException\",\n    $fault: \"client\",\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized,\n  };\n  return contents;\n};\n\nconst deserializeAws_json1_1ProvisionedThroughputExceededExceptionResponse = async (\n  parsedOutput: any,\n  context: __SerdeContext\n): Promise<ProvisionedThroughputExceededException> => {\n  const body = parsedOutput.body;\n  const deserialized: any = deserializeAws_json1_1ProvisionedThroughputExceededException(body, context);\n  const contents: ProvisionedThroughputExceededException = {\n    name: \"ProvisionedThroughputExceededException\",\n    $fault: \"client\",\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized,\n  };\n  return contents;\n};\n\nconst deserializeAws_json1_1ResourceInUseExceptionResponse = async (\n  parsedOutput: any,\n  context: __SerdeContext\n): Promise<ResourceInUseException> => {\n  const body = parsedOutput.body;\n  const deserialized: any = deserializeAws_json1_1ResourceInUseException(body, context);\n  const contents: ResourceInUseException = {\n    name: \"ResourceInUseException\",\n    $fault: \"client\",\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized,\n  };\n  return contents;\n};\n\nconst deserializeAws_json1_1ResourceNotFoundExceptionResponse = async (\n  parsedOutput: any,\n  context: __SerdeContext\n): Promise<ResourceNotFoundException> => {\n  const body = parsedOutput.body;\n  const deserialized: any = deserializeAws_json1_1ResourceNotFoundException(body, context);\n  const contents: ResourceNotFoundException = {\n    name: \"ResourceNotFoundException\",\n    $fault: \"client\",\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized,\n  };\n  return contents;\n};\n\nconst serializeAws_json1_1AddTagsToStreamInput = (input: AddTagsToStreamInput, context: __SerdeContext): any => {\n  return {\n    ...(input.StreamName !== undefined && { StreamName: input.StreamName }),\n    ...(input.Tags !== undefined && { Tags: serializeAws_json1_1TagMap(input.Tags, context) }),\n  };\n};\n\nconst serializeAws_json1_1CreateStreamInput = (input: CreateStreamInput, context: __SerdeContext): any => {\n  return {\n    ...(input.ShardCount !== undefined && { ShardCount: input.ShardCount }),\n    ...(input.StreamName !== undefined && { StreamName: input.StreamName }),\n  };\n};\n\nconst serializeAws_json1_1DecreaseStreamRetentionPeriodInput = (\n  input: DecreaseStreamRetentionPeriodInput,\n  context: __SerdeContext\n): any => {\n  return {\n    ...(input.RetentionPeriodHours !== undefined && { RetentionPeriodHours: input.RetentionPeriodHours }),\n    ...(input.StreamName !== undefined && { StreamName: input.StreamName }),\n  };\n};\n\nconst serializeAws_json1_1DeleteStreamInput = (input: DeleteStreamInput, context: __SerdeContext): any => {\n  return {\n    ...(input.EnforceConsumerDeletion !== undefined && { EnforceConsumerDeletion: input.EnforceConsumerDeletion }),\n    ...(input.StreamName !== undefined && { StreamName: input.StreamName }),\n  };\n};\n\nconst serializeAws_json1_1DeregisterStreamConsumerInput = (\n  input: DeregisterStreamConsumerInput,\n  context: __SerdeContext\n): any => {\n  return {\n    ...(input.ConsumerARN !== undefined && { ConsumerARN: input.ConsumerARN }),\n    ...(input.ConsumerName !== undefined && { ConsumerName: input.ConsumerName }),\n    ...(input.StreamARN !== undefined && { StreamARN: input.StreamARN }),\n  };\n};\n\nconst serializeAws_json1_1DescribeLimitsInput = (input: DescribeLimitsInput, context: __SerdeContext): any => {\n  return {};\n};\n\nconst serializeAws_json1_1DescribeStreamConsumerInput = (\n  input: DescribeStreamConsumerInput,\n  context: __SerdeContext\n): any => {\n  return {\n    ...(input.ConsumerARN !== undefined && { ConsumerARN: input.ConsumerARN }),\n    ...(input.ConsumerName !== undefined && { ConsumerName: input.ConsumerName }),\n    ...(input.StreamARN !== undefined && { StreamARN: input.StreamARN }),\n  };\n};\n\nconst serializeAws_json1_1DescribeStreamInput = (input: DescribeStreamInput, context: __SerdeContext): any => {\n  return {\n    ...(input.ExclusiveStartShardId !== undefined && { ExclusiveStartShardId: input.ExclusiveStartShardId }),\n    ...(input.Limit !== undefined && { Limit: input.Limit }),\n    ...(input.StreamName !== undefined && { StreamName: input.StreamName }),\n  };\n};\n\nconst serializeAws_json1_1DescribeStreamSummaryInput = (\n  input: DescribeStreamSummaryInput,\n  context: __SerdeContext\n): any => {\n  return {\n    ...(input.StreamName !== undefined && { StreamName: input.StreamName }),\n  };\n};\n\nconst serializeAws_json1_1DisableEnhancedMonitoringInput = (\n  input: DisableEnhancedMonitoringInput,\n  context: __SerdeContext\n): any => {\n  return {\n    ...(input.ShardLevelMetrics !== undefined && {\n      ShardLevelMetrics: serializeAws_json1_1MetricsNameList(input.ShardLevelMetrics, context),\n    }),\n    ...(input.StreamName !== undefined && { StreamName: input.StreamName }),\n  };\n};\n\nconst serializeAws_json1_1EnableEnhancedMonitoringInput = (\n  input: EnableEnhancedMonitoringInput,\n  context: __SerdeContext\n): any => {\n  return {\n    ...(input.ShardLevelMetrics !== undefined && {\n      ShardLevelMetrics: serializeAws_json1_1MetricsNameList(input.ShardLevelMetrics, context),\n    }),\n    ...(input.StreamName !== undefined && { StreamName: input.StreamName }),\n  };\n};\n\nconst serializeAws_json1_1GetRecordsInput = (input: GetRecordsInput, context: __SerdeContext): any => {\n  return {\n    ...(input.Limit !== undefined && { Limit: input.Limit }),\n    ...(input.ShardIterator !== undefined && { ShardIterator: input.ShardIterator }),\n  };\n};\n\nconst serializeAws_json1_1GetShardIteratorInput = (input: GetShardIteratorInput, context: __SerdeContext): any => {\n  return {\n    ...(input.ShardId !== undefined && { ShardId: input.ShardId }),\n    ...(input.ShardIteratorType !== undefined && { ShardIteratorType: input.ShardIteratorType }),\n    ...(input.StartingSequenceNumber !== undefined && { StartingSequenceNumber: input.StartingSequenceNumber }),\n    ...(input.StreamName !== undefined && { StreamName: input.StreamName }),\n    ...(input.Timestamp !== undefined && { Timestamp: Math.round(input.Timestamp.getTime() / 1000) }),\n  };\n};\n\nconst serializeAws_json1_1IncreaseStreamRetentionPeriodInput = (\n  input: IncreaseStreamRetentionPeriodInput,\n  context: __SerdeContext\n): any => {\n  return {\n    ...(input.RetentionPeriodHours !== undefined && { RetentionPeriodHours: input.RetentionPeriodHours }),\n    ...(input.StreamName !== undefined && { StreamName: input.StreamName }),\n  };\n};\n\nconst serializeAws_json1_1ListShardsInput = (input: ListShardsInput, context: __SerdeContext): any => {\n  return {\n    ...(input.ExclusiveStartShardId !== undefined && { ExclusiveStartShardId: input.ExclusiveStartShardId }),\n    ...(input.MaxResults !== undefined && { MaxResults: input.MaxResults }),\n    ...(input.NextToken !== undefined && { NextToken: input.NextToken }),\n    ...(input.StreamCreationTimestamp !== undefined && {\n      StreamCreationTimestamp: Math.round(input.StreamCreationTimestamp.getTime() / 1000),\n    }),\n    ...(input.StreamName !== undefined && { StreamName: input.StreamName }),\n  };\n};\n\nconst serializeAws_json1_1ListStreamConsumersInput = (\n  input: ListStreamConsumersInput,\n  context: __SerdeContext\n): any => {\n  return {\n    ...(input.MaxResults !== undefined && { MaxResults: input.MaxResults }),\n    ...(input.NextToken !== undefined && { NextToken: input.NextToken }),\n    ...(input.StreamARN !== undefined && { StreamARN: input.StreamARN }),\n    ...(input.StreamCreationTimestamp !== undefined && {\n      StreamCreationTimestamp: Math.round(input.StreamCreationTimestamp.getTime() / 1000),\n    }),\n  };\n};\n\nconst serializeAws_json1_1ListStreamsInput = (input: ListStreamsInput, context: __SerdeContext): any => {\n  return {\n    ...(input.ExclusiveStartStreamName !== undefined && { ExclusiveStartStreamName: input.ExclusiveStartStreamName }),\n    ...(input.Limit !== undefined && { Limit: input.Limit }),\n  };\n};\n\nconst serializeAws_json1_1ListTagsForStreamInput = (input: ListTagsForStreamInput, context: __SerdeContext): any => {\n  return {\n    ...(input.ExclusiveStartTagKey !== undefined && { ExclusiveStartTagKey: input.ExclusiveStartTagKey }),\n    ...(input.Limit !== undefined && { Limit: input.Limit }),\n    ...(input.StreamName !== undefined && { StreamName: input.StreamName }),\n  };\n};\n\nconst serializeAws_json1_1MergeShardsInput = (input: MergeShardsInput, context: __SerdeContext): any => {\n  return {\n    ...(input.AdjacentShardToMerge !== undefined && { AdjacentShardToMerge: input.AdjacentShardToMerge }),\n    ...(input.ShardToMerge !== undefined && { ShardToMerge: input.ShardToMerge }),\n    ...(input.StreamName !== undefined && { StreamName: input.StreamName }),\n  };\n};\n\nconst serializeAws_json1_1MetricsNameList = (input: (MetricsName | string)[], context: __SerdeContext): any => {\n  return input.map((entry) => entry);\n};\n\nconst serializeAws_json1_1PutRecordInput = (input: PutRecordInput, context: __SerdeContext): any => {\n  return {\n    ...(input.Data !== undefined && { Data: context.base64Encoder(input.Data) }),\n    ...(input.ExplicitHashKey !== undefined && { ExplicitHashKey: input.ExplicitHashKey }),\n    ...(input.PartitionKey !== undefined && { PartitionKey: input.PartitionKey }),\n    ...(input.SequenceNumberForOrdering !== undefined && {\n      SequenceNumberForOrdering: input.SequenceNumberForOrdering,\n    }),\n    ...(input.StreamName !== undefined && { StreamName: input.StreamName }),\n  };\n};\n\nconst serializeAws_json1_1PutRecordsInput = (input: PutRecordsInput, context: __SerdeContext): any => {\n  return {\n    ...(input.Records !== undefined && {\n      Records: serializeAws_json1_1PutRecordsRequestEntryList(input.Records, context),\n    }),\n    ...(input.StreamName !== undefined && { StreamName: input.StreamName }),\n  };\n};\n\nconst serializeAws_json1_1PutRecordsRequestEntry = (input: PutRecordsRequestEntry, context: __SerdeContext): any => {\n  return {\n    ...(input.Data !== undefined && { Data: context.base64Encoder(input.Data) }),\n    ...(input.ExplicitHashKey !== undefined && { ExplicitHashKey: input.ExplicitHashKey }),\n    ...(input.PartitionKey !== undefined && { PartitionKey: input.PartitionKey }),\n  };\n};\n\nconst serializeAws_json1_1PutRecordsRequestEntryList = (\n  input: PutRecordsRequestEntry[],\n  context: __SerdeContext\n): any => {\n  return input.map((entry) => serializeAws_json1_1PutRecordsRequestEntry(entry, context));\n};\n\nconst serializeAws_json1_1RegisterStreamConsumerInput = (\n  input: RegisterStreamConsumerInput,\n  context: __SerdeContext\n): any => {\n  return {\n    ...(input.ConsumerName !== undefined && { ConsumerName: input.ConsumerName }),\n    ...(input.StreamARN !== undefined && { StreamARN: input.StreamARN }),\n  };\n};\n\nconst serializeAws_json1_1RemoveTagsFromStreamInput = (\n  input: RemoveTagsFromStreamInput,\n  context: __SerdeContext\n): any => {\n  return {\n    ...(input.StreamName !== undefined && { StreamName: input.StreamName }),\n    ...(input.TagKeys !== undefined && { TagKeys: serializeAws_json1_1TagKeyList(input.TagKeys, context) }),\n  };\n};\n\nconst serializeAws_json1_1SplitShardInput = (input: SplitShardInput, context: __SerdeContext): any => {\n  return {\n    ...(input.NewStartingHashKey !== undefined && { NewStartingHashKey: input.NewStartingHashKey }),\n    ...(input.ShardToSplit !== undefined && { ShardToSplit: input.ShardToSplit }),\n    ...(input.StreamName !== undefined && { StreamName: input.StreamName }),\n  };\n};\n\nconst serializeAws_json1_1StartingPosition = (input: StartingPosition, context: __SerdeContext): any => {\n  return {\n    ...(input.SequenceNumber !== undefined && { SequenceNumber: input.SequenceNumber }),\n    ...(input.Timestamp !== undefined && { Timestamp: Math.round(input.Timestamp.getTime() / 1000) }),\n    ...(input.Type !== undefined && { Type: input.Type }),\n  };\n};\n\nconst serializeAws_json1_1StartStreamEncryptionInput = (\n  input: StartStreamEncryptionInput,\n  context: __SerdeContext\n): any => {\n  return {\n    ...(input.EncryptionType !== undefined && { EncryptionType: input.EncryptionType }),\n    ...(input.KeyId !== undefined && { KeyId: input.KeyId }),\n    ...(input.StreamName !== undefined && { StreamName: input.StreamName }),\n  };\n};\n\nconst serializeAws_json1_1StopStreamEncryptionInput = (\n  input: StopStreamEncryptionInput,\n  context: __SerdeContext\n): any => {\n  return {\n    ...(input.EncryptionType !== undefined && { EncryptionType: input.EncryptionType }),\n    ...(input.KeyId !== undefined && { KeyId: input.KeyId }),\n    ...(input.StreamName !== undefined && { StreamName: input.StreamName }),\n  };\n};\n\nconst serializeAws_json1_1SubscribeToShardInput = (input: SubscribeToShardInput, context: __SerdeContext): any => {\n  return {\n    ...(input.ConsumerARN !== undefined && { ConsumerARN: input.ConsumerARN }),\n    ...(input.ShardId !== undefined && { ShardId: input.ShardId }),\n    ...(input.StartingPosition !== undefined && {\n      StartingPosition: serializeAws_json1_1StartingPosition(input.StartingPosition, context),\n    }),\n  };\n};\n\nconst serializeAws_json1_1TagKeyList = (input: string[], context: __SerdeContext): any => {\n  return input.map((entry) => entry);\n};\n\nconst serializeAws_json1_1TagMap = (input: { [key: string]: string }, context: __SerdeContext): any => {\n  return Object.entries(input).reduce(\n    (acc: { [key: string]: string }, [key, value]: [string, any]) => ({\n      ...acc,\n      [key]: value,\n    }),\n    {}\n  );\n};\n\nconst serializeAws_json1_1UpdateShardCountInput = (input: UpdateShardCountInput, context: __SerdeContext): any => {\n  return {\n    ...(input.ScalingType !== undefined && { ScalingType: input.ScalingType }),\n    ...(input.StreamName !== undefined && { StreamName: input.StreamName }),\n    ...(input.TargetShardCount !== undefined && { TargetShardCount: input.TargetShardCount }),\n  };\n};\n\nconst deserializeAws_json1_1Consumer = (output: any, context: __SerdeContext): Consumer => {\n  return {\n    __type: \"Consumer\",\n    ConsumerARN: output.ConsumerARN !== undefined && output.ConsumerARN !== null ? output.ConsumerARN : undefined,\n    ConsumerCreationTimestamp:\n      output.ConsumerCreationTimestamp !== undefined && output.ConsumerCreationTimestamp !== null\n        ? new Date(Math.round(output.ConsumerCreationTimestamp * 1000))\n        : undefined,\n    ConsumerName: output.ConsumerName !== undefined && output.ConsumerName !== null ? output.ConsumerName : undefined,\n    ConsumerStatus:\n      output.ConsumerStatus !== undefined && output.ConsumerStatus !== null ? output.ConsumerStatus : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1ConsumerDescription = (output: any, context: __SerdeContext): ConsumerDescription => {\n  return {\n    __type: \"ConsumerDescription\",\n    ConsumerARN: output.ConsumerARN !== undefined && output.ConsumerARN !== null ? output.ConsumerARN : undefined,\n    ConsumerCreationTimestamp:\n      output.ConsumerCreationTimestamp !== undefined && output.ConsumerCreationTimestamp !== null\n        ? new Date(Math.round(output.ConsumerCreationTimestamp * 1000))\n        : undefined,\n    ConsumerName: output.ConsumerName !== undefined && output.ConsumerName !== null ? output.ConsumerName : undefined,\n    ConsumerStatus:\n      output.ConsumerStatus !== undefined && output.ConsumerStatus !== null ? output.ConsumerStatus : undefined,\n    StreamARN: output.StreamARN !== undefined && output.StreamARN !== null ? output.StreamARN : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1ConsumerList = (output: any, context: __SerdeContext): Consumer[] => {\n  return (output || []).map((entry: any) => deserializeAws_json1_1Consumer(entry, context));\n};\n\nconst deserializeAws_json1_1DescribeLimitsOutput = (output: any, context: __SerdeContext): DescribeLimitsOutput => {\n  return {\n    __type: \"DescribeLimitsOutput\",\n    OpenShardCount:\n      output.OpenShardCount !== undefined && output.OpenShardCount !== null ? output.OpenShardCount : undefined,\n    ShardLimit: output.ShardLimit !== undefined && output.ShardLimit !== null ? output.ShardLimit : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1DescribeStreamConsumerOutput = (\n  output: any,\n  context: __SerdeContext\n): DescribeStreamConsumerOutput => {\n  return {\n    __type: \"DescribeStreamConsumerOutput\",\n    ConsumerDescription:\n      output.ConsumerDescription !== undefined && output.ConsumerDescription !== null\n        ? deserializeAws_json1_1ConsumerDescription(output.ConsumerDescription, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1DescribeStreamOutput = (output: any, context: __SerdeContext): DescribeStreamOutput => {\n  return {\n    __type: \"DescribeStreamOutput\",\n    StreamDescription:\n      output.StreamDescription !== undefined && output.StreamDescription !== null\n        ? deserializeAws_json1_1StreamDescription(output.StreamDescription, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1DescribeStreamSummaryOutput = (\n  output: any,\n  context: __SerdeContext\n): DescribeStreamSummaryOutput => {\n  return {\n    __type: \"DescribeStreamSummaryOutput\",\n    StreamDescriptionSummary:\n      output.StreamDescriptionSummary !== undefined && output.StreamDescriptionSummary !== null\n        ? deserializeAws_json1_1StreamDescriptionSummary(output.StreamDescriptionSummary, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1EnhancedMetrics = (output: any, context: __SerdeContext): EnhancedMetrics => {\n  return {\n    __type: \"EnhancedMetrics\",\n    ShardLevelMetrics:\n      output.ShardLevelMetrics !== undefined && output.ShardLevelMetrics !== null\n        ? deserializeAws_json1_1MetricsNameList(output.ShardLevelMetrics, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1EnhancedMonitoringList = (output: any, context: __SerdeContext): EnhancedMetrics[] => {\n  return (output || []).map((entry: any) => deserializeAws_json1_1EnhancedMetrics(entry, context));\n};\n\nconst deserializeAws_json1_1EnhancedMonitoringOutput = (\n  output: any,\n  context: __SerdeContext\n): EnhancedMonitoringOutput => {\n  return {\n    __type: \"EnhancedMonitoringOutput\",\n    CurrentShardLevelMetrics:\n      output.CurrentShardLevelMetrics !== undefined && output.CurrentShardLevelMetrics !== null\n        ? deserializeAws_json1_1MetricsNameList(output.CurrentShardLevelMetrics, context)\n        : undefined,\n    DesiredShardLevelMetrics:\n      output.DesiredShardLevelMetrics !== undefined && output.DesiredShardLevelMetrics !== null\n        ? deserializeAws_json1_1MetricsNameList(output.DesiredShardLevelMetrics, context)\n        : undefined,\n    StreamName: output.StreamName !== undefined && output.StreamName !== null ? output.StreamName : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1ExpiredIteratorException = (\n  output: any,\n  context: __SerdeContext\n): ExpiredIteratorException => {\n  return {\n    __type: \"ExpiredIteratorException\",\n    message: output.message !== undefined && output.message !== null ? output.message : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1ExpiredNextTokenException = (\n  output: any,\n  context: __SerdeContext\n): ExpiredNextTokenException => {\n  return {\n    __type: \"ExpiredNextTokenException\",\n    message: output.message !== undefined && output.message !== null ? output.message : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1GetRecordsOutput = (output: any, context: __SerdeContext): GetRecordsOutput => {\n  return {\n    __type: \"GetRecordsOutput\",\n    MillisBehindLatest:\n      output.MillisBehindLatest !== undefined && output.MillisBehindLatest !== null\n        ? output.MillisBehindLatest\n        : undefined,\n    NextShardIterator:\n      output.NextShardIterator !== undefined && output.NextShardIterator !== null\n        ? output.NextShardIterator\n        : undefined,\n    Records:\n      output.Records !== undefined && output.Records !== null\n        ? deserializeAws_json1_1RecordList(output.Records, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1GetShardIteratorOutput = (output: any, context: __SerdeContext): GetShardIteratorOutput => {\n  return {\n    __type: \"GetShardIteratorOutput\",\n    ShardIterator:\n      output.ShardIterator !== undefined && output.ShardIterator !== null ? output.ShardIterator : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1HashKeyRange = (output: any, context: __SerdeContext): HashKeyRange => {\n  return {\n    __type: \"HashKeyRange\",\n    EndingHashKey:\n      output.EndingHashKey !== undefined && output.EndingHashKey !== null ? output.EndingHashKey : undefined,\n    StartingHashKey:\n      output.StartingHashKey !== undefined && output.StartingHashKey !== null ? output.StartingHashKey : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1InternalFailureException = (\n  output: any,\n  context: __SerdeContext\n): InternalFailureException => {\n  return {\n    __type: \"InternalFailureException\",\n    message: output.message !== undefined && output.message !== null ? output.message : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1InvalidArgumentException = (\n  output: any,\n  context: __SerdeContext\n): InvalidArgumentException => {\n  return {\n    __type: \"InvalidArgumentException\",\n    message: output.message !== undefined && output.message !== null ? output.message : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1KMSAccessDeniedException = (\n  output: any,\n  context: __SerdeContext\n): KMSAccessDeniedException => {\n  return {\n    __type: \"KMSAccessDeniedException\",\n    message: output.message !== undefined && output.message !== null ? output.message : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1KMSDisabledException = (output: any, context: __SerdeContext): KMSDisabledException => {\n  return {\n    __type: \"KMSDisabledException\",\n    message: output.message !== undefined && output.message !== null ? output.message : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1KMSInvalidStateException = (\n  output: any,\n  context: __SerdeContext\n): KMSInvalidStateException => {\n  return {\n    __type: \"KMSInvalidStateException\",\n    message: output.message !== undefined && output.message !== null ? output.message : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1KMSNotFoundException = (output: any, context: __SerdeContext): KMSNotFoundException => {\n  return {\n    __type: \"KMSNotFoundException\",\n    message: output.message !== undefined && output.message !== null ? output.message : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1KMSOptInRequired = (output: any, context: __SerdeContext): KMSOptInRequired => {\n  return {\n    __type: \"KMSOptInRequired\",\n    message: output.message !== undefined && output.message !== null ? output.message : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1KMSThrottlingException = (output: any, context: __SerdeContext): KMSThrottlingException => {\n  return {\n    __type: \"KMSThrottlingException\",\n    message: output.message !== undefined && output.message !== null ? output.message : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1LimitExceededException = (output: any, context: __SerdeContext): LimitExceededException => {\n  return {\n    __type: \"LimitExceededException\",\n    message: output.message !== undefined && output.message !== null ? output.message : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1ListShardsOutput = (output: any, context: __SerdeContext): ListShardsOutput => {\n  return {\n    __type: \"ListShardsOutput\",\n    NextToken: output.NextToken !== undefined && output.NextToken !== null ? output.NextToken : undefined,\n    Shards:\n      output.Shards !== undefined && output.Shards !== null\n        ? deserializeAws_json1_1ShardList(output.Shards, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1ListStreamConsumersOutput = (\n  output: any,\n  context: __SerdeContext\n): ListStreamConsumersOutput => {\n  return {\n    __type: \"ListStreamConsumersOutput\",\n    Consumers:\n      output.Consumers !== undefined && output.Consumers !== null\n        ? deserializeAws_json1_1ConsumerList(output.Consumers, context)\n        : undefined,\n    NextToken: output.NextToken !== undefined && output.NextToken !== null ? output.NextToken : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1ListStreamsOutput = (output: any, context: __SerdeContext): ListStreamsOutput => {\n  return {\n    __type: \"ListStreamsOutput\",\n    HasMoreStreams:\n      output.HasMoreStreams !== undefined && output.HasMoreStreams !== null ? output.HasMoreStreams : undefined,\n    StreamNames:\n      output.StreamNames !== undefined && output.StreamNames !== null\n        ? deserializeAws_json1_1StreamNameList(output.StreamNames, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1ListTagsForStreamOutput = (\n  output: any,\n  context: __SerdeContext\n): ListTagsForStreamOutput => {\n  return {\n    __type: \"ListTagsForStreamOutput\",\n    HasMoreTags: output.HasMoreTags !== undefined && output.HasMoreTags !== null ? output.HasMoreTags : undefined,\n    Tags:\n      output.Tags !== undefined && output.Tags !== null\n        ? deserializeAws_json1_1TagList(output.Tags, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1MetricsNameList = (output: any, context: __SerdeContext): (MetricsName | string)[] => {\n  return (output || []).map((entry: any) => entry);\n};\n\nconst deserializeAws_json1_1ProvisionedThroughputExceededException = (\n  output: any,\n  context: __SerdeContext\n): ProvisionedThroughputExceededException => {\n  return {\n    __type: \"ProvisionedThroughputExceededException\",\n    message: output.message !== undefined && output.message !== null ? output.message : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1PutRecordOutput = (output: any, context: __SerdeContext): PutRecordOutput => {\n  return {\n    __type: \"PutRecordOutput\",\n    EncryptionType:\n      output.EncryptionType !== undefined && output.EncryptionType !== null ? output.EncryptionType : undefined,\n    SequenceNumber:\n      output.SequenceNumber !== undefined && output.SequenceNumber !== null ? output.SequenceNumber : undefined,\n    ShardId: output.ShardId !== undefined && output.ShardId !== null ? output.ShardId : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1PutRecordsOutput = (output: any, context: __SerdeContext): PutRecordsOutput => {\n  return {\n    __type: \"PutRecordsOutput\",\n    EncryptionType:\n      output.EncryptionType !== undefined && output.EncryptionType !== null ? output.EncryptionType : undefined,\n    FailedRecordCount:\n      output.FailedRecordCount !== undefined && output.FailedRecordCount !== null\n        ? output.FailedRecordCount\n        : undefined,\n    Records:\n      output.Records !== undefined && output.Records !== null\n        ? deserializeAws_json1_1PutRecordsResultEntryList(output.Records, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1PutRecordsResultEntry = (output: any, context: __SerdeContext): PutRecordsResultEntry => {\n  return {\n    __type: \"PutRecordsResultEntry\",\n    ErrorCode: output.ErrorCode !== undefined && output.ErrorCode !== null ? output.ErrorCode : undefined,\n    ErrorMessage: output.ErrorMessage !== undefined && output.ErrorMessage !== null ? output.ErrorMessage : undefined,\n    SequenceNumber:\n      output.SequenceNumber !== undefined && output.SequenceNumber !== null ? output.SequenceNumber : undefined,\n    ShardId: output.ShardId !== undefined && output.ShardId !== null ? output.ShardId : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1PutRecordsResultEntryList = (\n  output: any,\n  context: __SerdeContext\n): PutRecordsResultEntry[] => {\n  return (output || []).map((entry: any) => deserializeAws_json1_1PutRecordsResultEntry(entry, context));\n};\n\nconst deserializeAws_json1_1_Record = (output: any, context: __SerdeContext): _Record => {\n  return {\n    __type: \"Record\",\n    ApproximateArrivalTimestamp:\n      output.ApproximateArrivalTimestamp !== undefined && output.ApproximateArrivalTimestamp !== null\n        ? new Date(Math.round(output.ApproximateArrivalTimestamp * 1000))\n        : undefined,\n    Data: output.Data !== undefined && output.Data !== null ? context.base64Decoder(output.Data) : undefined,\n    EncryptionType:\n      output.EncryptionType !== undefined && output.EncryptionType !== null ? output.EncryptionType : undefined,\n    PartitionKey: output.PartitionKey !== undefined && output.PartitionKey !== null ? output.PartitionKey : undefined,\n    SequenceNumber:\n      output.SequenceNumber !== undefined && output.SequenceNumber !== null ? output.SequenceNumber : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1RecordList = (output: any, context: __SerdeContext): _Record[] => {\n  return (output || []).map((entry: any) => deserializeAws_json1_1_Record(entry, context));\n};\n\nconst deserializeAws_json1_1RegisterStreamConsumerOutput = (\n  output: any,\n  context: __SerdeContext\n): RegisterStreamConsumerOutput => {\n  return {\n    __type: \"RegisterStreamConsumerOutput\",\n    Consumer:\n      output.Consumer !== undefined && output.Consumer !== null\n        ? deserializeAws_json1_1Consumer(output.Consumer, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1ResourceInUseException = (output: any, context: __SerdeContext): ResourceInUseException => {\n  return {\n    __type: \"ResourceInUseException\",\n    message: output.message !== undefined && output.message !== null ? output.message : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1ResourceNotFoundException = (\n  output: any,\n  context: __SerdeContext\n): ResourceNotFoundException => {\n  return {\n    __type: \"ResourceNotFoundException\",\n    message: output.message !== undefined && output.message !== null ? output.message : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1SequenceNumberRange = (output: any, context: __SerdeContext): SequenceNumberRange => {\n  return {\n    __type: \"SequenceNumberRange\",\n    EndingSequenceNumber:\n      output.EndingSequenceNumber !== undefined && output.EndingSequenceNumber !== null\n        ? output.EndingSequenceNumber\n        : undefined,\n    StartingSequenceNumber:\n      output.StartingSequenceNumber !== undefined && output.StartingSequenceNumber !== null\n        ? output.StartingSequenceNumber\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1Shard = (output: any, context: __SerdeContext): Shard => {\n  return {\n    __type: \"Shard\",\n    AdjacentParentShardId:\n      output.AdjacentParentShardId !== undefined && output.AdjacentParentShardId !== null\n        ? output.AdjacentParentShardId\n        : undefined,\n    HashKeyRange:\n      output.HashKeyRange !== undefined && output.HashKeyRange !== null\n        ? deserializeAws_json1_1HashKeyRange(output.HashKeyRange, context)\n        : undefined,\n    ParentShardId:\n      output.ParentShardId !== undefined && output.ParentShardId !== null ? output.ParentShardId : undefined,\n    SequenceNumberRange:\n      output.SequenceNumberRange !== undefined && output.SequenceNumberRange !== null\n        ? deserializeAws_json1_1SequenceNumberRange(output.SequenceNumberRange, context)\n        : undefined,\n    ShardId: output.ShardId !== undefined && output.ShardId !== null ? output.ShardId : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1ShardList = (output: any, context: __SerdeContext): Shard[] => {\n  return (output || []).map((entry: any) => deserializeAws_json1_1Shard(entry, context));\n};\n\nconst deserializeAws_json1_1StreamDescription = (output: any, context: __SerdeContext): StreamDescription => {\n  return {\n    __type: \"StreamDescription\",\n    EncryptionType:\n      output.EncryptionType !== undefined && output.EncryptionType !== null ? output.EncryptionType : undefined,\n    EnhancedMonitoring:\n      output.EnhancedMonitoring !== undefined && output.EnhancedMonitoring !== null\n        ? deserializeAws_json1_1EnhancedMonitoringList(output.EnhancedMonitoring, context)\n        : undefined,\n    HasMoreShards:\n      output.HasMoreShards !== undefined && output.HasMoreShards !== null ? output.HasMoreShards : undefined,\n    KeyId: output.KeyId !== undefined && output.KeyId !== null ? output.KeyId : undefined,\n    RetentionPeriodHours:\n      output.RetentionPeriodHours !== undefined && output.RetentionPeriodHours !== null\n        ? output.RetentionPeriodHours\n        : undefined,\n    Shards:\n      output.Shards !== undefined && output.Shards !== null\n        ? deserializeAws_json1_1ShardList(output.Shards, context)\n        : undefined,\n    StreamARN: output.StreamARN !== undefined && output.StreamARN !== null ? output.StreamARN : undefined,\n    StreamCreationTimestamp:\n      output.StreamCreationTimestamp !== undefined && output.StreamCreationTimestamp !== null\n        ? new Date(Math.round(output.StreamCreationTimestamp * 1000))\n        : undefined,\n    StreamName: output.StreamName !== undefined && output.StreamName !== null ? output.StreamName : undefined,\n    StreamStatus: output.StreamStatus !== undefined && output.StreamStatus !== null ? output.StreamStatus : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1StreamDescriptionSummary = (\n  output: any,\n  context: __SerdeContext\n): StreamDescriptionSummary => {\n  return {\n    __type: \"StreamDescriptionSummary\",\n    ConsumerCount:\n      output.ConsumerCount !== undefined && output.ConsumerCount !== null ? output.ConsumerCount : undefined,\n    EncryptionType:\n      output.EncryptionType !== undefined && output.EncryptionType !== null ? output.EncryptionType : undefined,\n    EnhancedMonitoring:\n      output.EnhancedMonitoring !== undefined && output.EnhancedMonitoring !== null\n        ? deserializeAws_json1_1EnhancedMonitoringList(output.EnhancedMonitoring, context)\n        : undefined,\n    KeyId: output.KeyId !== undefined && output.KeyId !== null ? output.KeyId : undefined,\n    OpenShardCount:\n      output.OpenShardCount !== undefined && output.OpenShardCount !== null ? output.OpenShardCount : undefined,\n    RetentionPeriodHours:\n      output.RetentionPeriodHours !== undefined && output.RetentionPeriodHours !== null\n        ? output.RetentionPeriodHours\n        : undefined,\n    StreamARN: output.StreamARN !== undefined && output.StreamARN !== null ? output.StreamARN : undefined,\n    StreamCreationTimestamp:\n      output.StreamCreationTimestamp !== undefined && output.StreamCreationTimestamp !== null\n        ? new Date(Math.round(output.StreamCreationTimestamp * 1000))\n        : undefined,\n    StreamName: output.StreamName !== undefined && output.StreamName !== null ? output.StreamName : undefined,\n    StreamStatus: output.StreamStatus !== undefined && output.StreamStatus !== null ? output.StreamStatus : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1StreamNameList = (output: any, context: __SerdeContext): string[] => {\n  return (output || []).map((entry: any) => entry);\n};\n\nconst deserializeAws_json1_1SubscribeToShardEvent = (output: any, context: __SerdeContext): SubscribeToShardEvent => {\n  return {\n    __type: \"SubscribeToShardEvent\",\n    ContinuationSequenceNumber:\n      output.ContinuationSequenceNumber !== undefined && output.ContinuationSequenceNumber !== null\n        ? output.ContinuationSequenceNumber\n        : undefined,\n    MillisBehindLatest:\n      output.MillisBehindLatest !== undefined && output.MillisBehindLatest !== null\n        ? output.MillisBehindLatest\n        : undefined,\n    Records:\n      output.Records !== undefined && output.Records !== null\n        ? deserializeAws_json1_1RecordList(output.Records, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1SubscribeToShardEventStream = (\n  output: any,\n  context: __SerdeContext\n): SubscribeToShardEventStream => {\n  if (output.InternalFailureException !== undefined && output.InternalFailureException !== null) {\n    return {\n      InternalFailureException: deserializeAws_json1_1InternalFailureException(\n        output.InternalFailureException,\n        context\n      ),\n    };\n  }\n  if (output.KMSAccessDeniedException !== undefined && output.KMSAccessDeniedException !== null) {\n    return {\n      KMSAccessDeniedException: deserializeAws_json1_1KMSAccessDeniedException(\n        output.KMSAccessDeniedException,\n        context\n      ),\n    };\n  }\n  if (output.KMSDisabledException !== undefined && output.KMSDisabledException !== null) {\n    return {\n      KMSDisabledException: deserializeAws_json1_1KMSDisabledException(output.KMSDisabledException, context),\n    };\n  }\n  if (output.KMSInvalidStateException !== undefined && output.KMSInvalidStateException !== null) {\n    return {\n      KMSInvalidStateException: deserializeAws_json1_1KMSInvalidStateException(\n        output.KMSInvalidStateException,\n        context\n      ),\n    };\n  }\n  if (output.KMSNotFoundException !== undefined && output.KMSNotFoundException !== null) {\n    return {\n      KMSNotFoundException: deserializeAws_json1_1KMSNotFoundException(output.KMSNotFoundException, context),\n    };\n  }\n  if (output.KMSOptInRequired !== undefined && output.KMSOptInRequired !== null) {\n    return {\n      KMSOptInRequired: deserializeAws_json1_1KMSOptInRequired(output.KMSOptInRequired, context),\n    };\n  }\n  if (output.KMSThrottlingException !== undefined && output.KMSThrottlingException !== null) {\n    return {\n      KMSThrottlingException: deserializeAws_json1_1KMSThrottlingException(output.KMSThrottlingException, context),\n    };\n  }\n  if (output.ResourceInUseException !== undefined && output.ResourceInUseException !== null) {\n    return {\n      ResourceInUseException: deserializeAws_json1_1ResourceInUseException(output.ResourceInUseException, context),\n    };\n  }\n  if (output.ResourceNotFoundException !== undefined && output.ResourceNotFoundException !== null) {\n    return {\n      ResourceNotFoundException: deserializeAws_json1_1ResourceNotFoundException(\n        output.ResourceNotFoundException,\n        context\n      ),\n    };\n  }\n  if (output.SubscribeToShardEvent !== undefined && output.SubscribeToShardEvent !== null) {\n    return {\n      SubscribeToShardEvent: deserializeAws_json1_1SubscribeToShardEvent(output.SubscribeToShardEvent, context),\n    };\n  }\n  return { $unknown: Object.entries(output)[0] };\n};\n\nconst deserializeAws_json1_1SubscribeToShardOutput = (output: any, context: __SerdeContext): SubscribeToShardOutput => {\n  return {\n    __type: \"SubscribeToShardOutput\",\n    EventStream:\n      output.EventStream !== undefined && output.EventStream !== null\n        ? deserializeAws_json1_1SubscribeToShardEventStream(output.EventStream, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1Tag = (output: any, context: __SerdeContext): Tag => {\n  return {\n    __type: \"Tag\",\n    Key: output.Key !== undefined && output.Key !== null ? output.Key : undefined,\n    Value: output.Value !== undefined && output.Value !== null ? output.Value : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1TagList = (output: any, context: __SerdeContext): Tag[] => {\n  return (output || []).map((entry: any) => deserializeAws_json1_1Tag(entry, context));\n};\n\nconst deserializeAws_json1_1UpdateShardCountOutput = (output: any, context: __SerdeContext): UpdateShardCountOutput => {\n  return {\n    __type: \"UpdateShardCountOutput\",\n    CurrentShardCount:\n      output.CurrentShardCount !== undefined && output.CurrentShardCount !== null\n        ? output.CurrentShardCount\n        : undefined,\n    StreamName: output.StreamName !== undefined && output.StreamName !== null ? output.StreamName : undefined,\n    TargetShardCount:\n      output.TargetShardCount !== undefined && output.TargetShardCount !== null ? output.TargetShardCount : undefined,\n  } as any;\n};\n\nconst deserializeMetadata = (output: __HttpResponse): __ResponseMetadata => ({\n  httpStatusCode: output.statusCode,\n  httpHeaders: output.headers,\n  requestId: output.headers[\"x-amzn-requestid\"],\n});\n\n// Collect low-level response body stream to Uint8Array.\nconst collectBody = (streamBody: any = new Uint8Array(), context: __SerdeContext): Promise<Uint8Array> => {\n  if (streamBody instanceof Uint8Array) {\n    return Promise.resolve(streamBody);\n  }\n  return context.streamCollector(streamBody) || Promise.resolve(new Uint8Array());\n};\n\n// Encode Uint8Array data into string with utf-8.\nconst collectBodyString = (streamBody: any, context: __SerdeContext): Promise<string> =>\n  collectBody(streamBody, context).then((body) => context.utf8Encoder(body));\n\nconst buildHttpRpcRequest = async (\n  context: __SerdeContext,\n  headers: __HeaderBag,\n  path: string,\n  resolvedHostname: string | undefined,\n  body: any\n): Promise<__HttpRequest> => {\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  const contents: any = {\n    protocol,\n    hostname,\n    port,\n    method: \"POST\",\n    path,\n    headers,\n  };\n  if (resolvedHostname !== undefined) {\n    contents.hostname = resolvedHostname;\n  }\n  if (body !== undefined) {\n    contents.body = body;\n  }\n  return new __HttpRequest(contents);\n};\n\nconst parseBody = (streamBody: any, context: __SerdeContext): any =>\n  collectBodyString(streamBody, context).then((encoded) => {\n    if (encoded.length) {\n      return JSON.parse(encoded);\n    }\n    return {};\n  });\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}