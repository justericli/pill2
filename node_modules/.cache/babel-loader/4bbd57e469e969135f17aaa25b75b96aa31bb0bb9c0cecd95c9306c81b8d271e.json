{"ast":null,"code":"import { ConsoleLogger as Logger } from './Logger';\nvar logger = new Logger('Parser');\nexport var parseMobileHubConfig = function (config) {\n  var amplifyConfig = {};\n  // Analytics\n  if (config['aws_mobile_analytics_app_id']) {\n    var Analytics = {\n      AWSPinpoint: {\n        appId: config['aws_mobile_analytics_app_id'],\n        region: config['aws_mobile_analytics_app_region']\n      }\n    };\n    amplifyConfig.Analytics = Analytics;\n  }\n  // Auth\n  if (config['aws_cognito_identity_pool_id'] || config['aws_user_pools_id']) {\n    amplifyConfig.Auth = {\n      userPoolId: config['aws_user_pools_id'],\n      userPoolWebClientId: config['aws_user_pools_web_client_id'],\n      region: config['aws_cognito_region'],\n      identityPoolId: config['aws_cognito_identity_pool_id'],\n      identityPoolRegion: config['aws_cognito_region'],\n      mandatorySignIn: config['aws_mandatory_sign_in'] === 'enable'\n    };\n  }\n  // Storage\n  var storageConfig;\n  if (config['aws_user_files_s3_bucket']) {\n    storageConfig = {\n      AWSS3: {\n        bucket: config['aws_user_files_s3_bucket'],\n        region: config['aws_user_files_s3_bucket_region'],\n        dangerouslyConnectToHttpEndpointForTesting: config['aws_user_files_s3_dangerously_connect_to_http_endpoint_for_testing']\n      }\n    };\n  } else {\n    storageConfig = config ? config.Storage || config : {};\n  }\n  amplifyConfig.Analytics = Object.assign({}, amplifyConfig.Analytics, config.Analytics);\n  amplifyConfig.Auth = Object.assign({}, amplifyConfig.Auth, config.Auth);\n  amplifyConfig.Storage = Object.assign({}, storageConfig);\n  logger.debug('parse config', config, 'to amplifyconfig', amplifyConfig);\n  return amplifyConfig;\n};\n/**\n * @deprecated use per-function export\n */\nvar Parser = /** @class */function () {\n  function Parser() {}\n  Parser.parseMobilehubConfig = parseMobileHubConfig;\n  return Parser;\n}();\nexport { Parser };\n/**\n * @deprecated use per-function export\n */\nexport default Parser;","map":{"version":3,"names":["ConsoleLogger","Logger","logger","parseMobileHubConfig","config","amplifyConfig","Analytics","AWSPinpoint","appId","region","Auth","userPoolId","userPoolWebClientId","identityPoolId","identityPoolRegion","mandatorySignIn","storageConfig","AWSS3","bucket","dangerouslyConnectToHttpEndpointForTesting","Storage","Object","assign","debug","Parser","parseMobilehubConfig"],"sources":["/Users/ericli/node_modules/@aws-amplify/analytics/node_modules/@aws-amplify/core/src/Parser.ts"],"sourcesContent":["import { AmplifyConfig } from './types';\nimport { ConsoleLogger as Logger } from './Logger';\n\nconst logger = new Logger('Parser');\n\nexport const parseMobileHubConfig = (config): AmplifyConfig => {\n\tconst amplifyConfig: AmplifyConfig = {};\n\t// Analytics\n\tif (config['aws_mobile_analytics_app_id']) {\n\t\tconst Analytics = {\n\t\t\tAWSPinpoint: {\n\t\t\t\tappId: config['aws_mobile_analytics_app_id'],\n\t\t\t\tregion: config['aws_mobile_analytics_app_region'],\n\t\t\t},\n\t\t};\n\t\tamplifyConfig.Analytics = Analytics;\n\t}\n\n\t// Auth\n\tif (config['aws_cognito_identity_pool_id'] || config['aws_user_pools_id']) {\n\t\tamplifyConfig.Auth = {\n\t\t\tuserPoolId: config['aws_user_pools_id'],\n\t\t\tuserPoolWebClientId: config['aws_user_pools_web_client_id'],\n\t\t\tregion: config['aws_cognito_region'],\n\t\t\tidentityPoolId: config['aws_cognito_identity_pool_id'],\n\t\t\tidentityPoolRegion: config['aws_cognito_region'],\n\t\t\tmandatorySignIn: config['aws_mandatory_sign_in'] === 'enable',\n\t\t};\n\t}\n\n\t// Storage\n\tlet storageConfig;\n\tif (config['aws_user_files_s3_bucket']) {\n\t\tstorageConfig = {\n\t\t\tAWSS3: {\n\t\t\t\tbucket: config['aws_user_files_s3_bucket'],\n\t\t\t\tregion: config['aws_user_files_s3_bucket_region'],\n\t\t\t\tdangerouslyConnectToHttpEndpointForTesting:\n\t\t\t\t\tconfig[\n\t\t\t\t\t\t'aws_user_files_s3_dangerously_connect_to_http_endpoint_for_testing'\n\t\t\t\t\t],\n\t\t\t},\n\t\t};\n\t} else {\n\t\tstorageConfig = config ? config.Storage || config : {};\n\t}\n\tamplifyConfig.Analytics = Object.assign(\n\t\t{},\n\t\tamplifyConfig.Analytics,\n\t\tconfig.Analytics\n\t);\n\tamplifyConfig.Auth = Object.assign({}, amplifyConfig.Auth, config.Auth);\n\tamplifyConfig.Storage = Object.assign({}, storageConfig);\n\tlogger.debug('parse config', config, 'to amplifyconfig', amplifyConfig);\n\treturn amplifyConfig;\n};\n\n/**\n * @deprecated use per-function export\n */\nexport class Parser {\n\tstatic parseMobilehubConfig = parseMobileHubConfig;\n}\n\n/**\n * @deprecated use per-function export\n */\nexport default Parser;\n"],"mappings":"AACA,SAASA,aAAa,IAAIC,MAAM,QAAQ,UAAU;AAElD,IAAMC,MAAM,GAAG,IAAID,MAAM,CAAC,QAAQ,CAAC;AAEnC,OAAO,IAAME,oBAAoB,GAAG,SAAAA,CAACC,MAAM;EAC1C,IAAMC,aAAa,GAAkB,EAAE;EACvC;EACA,IAAID,MAAM,CAAC,6BAA6B,CAAC,EAAE;IAC1C,IAAME,SAAS,GAAG;MACjBC,WAAW,EAAE;QACZC,KAAK,EAAEJ,MAAM,CAAC,6BAA6B,CAAC;QAC5CK,MAAM,EAAEL,MAAM,CAAC,iCAAiC;;KAEjD;IACDC,aAAa,CAACC,SAAS,GAAGA,SAAS;;EAGpC;EACA,IAAIF,MAAM,CAAC,8BAA8B,CAAC,IAAIA,MAAM,CAAC,mBAAmB,CAAC,EAAE;IAC1EC,aAAa,CAACK,IAAI,GAAG;MACpBC,UAAU,EAAEP,MAAM,CAAC,mBAAmB,CAAC;MACvCQ,mBAAmB,EAAER,MAAM,CAAC,8BAA8B,CAAC;MAC3DK,MAAM,EAAEL,MAAM,CAAC,oBAAoB,CAAC;MACpCS,cAAc,EAAET,MAAM,CAAC,8BAA8B,CAAC;MACtDU,kBAAkB,EAAEV,MAAM,CAAC,oBAAoB,CAAC;MAChDW,eAAe,EAAEX,MAAM,CAAC,uBAAuB,CAAC,KAAK;KACrD;;EAGF;EACA,IAAIY,aAAa;EACjB,IAAIZ,MAAM,CAAC,0BAA0B,CAAC,EAAE;IACvCY,aAAa,GAAG;MACfC,KAAK,EAAE;QACNC,MAAM,EAAEd,MAAM,CAAC,0BAA0B,CAAC;QAC1CK,MAAM,EAAEL,MAAM,CAAC,iCAAiC,CAAC;QACjDe,0CAA0C,EACzCf,MAAM,CACL,oEAAoE;;KAGvE;GACD,MAAM;IACNY,aAAa,GAAGZ,MAAM,GAAGA,MAAM,CAACgB,OAAO,IAAIhB,MAAM,GAAG,EAAE;;EAEvDC,aAAa,CAACC,SAAS,GAAGe,MAAM,CAACC,MAAM,CACtC,EAAE,EACFjB,aAAa,CAACC,SAAS,EACvBF,MAAM,CAACE,SAAS,CAChB;EACDD,aAAa,CAACK,IAAI,GAAGW,MAAM,CAACC,MAAM,CAAC,EAAE,EAAEjB,aAAa,CAACK,IAAI,EAAEN,MAAM,CAACM,IAAI,CAAC;EACvEL,aAAa,CAACe,OAAO,GAAGC,MAAM,CAACC,MAAM,CAAC,EAAE,EAAEN,aAAa,CAAC;EACxDd,MAAM,CAACqB,KAAK,CAAC,cAAc,EAAEnB,MAAM,EAAE,kBAAkB,EAAEC,aAAa,CAAC;EACvE,OAAOA,aAAa;AACrB,CAAC;AAED;;;AAGA,IAAAmB,MAAA;EAAA,SAAAA,OAAA,GAEA;EADQA,MAAA,CAAAC,oBAAoB,GAAGtB,oBAAoB;EACnD,OAAAqB,MAAC;CAAA,EAFD;SAAaA,MAAM;AAInB;;;AAGA,eAAeA,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}