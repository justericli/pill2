{"ast":null,"code":"var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n      label: 0,\n      sent: function () {\n        if (t[0] & 1) throw t[1];\n        return t[1];\n      },\n      trys: [],\n      ops: []\n    },\n    f,\n    y,\n    t,\n    g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n        case 7:\n          op = _.ops.pop();\n          _.trys.pop();\n          continue;\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n            _.ops.push(op);\n            break;\n          }\n          if (t[2]) _.ops.pop();\n          _.trys.pop();\n          continue;\n      }\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n/*\n * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nimport { ConsoleLogger as Logger } from '../Logger';\nimport { browserOrNode } from '../JS';\nimport { NonRetryableError } from '../Util';\nvar logger = new Logger('CognitoCredentials');\nvar waitForInit = new Promise(function (res, rej) {\n  if (!browserOrNode().isBrowser) {\n    logger.debug('not in the browser, directly resolved');\n    return res();\n  }\n  var ga = window['gapi'] && window['gapi'].auth2 ? window['gapi'].auth2 : null;\n  if (ga) {\n    logger.debug('google api already loaded');\n    return res();\n  } else {\n    setTimeout(function () {\n      return res();\n    }, 2000);\n  }\n});\nvar GoogleOAuth = /** @class */function () {\n  function GoogleOAuth() {\n    this.initialized = false;\n    this.refreshGoogleToken = this.refreshGoogleToken.bind(this);\n    this._refreshGoogleTokenImpl = this._refreshGoogleTokenImpl.bind(this);\n  }\n  GoogleOAuth.prototype.refreshGoogleToken = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (!!this.initialized) return [3 /*break*/, 2];\n            logger.debug('need to wait for the Google SDK loaded');\n            return [4 /*yield*/, waitForInit];\n          case 1:\n            _a.sent();\n            this.initialized = true;\n            logger.debug('finish waiting');\n            _a.label = 2;\n          case 2:\n            return [2 /*return*/, this._refreshGoogleTokenImpl()];\n        }\n      });\n    });\n  };\n  GoogleOAuth.prototype._refreshGoogleTokenImpl = function () {\n    var ga = null;\n    if (browserOrNode().isBrowser) ga = window['gapi'] && window['gapi'].auth2 ? window['gapi'].auth2 : null;\n    if (!ga) {\n      logger.debug('no gapi auth2 available');\n      return Promise.reject('no gapi auth2 available');\n    }\n    return new Promise(function (res, rej) {\n      ga.getAuthInstance().then(function (googleAuth) {\n        if (!googleAuth) {\n          logger.debug('google Auth undefined');\n          rej(new NonRetryableError('google Auth undefined'));\n        }\n        var googleUser = googleAuth.currentUser.get();\n        // refresh the token\n        if (googleUser.isSignedIn()) {\n          logger.debug('refreshing the google access token');\n          googleUser.reloadAuthResponse().then(function (authResponse) {\n            var id_token = authResponse.id_token,\n              expires_at = authResponse.expires_at;\n            res({\n              token: id_token,\n              expires_at: expires_at\n            });\n          }).catch(function (err) {\n            if (err && err.error === 'network_error') {\n              // Not using NonRetryableError so handler will be retried\n              rej('Network error reloading google auth response');\n            } else {\n              rej(new NonRetryableError('Failed to reload google auth response'));\n            }\n          });\n        } else {\n          rej(new NonRetryableError('User is not signed in with Google'));\n        }\n      }).catch(function (err) {\n        logger.debug('Failed to refresh google token', err);\n        rej(new NonRetryableError('Failed to refresh google token'));\n      });\n    });\n  };\n  return GoogleOAuth;\n}();\nexport { GoogleOAuth };\n/**\n * @deprecated use named import\n */\nexport default GoogleOAuth;","map":{"version":3,"names":["ConsoleLogger","Logger","browserOrNode","NonRetryableError","logger","waitForInit","Promise","res","rej","isBrowser","debug","ga","window","auth2","setTimeout","GoogleOAuth","initialized","refreshGoogleToken","bind","_refreshGoogleTokenImpl","prototype","_a","sent","reject","getAuthInstance","then","googleAuth","googleUser","currentUser","get","isSignedIn","reloadAuthResponse","authResponse","id_token","expires_at","token","catch","err","error"],"sources":["/Users/ericli/node_modules/@aws-amplify/core/src/OAuthHelper/GoogleOAuth.ts"],"sourcesContent":["/*\n * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nimport { ConsoleLogger as Logger } from '../Logger';\nimport { browserOrNode } from '../JS';\nimport { NonRetryableError } from '../Util';\n\nconst logger = new Logger('CognitoCredentials');\n\nconst waitForInit = new Promise((res, rej) => {\n\tif (!browserOrNode().isBrowser) {\n\t\tlogger.debug('not in the browser, directly resolved');\n\t\treturn res();\n\t}\n\tconst ga =\n\t\twindow['gapi'] && window['gapi'].auth2 ? window['gapi'].auth2 : null;\n\tif (ga) {\n\t\tlogger.debug('google api already loaded');\n\t\treturn res();\n\t} else {\n\t\tsetTimeout(() => {\n\t\t\treturn res();\n\t\t}, 2000);\n\t}\n});\n\nexport class GoogleOAuth {\n\tpublic initialized = false;\n\n\tconstructor() {\n\t\tthis.refreshGoogleToken = this.refreshGoogleToken.bind(this);\n\t\tthis._refreshGoogleTokenImpl = this._refreshGoogleTokenImpl.bind(this);\n\t}\n\n\tpublic async refreshGoogleToken() {\n\t\tif (!this.initialized) {\n\t\t\tlogger.debug('need to wait for the Google SDK loaded');\n\t\t\tawait waitForInit;\n\t\t\tthis.initialized = true;\n\t\t\tlogger.debug('finish waiting');\n\t\t}\n\n\t\treturn this._refreshGoogleTokenImpl();\n\t}\n\n\tprivate _refreshGoogleTokenImpl() {\n\t\tlet ga = null;\n\t\tif (browserOrNode().isBrowser)\n\t\t\tga = window['gapi'] && window['gapi'].auth2 ? window['gapi'].auth2 : null;\n\t\tif (!ga) {\n\t\t\tlogger.debug('no gapi auth2 available');\n\t\t\treturn Promise.reject('no gapi auth2 available');\n\t\t}\n\n\t\treturn new Promise((res, rej) => {\n\t\t\tga.getAuthInstance()\n\t\t\t\t.then(googleAuth => {\n\t\t\t\t\tif (!googleAuth) {\n\t\t\t\t\t\tlogger.debug('google Auth undefined');\n\t\t\t\t\t\trej(new NonRetryableError('google Auth undefined'));\n\t\t\t\t\t}\n\n\t\t\t\t\tconst googleUser = googleAuth.currentUser.get();\n\t\t\t\t\t// refresh the token\n\t\t\t\t\tif (googleUser.isSignedIn()) {\n\t\t\t\t\t\tlogger.debug('refreshing the google access token');\n\t\t\t\t\t\tgoogleUser\n\t\t\t\t\t\t\t.reloadAuthResponse()\n\t\t\t\t\t\t\t.then(authResponse => {\n\t\t\t\t\t\t\t\tconst { id_token, expires_at } = authResponse;\n\t\t\t\t\t\t\t\tres({ token: id_token, expires_at });\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t.catch(err => {\n\t\t\t\t\t\t\t\tif (err && err.error === 'network_error') {\n\t\t\t\t\t\t\t\t\t// Not using NonRetryableError so handler will be retried\n\t\t\t\t\t\t\t\t\trej('Network error reloading google auth response');\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\trej(\n\t\t\t\t\t\t\t\t\t\tnew NonRetryableError(\n\t\t\t\t\t\t\t\t\t\t\t'Failed to reload google auth response'\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\trej(new NonRetryableError('User is not signed in with Google'));\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.catch(err => {\n\t\t\t\t\tlogger.debug('Failed to refresh google token', err);\n\t\t\t\t\trej(new NonRetryableError('Failed to refresh google token'));\n\t\t\t\t});\n\t\t});\n\t}\n}\n\n/**\n * @deprecated use named import\n */\nexport default GoogleOAuth;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;;;;;;;AAYA,SAASA,aAAa,IAAIC,MAAM,QAAQ,WAAW;AACnD,SAASC,aAAa,QAAQ,OAAO;AACrC,SAASC,iBAAiB,QAAQ,SAAS;AAE3C,IAAMC,MAAM,GAAG,IAAIH,MAAM,CAAC,oBAAoB,CAAC;AAE/C,IAAMI,WAAW,GAAG,IAAIC,OAAO,CAAC,UAACC,GAAG,EAAEC,GAAG;EACxC,IAAI,CAACN,aAAa,EAAE,CAACO,SAAS,EAAE;IAC/BL,MAAM,CAACM,KAAK,CAAC,uCAAuC,CAAC;IACrD,OAAOH,GAAG,EAAE;;EAEb,IAAMI,EAAE,GACPC,MAAM,CAAC,MAAM,CAAC,IAAIA,MAAM,CAAC,MAAM,CAAC,CAACC,KAAK,GAAGD,MAAM,CAAC,MAAM,CAAC,CAACC,KAAK,GAAG,IAAI;EACrE,IAAIF,EAAE,EAAE;IACPP,MAAM,CAACM,KAAK,CAAC,2BAA2B,CAAC;IACzC,OAAOH,GAAG,EAAE;GACZ,MAAM;IACNO,UAAU,CAAC;MACV,OAAOP,GAAG,EAAE;IACb,CAAC,EAAE,IAAI,CAAC;;AAEV,CAAC,CAAC;AAEF,IAAAQ,WAAA;EAGC,SAAAA,YAAA;IAFO,KAAAC,WAAW,GAAG,KAAK;IAGzB,IAAI,CAACC,kBAAkB,GAAG,IAAI,CAACA,kBAAkB,CAACC,IAAI,CAAC,IAAI,CAAC;IAC5D,IAAI,CAACC,uBAAuB,GAAG,IAAI,CAACA,uBAAuB,CAACD,IAAI,CAAC,IAAI,CAAC;EACvE;EAEaH,WAAA,CAAAK,SAAA,CAAAH,kBAAkB,GAA/B;;;;;iBACK,CAAC,IAAI,CAACD,WAAW,EAAjB;YACHZ,MAAM,CAACM,KAAK,CAAC,wCAAwC,CAAC;YACtD,qBAAML,WAAW;;YAAjBgB,EAAA,CAAAC,IAAA,EAAiB;YACjB,IAAI,CAACN,WAAW,GAAG,IAAI;YACvBZ,MAAM,CAACM,KAAK,CAAC,gBAAgB,CAAC;;;YAG/B,sBAAO,IAAI,CAACS,uBAAuB,EAAE;QAAC;;;GACtC;EAEOJ,WAAA,CAAAK,SAAA,CAAAD,uBAAuB,GAA/B;IACC,IAAIR,EAAE,GAAG,IAAI;IACb,IAAIT,aAAa,EAAE,CAACO,SAAS,EAC5BE,EAAE,GAAGC,MAAM,CAAC,MAAM,CAAC,IAAIA,MAAM,CAAC,MAAM,CAAC,CAACC,KAAK,GAAGD,MAAM,CAAC,MAAM,CAAC,CAACC,KAAK,GAAG,IAAI;IAC1E,IAAI,CAACF,EAAE,EAAE;MACRP,MAAM,CAACM,KAAK,CAAC,yBAAyB,CAAC;MACvC,OAAOJ,OAAO,CAACiB,MAAM,CAAC,yBAAyB,CAAC;;IAGjD,OAAO,IAAIjB,OAAO,CAAC,UAACC,GAAG,EAAEC,GAAG;MAC3BG,EAAE,CAACa,eAAe,EAAE,CAClBC,IAAI,CAAC,UAAAC,UAAU;QACf,IAAI,CAACA,UAAU,EAAE;UAChBtB,MAAM,CAACM,KAAK,CAAC,uBAAuB,CAAC;UACrCF,GAAG,CAAC,IAAIL,iBAAiB,CAAC,uBAAuB,CAAC,CAAC;;QAGpD,IAAMwB,UAAU,GAAGD,UAAU,CAACE,WAAW,CAACC,GAAG,EAAE;QAC/C;QACA,IAAIF,UAAU,CAACG,UAAU,EAAE,EAAE;UAC5B1B,MAAM,CAACM,KAAK,CAAC,oCAAoC,CAAC;UAClDiB,UAAU,CACRI,kBAAkB,EAAE,CACpBN,IAAI,CAAC,UAAAO,YAAY;YACT,IAAAC,QAAA,GAAAD,YAAA,CAAAC,QAAQ;cAAEC,UAAA,GAAAF,YAAA,CAAAE,UAAU;YAC5B3B,GAAG,CAAC;cAAE4B,KAAK,EAAEF,QAAQ;cAAEC,UAAU,EAAAA;YAAA,CAAE,CAAC;UACrC,CAAC,CAAC,CACDE,KAAK,CAAC,UAAAC,GAAG;YACT,IAAIA,GAAG,IAAIA,GAAG,CAACC,KAAK,KAAK,eAAe,EAAE;cACzC;cACA9B,GAAG,CAAC,8CAA8C,CAAC;aACnD,MAAM;cACNA,GAAG,CACF,IAAIL,iBAAiB,CACpB,uCAAuC,CACvC,CACD;;UAEH,CAAC,CAAC;SACH,MAAM;UACNK,GAAG,CAAC,IAAIL,iBAAiB,CAAC,mCAAmC,CAAC,CAAC;;MAEjE,CAAC,CAAC,CACDiC,KAAK,CAAC,UAAAC,GAAG;QACTjC,MAAM,CAACM,KAAK,CAAC,gCAAgC,EAAE2B,GAAG,CAAC;QACnD7B,GAAG,CAAC,IAAIL,iBAAiB,CAAC,gCAAgC,CAAC,CAAC;MAC7D,CAAC,CAAC;IACJ,CAAC,CAAC;EACH,CAAC;EACF,OAAAY,WAAC;AAAD,CAAC,EApED;;AAsEA;;;AAGA,eAAeA,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}