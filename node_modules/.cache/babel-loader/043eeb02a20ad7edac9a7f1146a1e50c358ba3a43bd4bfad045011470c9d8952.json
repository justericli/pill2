{"ast":null,"code":"import { Crc32 } from \"@aws-crypto/crc32\";\nimport { HeaderMarshaller } from \"./HeaderMarshaller\";\nimport { splitMessage } from \"./splitMessage\";\nexport class EventStreamCodec {\n  constructor(toUtf8, fromUtf8) {\n    this.headerMarshaller = new HeaderMarshaller(toUtf8, fromUtf8);\n  }\n  encode(_ref) {\n    let {\n      headers: rawHeaders,\n      body\n    } = _ref;\n    const headers = this.headerMarshaller.format(rawHeaders);\n    const length = headers.byteLength + body.byteLength + 16;\n    const out = new Uint8Array(length);\n    const view = new DataView(out.buffer, out.byteOffset, out.byteLength);\n    const checksum = new Crc32();\n    view.setUint32(0, length, false);\n    view.setUint32(4, headers.byteLength, false);\n    view.setUint32(8, checksum.update(out.subarray(0, 8)).digest(), false);\n    out.set(headers, 12);\n    out.set(body, headers.byteLength + 12);\n    view.setUint32(length - 4, checksum.update(out.subarray(8, length - 4)).digest(), false);\n    return out;\n  }\n  decode(message) {\n    const {\n      headers,\n      body\n    } = splitMessage(message);\n    return {\n      headers: this.headerMarshaller.parse(headers),\n      body\n    };\n  }\n  formatHeaders(rawHeaders) {\n    return this.headerMarshaller.format(rawHeaders);\n  }\n}","map":{"version":3,"names":["Crc32","HeaderMarshaller","splitMessage","EventStreamCodec","constructor","toUtf8","fromUtf8","headerMarshaller","encode","_ref","headers","rawHeaders","body","format","length","byteLength","out","Uint8Array","view","DataView","buffer","byteOffset","checksum","setUint32","update","subarray","digest","set","decode","message","parse","formatHeaders"],"sources":["/Users/ericli/Desktop/pill2/node_modules/@aws-sdk/client-s3/node_modules/@aws-sdk/eventstream-codec/dist-es/EventStreamCodec.js"],"sourcesContent":["import { Crc32 } from \"@aws-crypto/crc32\";\nimport { HeaderMarshaller } from \"./HeaderMarshaller\";\nimport { splitMessage } from \"./splitMessage\";\nexport class EventStreamCodec {\n    constructor(toUtf8, fromUtf8) {\n        this.headerMarshaller = new HeaderMarshaller(toUtf8, fromUtf8);\n    }\n    encode({ headers: rawHeaders, body }) {\n        const headers = this.headerMarshaller.format(rawHeaders);\n        const length = headers.byteLength + body.byteLength + 16;\n        const out = new Uint8Array(length);\n        const view = new DataView(out.buffer, out.byteOffset, out.byteLength);\n        const checksum = new Crc32();\n        view.setUint32(0, length, false);\n        view.setUint32(4, headers.byteLength, false);\n        view.setUint32(8, checksum.update(out.subarray(0, 8)).digest(), false);\n        out.set(headers, 12);\n        out.set(body, headers.byteLength + 12);\n        view.setUint32(length - 4, checksum.update(out.subarray(8, length - 4)).digest(), false);\n        return out;\n    }\n    decode(message) {\n        const { headers, body } = splitMessage(message);\n        return { headers: this.headerMarshaller.parse(headers), body };\n    }\n    formatHeaders(rawHeaders) {\n        return this.headerMarshaller.format(rawHeaders);\n    }\n}\n"],"mappings":"AAAA,SAASA,KAAK,QAAQ,mBAAmB;AACzC,SAASC,gBAAgB,QAAQ,oBAAoB;AACrD,SAASC,YAAY,QAAQ,gBAAgB;AAC7C,OAAO,MAAMC,gBAAgB,CAAC;EAC1BC,WAAWA,CAACC,MAAM,EAAEC,QAAQ,EAAE;IAC1B,IAAI,CAACC,gBAAgB,GAAG,IAAIN,gBAAgB,CAACI,MAAM,EAAEC,QAAQ,CAAC;EAClE;EACAE,MAAMA,CAAAC,IAAA,EAAgC;IAAA,IAA/B;MAAEC,OAAO,EAAEC,UAAU;MAAEC;IAAK,CAAC,GAAAH,IAAA;IAChC,MAAMC,OAAO,GAAG,IAAI,CAACH,gBAAgB,CAACM,MAAM,CAACF,UAAU,CAAC;IACxD,MAAMG,MAAM,GAAGJ,OAAO,CAACK,UAAU,GAAGH,IAAI,CAACG,UAAU,GAAG,EAAE;IACxD,MAAMC,GAAG,GAAG,IAAIC,UAAU,CAACH,MAAM,CAAC;IAClC,MAAMI,IAAI,GAAG,IAAIC,QAAQ,CAACH,GAAG,CAACI,MAAM,EAAEJ,GAAG,CAACK,UAAU,EAAEL,GAAG,CAACD,UAAU,CAAC;IACrE,MAAMO,QAAQ,GAAG,IAAItB,KAAK,EAAE;IAC5BkB,IAAI,CAACK,SAAS,CAAC,CAAC,EAAET,MAAM,EAAE,KAAK,CAAC;IAChCI,IAAI,CAACK,SAAS,CAAC,CAAC,EAAEb,OAAO,CAACK,UAAU,EAAE,KAAK,CAAC;IAC5CG,IAAI,CAACK,SAAS,CAAC,CAAC,EAAED,QAAQ,CAACE,MAAM,CAACR,GAAG,CAACS,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAACC,MAAM,EAAE,EAAE,KAAK,CAAC;IACtEV,GAAG,CAACW,GAAG,CAACjB,OAAO,EAAE,EAAE,CAAC;IACpBM,GAAG,CAACW,GAAG,CAACf,IAAI,EAAEF,OAAO,CAACK,UAAU,GAAG,EAAE,CAAC;IACtCG,IAAI,CAACK,SAAS,CAACT,MAAM,GAAG,CAAC,EAAEQ,QAAQ,CAACE,MAAM,CAACR,GAAG,CAACS,QAAQ,CAAC,CAAC,EAAEX,MAAM,GAAG,CAAC,CAAC,CAAC,CAACY,MAAM,EAAE,EAAE,KAAK,CAAC;IACxF,OAAOV,GAAG;EACd;EACAY,MAAMA,CAACC,OAAO,EAAE;IACZ,MAAM;MAAEnB,OAAO;MAAEE;IAAK,CAAC,GAAGV,YAAY,CAAC2B,OAAO,CAAC;IAC/C,OAAO;MAAEnB,OAAO,EAAE,IAAI,CAACH,gBAAgB,CAACuB,KAAK,CAACpB,OAAO,CAAC;MAAEE;IAAK,CAAC;EAClE;EACAmB,aAAaA,CAACpB,UAAU,EAAE;IACtB,OAAO,IAAI,CAACJ,gBAAgB,CAACM,MAAM,CAACF,UAAU,CAAC;EACnD;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}