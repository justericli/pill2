{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { HttpRequest } from \"@aws-sdk/protocol-http\";\nexport function userAgentMiddleware(options) {\n  return function (next) {\n    return function (args) {\n      var request = args.request;\n      if (!HttpRequest.isInstance(request)) return next(args);\n      var headers = request.headers;\n      var userAgentHeader = options.runtime === \"node\" ? \"user-agent\" : \"x-amz-user-agent\";\n      if (!headers[userAgentHeader]) {\n        headers[userAgentHeader] = \"\" + options.defaultUserAgent;\n      } else {\n        headers[userAgentHeader] += \" \" + options.defaultUserAgent;\n      }\n      if (options.customUserAgent) {\n        headers[userAgentHeader] += \" \" + options.customUserAgent;\n      }\n      return next(__assign(__assign({}, args), {\n        request: request\n      }));\n    };\n  };\n}\nexport var getUserAgentMiddlewareOptions = {\n  name: \"getUserAgentMiddleware\",\n  step: \"build\",\n  tags: [\"SET_USER_AGENT\", \"USER_AGENT\"]\n};\nexport var getUserAgentPlugin = function (config) {\n  return {\n    applyToStack: function (clientStack) {\n      clientStack.add(userAgentMiddleware(config), getUserAgentMiddlewareOptions);\n    }\n  };\n};","map":{"version":3,"names":["HttpRequest","userAgentMiddleware","options","next","args","request","isInstance","headers","userAgentHeader","runtime","defaultUserAgent","customUserAgent","__assign","getUserAgentMiddlewareOptions","name","step","tags","getUserAgentPlugin","config","applyToStack","clientStack","add"],"sources":["/Users/ericli/node_modules/@aws-sdk/client-pinpoint/node_modules/@aws-sdk/middleware-user-agent/src/middleware.ts"],"sourcesContent":["import { HttpRequest } from \"@aws-sdk/protocol-http\";\nimport {\n  BuildHandler,\n  BuildHandlerArguments,\n  BuildHandlerOptions,\n  BuildHandlerOutput,\n  MetadataBearer,\n  Pluggable,\n} from \"@aws-sdk/types\";\n\nimport { UserAgentResolvedConfig } from \"./configurations\";\n\nexport function userAgentMiddleware(options: UserAgentResolvedConfig) {\n  return <Output extends MetadataBearer>(next: BuildHandler<any, any>): BuildHandler<any, any> => (\n    args: BuildHandlerArguments<any>\n  ): Promise<BuildHandlerOutput<Output>> => {\n    const { request } = args;\n    if (!HttpRequest.isInstance(request)) return next(args);\n    const { headers } = request;\n    const userAgentHeader = options.runtime === \"node\" ? \"user-agent\" : \"x-amz-user-agent\";\n    if (!headers[userAgentHeader]) {\n      headers[userAgentHeader] = `${options.defaultUserAgent}`;\n    } else {\n      headers[userAgentHeader] += ` ${options.defaultUserAgent}`;\n    }\n    if (options.customUserAgent) {\n      headers[userAgentHeader] += ` ${options.customUserAgent}`;\n    }\n    return next({\n      ...args,\n      request,\n    });\n  };\n}\n\nexport const getUserAgentMiddlewareOptions: BuildHandlerOptions = {\n  name: \"getUserAgentMiddleware\",\n  step: \"build\",\n  tags: [\"SET_USER_AGENT\", \"USER_AGENT\"],\n};\n\nexport const getUserAgentPlugin = (config: UserAgentResolvedConfig): Pluggable<any, any> => ({\n  applyToStack: (clientStack) => {\n    clientStack.add(userAgentMiddleware(config), getUserAgentMiddlewareOptions);\n  },\n});\n"],"mappings":";AAAA,SAASA,WAAW,QAAQ,wBAAwB;AAYpD,OAAM,SAAUC,mBAAmBA,CAACC,OAAgC;EAClE,OAAO,UAAgCC,IAA4B;IAA6B,iBAC9FC,IAAgC;MAExB,IAAAC,OAAO,GAAKD,IAAI,CAAAC,OAAT;MACf,IAAI,CAACL,WAAW,CAACM,UAAU,CAACD,OAAO,CAAC,EAAE,OAAOF,IAAI,CAACC,IAAI,CAAC;MAC/C,IAAAG,OAAO,GAAKF,OAAO,CAAAE,OAAZ;MACf,IAAMC,eAAe,GAAGN,OAAO,CAACO,OAAO,KAAK,MAAM,GAAG,YAAY,GAAG,kBAAkB;MACtF,IAAI,CAACF,OAAO,CAACC,eAAe,CAAC,EAAE;QAC7BD,OAAO,CAACC,eAAe,CAAC,GAAG,KAAGN,OAAO,CAACQ,gBAAkB;OACzD,MAAM;QACLH,OAAO,CAACC,eAAe,CAAC,IAAI,MAAIN,OAAO,CAACQ,gBAAkB;;MAE5D,IAAIR,OAAO,CAACS,eAAe,EAAE;QAC3BJ,OAAO,CAACC,eAAe,CAAC,IAAI,MAAIN,OAAO,CAACS,eAAiB;;MAE3D,OAAOR,IAAI,CAAAS,QAAA,CAAAA,QAAA,KACNR,IAAI;QACPC,OAAO,EAAAA;MAAA,GACP;IACJ,CAAC;EAnB+F,CAmB/F;AACH;AAEA,OAAO,IAAMQ,6BAA6B,GAAwB;EAChEC,IAAI,EAAE,wBAAwB;EAC9BC,IAAI,EAAE,OAAO;EACbC,IAAI,EAAE,CAAC,gBAAgB,EAAE,YAAY;CACtC;AAED,OAAO,IAAMC,kBAAkB,GAAG,SAAAA,CAACC,MAA+B;EAA0B,OAAC;IAC3FC,YAAY,EAAE,SAAAA,CAACC,WAAW;MACxBA,WAAW,CAACC,GAAG,CAACpB,mBAAmB,CAACiB,MAAM,CAAC,EAAEL,6BAA6B,CAAC;IAC7E;GACD;AAJ2F,CAI1F"},"metadata":{},"sourceType":"module","externalDependencies":[]}