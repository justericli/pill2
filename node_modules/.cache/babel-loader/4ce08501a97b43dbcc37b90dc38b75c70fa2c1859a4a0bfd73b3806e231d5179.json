{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { PersonalizeEventsClient } from \"./PersonalizeEventsClient\";\nimport { PutEventsCommand } from \"./commands/PutEventsCommand\";\n/**\n * <p></p>\n */\nvar PersonalizeEvents = /** @class */function (_super) {\n  __extends(PersonalizeEvents, _super);\n  function PersonalizeEvents() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  PersonalizeEvents.prototype.putEvents = function (args, optionsOrCb, cb) {\n    var command = new PutEventsCommand(args);\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(\"Expect http options but get \" + typeof optionsOrCb);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  };\n  return PersonalizeEvents;\n}(PersonalizeEventsClient);\nexport { PersonalizeEvents };","map":{"version":3,"names":["PersonalizeEventsClient","PutEventsCommand","PersonalizeEvents","_super","__extends","prototype","putEvents","args","optionsOrCb","cb","command","send","Error"],"sources":["/Users/ericli/node_modules/@aws-sdk/client-personalize-events/PersonalizeEvents.ts"],"sourcesContent":["import { PersonalizeEventsClient } from \"./PersonalizeEventsClient\";\nimport { PutEventsCommand, PutEventsCommandInput, PutEventsCommandOutput } from \"./commands/PutEventsCommand\";\nimport { HttpHandlerOptions as __HttpHandlerOptions } from \"@aws-sdk/types\";\n\n/**\n * <p></p>\n */\nexport class PersonalizeEvents extends PersonalizeEventsClient {\n  /**\n   * <p>Records user interaction event data.</p>\n   */\n  public putEvents(args: PutEventsCommandInput, options?: __HttpHandlerOptions): Promise<PutEventsCommandOutput>;\n  public putEvents(args: PutEventsCommandInput, cb: (err: any, data?: PutEventsCommandOutput) => void): void;\n  public putEvents(\n    args: PutEventsCommandInput,\n    options: __HttpHandlerOptions,\n    cb: (err: any, data?: PutEventsCommandOutput) => void\n  ): void;\n  public putEvents(\n    args: PutEventsCommandInput,\n    optionsOrCb?: __HttpHandlerOptions | ((err: any, data?: PutEventsCommandOutput) => void),\n    cb?: (err: any, data?: PutEventsCommandOutput) => void\n  ): Promise<PutEventsCommandOutput> | void {\n    const command = new PutEventsCommand(args);\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  }\n}\n"],"mappings":";AAAA,SAASA,uBAAuB,QAAQ,2BAA2B;AACnE,SAASC,gBAAgB,QAAuD,6BAA6B;AAG7G;;;AAGA,IAAAC,iBAAA,0BAAAC,MAAA;EAAuCC,SAAA,CAAAF,iBAAA,EAAAC,MAAA;EAAvC,SAAAD,kBAAA;;EA0BA;EAfSA,iBAAA,CAAAG,SAAA,CAAAC,SAAS,GAAhB,UACEC,IAA2B,EAC3BC,WAAwF,EACxFC,EAAsD;IAEtD,IAAMC,OAAO,GAAG,IAAIT,gBAAgB,CAACM,IAAI,CAAC;IAC1C,IAAI,OAAOC,WAAW,KAAK,UAAU,EAAE;MACrC,IAAI,CAACG,IAAI,CAACD,OAAO,EAAEF,WAAW,CAAC;KAChC,MAAM,IAAI,OAAOC,EAAE,KAAK,UAAU,EAAE;MACnC,IAAI,OAAOD,WAAW,KAAK,QAAQ,EAAE,MAAM,IAAII,KAAK,CAAC,iCAA+B,OAAOJ,WAAa,CAAC;MACzG,IAAI,CAACG,IAAI,CAACD,OAAO,EAAEF,WAAW,IAAI,EAAE,EAAEC,EAAE,CAAC;KAC1C,MAAM;MACL,OAAO,IAAI,CAACE,IAAI,CAACD,OAAO,EAAEF,WAAW,CAAC;;EAE1C,CAAC;EACH,OAAAN,iBAAC;AAAD,CAAC,CA1BsCF,uBAAuB"},"metadata":{},"sourceType":"module","externalDependencies":[]}