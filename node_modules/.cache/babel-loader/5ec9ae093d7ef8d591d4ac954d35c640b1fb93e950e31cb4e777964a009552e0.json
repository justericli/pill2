{"ast":null,"code":"import _objectSpread from \"/Users/ericli/Desktop/pill2/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _regeneratorRuntime from \"/Users/ericli/Desktop/pill2/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/ericli/Desktop/pill2/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _classCallCheck from \"/Users/ericli/Desktop/pill2/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/ericli/Desktop/pill2/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { SignatureV4 } from \"@aws-sdk/signature-v4\";\nexport var SignatureV4MultiRegion = /*#__PURE__*/function () {\n  function SignatureV4MultiRegion(options) {\n    _classCallCheck(this, SignatureV4MultiRegion);\n    this.sigv4Signer = new SignatureV4(options);\n    this.signerOptions = options;\n  }\n  _createClass(SignatureV4MultiRegion, [{\n    key: \"sign\",\n    value: function () {\n      var _sign = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(requestToSign) {\n        var options,\n          _args = arguments;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              options = _args.length > 1 && _args[1] !== undefined ? _args[1] : {};\n              if (!(options.signingRegion === \"*\")) {\n                _context.next = 5;\n                break;\n              }\n              if (!(this.signerOptions.runtime !== \"node\")) {\n                _context.next = 4;\n                break;\n              }\n              throw new Error(\"This request requires signing with SigV4Asymmetric algorithm. It's only available in Node.js\");\n            case 4:\n              return _context.abrupt(\"return\", this.getSigv4aSigner().sign(requestToSign, options));\n            case 5:\n              return _context.abrupt(\"return\", this.sigv4Signer.sign(requestToSign, options));\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this);\n      }));\n      function sign(_x) {\n        return _sign.apply(this, arguments);\n      }\n      return sign;\n    }()\n  }, {\n    key: \"presign\",\n    value: function () {\n      var _presign = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(originalRequest) {\n        var options,\n          _args2 = arguments;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              options = _args2.length > 1 && _args2[1] !== undefined ? _args2[1] : {};\n              if (!(options.signingRegion === \"*\")) {\n                _context2.next = 5;\n                break;\n              }\n              if (!(this.signerOptions.runtime !== \"node\")) {\n                _context2.next = 4;\n                break;\n              }\n              throw new Error(\"This request requires signing with SigV4Asymmetric algorithm. It's only available in Node.js\");\n            case 4:\n              return _context2.abrupt(\"return\", this.getSigv4aSigner().presign(originalRequest, options));\n            case 5:\n              return _context2.abrupt(\"return\", this.sigv4Signer.presign(originalRequest, options));\n            case 6:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, this);\n      }));\n      function presign(_x2) {\n        return _presign.apply(this, arguments);\n      }\n      return presign;\n    }()\n  }, {\n    key: \"getSigv4aSigner\",\n    value: function getSigv4aSigner() {\n      if (!this.sigv4aSigner) {\n        var CrtSignerV4;\n        try {\n          CrtSignerV4 = typeof require === \"function\" && require(\"@aws-sdk/signature-v4-crt\").CrtSignerV4;\n          if (typeof CrtSignerV4 !== \"function\") throw new Error();\n        } catch (e) {\n          e.message = \"\".concat(e.message, \"\\nPlease check if you have installed \\\"@aws-sdk/signature-v4-crt\\\" package explicitly. \\n\") + \"For more information please go to \" + \"https://github.com/aws/aws-sdk-js-v3#functionality-requiring-aws-common-runtime-crt\";\n          throw e;\n        }\n        this.sigv4aSigner = new CrtSignerV4(_objectSpread(_objectSpread({}, this.signerOptions), {}, {\n          signingAlgorithm: 1\n        }));\n      }\n      return this.sigv4aSigner;\n    }\n  }]);\n  return SignatureV4MultiRegion;\n}();","map":{"version":3,"names":["SignatureV4","SignatureV4MultiRegion","options","_classCallCheck","sigv4Signer","signerOptions","_createClass","key","value","_sign","_asyncToGenerator","_regeneratorRuntime","mark","_callee","requestToSign","_args","arguments","wrap","_callee$","_context","prev","next","length","undefined","signingRegion","runtime","Error","abrupt","getSigv4aSigner","sign","stop","_x","apply","_presign","_callee2","originalRequest","_args2","_callee2$","_context2","presign","_x2","sigv4aSigner","CrtSignerV4","require","e","message","concat","_objectSpread","signingAlgorithm"],"sources":["/Users/ericli/Desktop/pill2/node_modules/@aws-sdk/signature-v4-multi-region/dist-es/SignatureV4MultiRegion.js"],"sourcesContent":["import { SignatureV4 } from \"@aws-sdk/signature-v4\";\nexport class SignatureV4MultiRegion {\n    constructor(options) {\n        this.sigv4Signer = new SignatureV4(options);\n        this.signerOptions = options;\n    }\n    async sign(requestToSign, options = {}) {\n        if (options.signingRegion === \"*\") {\n            if (this.signerOptions.runtime !== \"node\")\n                throw new Error(\"This request requires signing with SigV4Asymmetric algorithm. It's only available in Node.js\");\n            return this.getSigv4aSigner().sign(requestToSign, options);\n        }\n        return this.sigv4Signer.sign(requestToSign, options);\n    }\n    async presign(originalRequest, options = {}) {\n        if (options.signingRegion === \"*\") {\n            if (this.signerOptions.runtime !== \"node\")\n                throw new Error(\"This request requires signing with SigV4Asymmetric algorithm. It's only available in Node.js\");\n            return this.getSigv4aSigner().presign(originalRequest, options);\n        }\n        return this.sigv4Signer.presign(originalRequest, options);\n    }\n    getSigv4aSigner() {\n        if (!this.sigv4aSigner) {\n            let CrtSignerV4;\n            try {\n                CrtSignerV4 = typeof require === \"function\" && require(\"@aws-sdk/signature-v4-crt\").CrtSignerV4;\n                if (typeof CrtSignerV4 !== \"function\")\n                    throw new Error();\n            }\n            catch (e) {\n                e.message =\n                    `${e.message}\\nPlease check if you have installed \"@aws-sdk/signature-v4-crt\" package explicitly. \\n` +\n                        \"For more information please go to \" +\n                        \"https://github.com/aws/aws-sdk-js-v3#functionality-requiring-aws-common-runtime-crt\";\n                throw e;\n            }\n            this.sigv4aSigner = new CrtSignerV4({\n                ...this.signerOptions,\n                signingAlgorithm: 1,\n            });\n        }\n        return this.sigv4aSigner;\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}