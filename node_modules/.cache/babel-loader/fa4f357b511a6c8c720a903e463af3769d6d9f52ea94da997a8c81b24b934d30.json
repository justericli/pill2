{"ast":null,"code":"var _jsxFileName = \"/Users/ericli/Desktop/pill2/src/components/Forms/ListingForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Dropzone from \"react-dropzone\";\nimport AWS from \"aws-sdk\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nAWS.config.update({\n  accessKeyId: \"YOUR_ACCESS_KEY_ID\",\n  secretAccessKey: \"YOUR_SECRET_ACCESS_KEY\",\n  region: \"us-east-1\" // Replace with your desired region\n});\n\nconst s3 = new AWS.S3({\n  apiVersion: \"2006-03-01\"\n});\nconst ImageUpload = () => {\n  _s();\n  const [selectedFile, setSelectedFile] = useState(null);\n  const handleFileDrop = acceptedFiles => {\n    setSelectedFile(acceptedFiles[0]);\n  };\n  const handleUpload = () => {\n    if (selectedFile) {\n      const params = {\n        Bucket: \"YOUR_BUCKET_NAME\",\n        Key: selectedFile.name,\n        Body: selectedFile,\n        ACL: \"public-read\" // Set the desired access control level for the uploaded image\n      };\n\n      s3.upload(params, (err, data) => {\n        if (err) {\n          console.log(\"Error:\", err);\n        } else {\n          console.log(\"Image uploaded successfully:\", data.Location);\n          // Perform any further actions after successful image upload\n        }\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Dropzone, {\n      onDrop: handleFileDrop,\n      children: _ref => {\n        let {\n          getRootProps,\n          getInputProps\n        } = _ref;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          ...getRootProps(),\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            ...getInputProps()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this), selectedFile ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"Selected file: \", selectedFile.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Drag and drop an image here or click to select\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      children: \"Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(ImageUpload, \"cz3B5sQOxlrekAnUFUPeMaA2gqY=\");\n_c = ImageUpload;\nexport default ImageUpload;\nvar _c;\n$RefreshReg$(_c, \"ImageUpload\");","map":{"version":3,"names":["React","useState","Dropzone","AWS","jsxDEV","_jsxDEV","config","update","accessKeyId","secretAccessKey","region","s3","S3","apiVersion","ImageUpload","_s","selectedFile","setSelectedFile","handleFileDrop","acceptedFiles","handleUpload","params","Bucket","Key","name","Body","ACL","upload","err","data","console","log","Location","children","onDrop","_ref","getRootProps","getInputProps","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/ericli/Desktop/pill2/src/components/Forms/ListingForm.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport Dropzone from \"react-dropzone\";\nimport AWS from \"aws-sdk\";\n\nAWS.config.update({\n  accessKeyId: \"YOUR_ACCESS_KEY_ID\",\n  secretAccessKey: \"YOUR_SECRET_ACCESS_KEY\",\n  region: \"us-east-1\", // Replace with your desired region\n});\n\nconst s3 = new AWS.S3({ apiVersion: \"2006-03-01\" });\n\nconst ImageUpload = () => {\n  const [selectedFile, setSelectedFile] = useState(null);\n\n  const handleFileDrop = (acceptedFiles) => {\n    setSelectedFile(acceptedFiles[0]);\n  };\n\n  const handleUpload = () => {\n    if (selectedFile) {\n      const params = {\n        Bucket: \"YOUR_BUCKET_NAME\",\n        Key: selectedFile.name,\n        Body: selectedFile,\n        ACL: \"public-read\", // Set the desired access control level for the uploaded image\n      };\n\n      s3.upload(params, (err, data) => {\n        if (err) {\n          console.log(\"Error:\", err);\n        } else {\n          console.log(\"Image uploaded successfully:\", data.Location);\n          // Perform any further actions after successful image upload\n        }\n      });\n    }\n  };\n\n  return (\n    <div>\n      <Dropzone onDrop={handleFileDrop}>\n        {({ getRootProps, getInputProps }) => (\n          <div {...getRootProps()}>\n            <input {...getInputProps()} />\n            {selectedFile ? (\n              <div>Selected file: {selectedFile.name}</div>\n            ) : (\n              <div>Drag and drop an image here or click to select</div>\n            )}\n          </div>\n        )}\n      </Dropzone>\n      <button onClick={handleUpload}>Upload</button>\n    </div>\n  );\n};\n\nexport default ImageUpload;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,QAAQ,MAAM,gBAAgB;AACrC,OAAOC,GAAG,MAAM,SAAS;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1BF,GAAG,CAACG,MAAM,CAACC,MAAM,CAAC;EAChBC,WAAW,EAAE,oBAAoB;EACjCC,eAAe,EAAE,wBAAwB;EACzCC,MAAM,EAAE,WAAW,CAAE;AACvB,CAAC,CAAC;;AAEF,MAAMC,EAAE,GAAG,IAAIR,GAAG,CAACS,EAAE,CAAC;EAAEC,UAAU,EAAE;AAAa,CAAC,CAAC;AAEnD,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EAEtD,MAAMiB,cAAc,GAAIC,aAAa,IAAK;IACxCF,eAAe,CAACE,aAAa,CAAC,CAAC,CAAC,CAAC;EACnC,CAAC;EAED,MAAMC,YAAY,GAAGA,CAAA,KAAM;IACzB,IAAIJ,YAAY,EAAE;MAChB,MAAMK,MAAM,GAAG;QACbC,MAAM,EAAE,kBAAkB;QAC1BC,GAAG,EAAEP,YAAY,CAACQ,IAAI;QACtBC,IAAI,EAAET,YAAY;QAClBU,GAAG,EAAE,aAAa,CAAE;MACtB,CAAC;;MAEDf,EAAE,CAACgB,MAAM,CAACN,MAAM,EAAE,CAACO,GAAG,EAAEC,IAAI,KAAK;QAC/B,IAAID,GAAG,EAAE;UACPE,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEH,GAAG,CAAC;QAC5B,CAAC,MAAM;UACLE,OAAO,CAACC,GAAG,CAAC,8BAA8B,EAAEF,IAAI,CAACG,QAAQ,CAAC;UAC1D;QACF;MACF,CAAC,CAAC;IACJ;EACF,CAAC;;EAED,oBACE3B,OAAA;IAAA4B,QAAA,gBACE5B,OAAA,CAACH,QAAQ;MAACgC,MAAM,EAAEhB,cAAe;MAAAe,QAAA,EAC9BE,IAAA;QAAA,IAAC;UAAEC,YAAY;UAAEC;QAAc,CAAC,GAAAF,IAAA;QAAA,oBAC/B9B,OAAA;UAAA,GAAS+B,YAAY,EAAE;UAAAH,QAAA,gBACrB5B,OAAA;YAAA,GAAWgC,aAAa;UAAE;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAI,EAC7BzB,YAAY,gBACXX,OAAA;YAAA4B,QAAA,GAAK,iBAAe,EAACjB,YAAY,CAACQ,IAAI;UAAA;YAAAc,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAO,gBAE7CpC,OAAA;YAAA4B,QAAA,EAAK;UAA8C;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QACpD;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACG;MAAA;IACP;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACQ,eACXpC,OAAA;MAAQqC,OAAO,EAAEtB,YAAa;MAAAa,QAAA,EAAC;IAAM;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAC1C;AAEV,CAAC;AAAC1B,EAAA,CA5CID,WAAW;AAAA6B,EAAA,GAAX7B,WAAW;AA8CjB,eAAeA,WAAW;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}