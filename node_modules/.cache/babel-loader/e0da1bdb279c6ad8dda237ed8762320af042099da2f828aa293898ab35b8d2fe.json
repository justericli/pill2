{"ast":null,"code":"import { DEFAULT_RETRY_DELAY_BASE } from \"./constants\";\nimport { StandardRetryStrategy } from \"./StandardRetryStrategy\";\nexport class ConfiguredRetryStrategy extends StandardRetryStrategy {\n  constructor(maxAttempts) {\n    let computeNextBackoffDelay = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : DEFAULT_RETRY_DELAY_BASE;\n    super(typeof maxAttempts === \"function\" ? maxAttempts : async () => maxAttempts);\n    if (typeof computeNextBackoffDelay === \"number\") {\n      this.computeNextBackoffDelay = () => computeNextBackoffDelay;\n    } else {\n      this.computeNextBackoffDelay = computeNextBackoffDelay;\n    }\n  }\n  async refreshRetryTokenForRetry(tokenToRenew, errorInfo) {\n    const token = await super.refreshRetryTokenForRetry(tokenToRenew, errorInfo);\n    token.getRetryDelay = () => this.computeNextBackoffDelay(token.getRetryCount());\n    return token;\n  }\n}","map":{"version":3,"names":["DEFAULT_RETRY_DELAY_BASE","StandardRetryStrategy","ConfiguredRetryStrategy","constructor","maxAttempts","computeNextBackoffDelay","arguments","length","undefined","refreshRetryTokenForRetry","tokenToRenew","errorInfo","token","getRetryDelay","getRetryCount"],"sources":["/Users/ericli/Desktop/pill2/node_modules/@aws-sdk/util-retry/dist-es/ConfiguredRetryStrategy.js"],"sourcesContent":["import { DEFAULT_RETRY_DELAY_BASE } from \"./constants\";\nimport { StandardRetryStrategy } from \"./StandardRetryStrategy\";\nexport class ConfiguredRetryStrategy extends StandardRetryStrategy {\n    constructor(maxAttempts, computeNextBackoffDelay = DEFAULT_RETRY_DELAY_BASE) {\n        super(typeof maxAttempts === \"function\" ? maxAttempts : async () => maxAttempts);\n        if (typeof computeNextBackoffDelay === \"number\") {\n            this.computeNextBackoffDelay = () => computeNextBackoffDelay;\n        }\n        else {\n            this.computeNextBackoffDelay = computeNextBackoffDelay;\n        }\n    }\n    async refreshRetryTokenForRetry(tokenToRenew, errorInfo) {\n        const token = await super.refreshRetryTokenForRetry(tokenToRenew, errorInfo);\n        token.getRetryDelay = () => this.computeNextBackoffDelay(token.getRetryCount());\n        return token;\n    }\n}\n"],"mappings":"AAAA,SAASA,wBAAwB,QAAQ,aAAa;AACtD,SAASC,qBAAqB,QAAQ,yBAAyB;AAC/D,OAAO,MAAMC,uBAAuB,SAASD,qBAAqB,CAAC;EAC/DE,WAAWA,CAACC,WAAW,EAAsD;IAAA,IAApDC,uBAAuB,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGN,wBAAwB;IACvE,KAAK,CAAC,OAAOI,WAAW,KAAK,UAAU,GAAGA,WAAW,GAAG,YAAYA,WAAW,CAAC;IAChF,IAAI,OAAOC,uBAAuB,KAAK,QAAQ,EAAE;MAC7C,IAAI,CAACA,uBAAuB,GAAG,MAAMA,uBAAuB;IAChE,CAAC,MACI;MACD,IAAI,CAACA,uBAAuB,GAAGA,uBAAuB;IAC1D;EACJ;EACA,MAAMI,yBAAyBA,CAACC,YAAY,EAAEC,SAAS,EAAE;IACrD,MAAMC,KAAK,GAAG,MAAM,KAAK,CAACH,yBAAyB,CAACC,YAAY,EAAEC,SAAS,CAAC;IAC5EC,KAAK,CAACC,aAAa,GAAG,MAAM,IAAI,CAACR,uBAAuB,CAACO,KAAK,CAACE,aAAa,EAAE,CAAC;IAC/E,OAAOF,KAAK;EAChB;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}