{"ast":null,"code":"import _regeneratorRuntime from \"/Users/ericli/Desktop/pill2/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/ericli/Desktop/pill2/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nexport var createConfigValueProvider = function createConfigValueProvider(configKey, canonicalEndpointParamKey, config) {\n  var configProvider = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      var _config$configKey;\n      var configValue;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            configValue = (_config$configKey = config[configKey]) !== null && _config$configKey !== void 0 ? _config$configKey : config[canonicalEndpointParamKey];\n            if (!(typeof configValue === \"function\")) {\n              _context.next = 3;\n              break;\n            }\n            return _context.abrupt(\"return\", configValue());\n          case 3:\n            return _context.abrupt(\"return\", configValue);\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }));\n    return function configProvider() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  if (configKey === \"endpoint\" || canonicalEndpointParamKey === \"endpoint\") {\n    return /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n      var endpoint, protocol, hostname, port, path;\n      return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n        while (1) switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return configProvider();\n          case 2:\n            endpoint = _context2.sent;\n            if (!(endpoint && typeof endpoint === \"object\")) {\n              _context2.next = 9;\n              break;\n            }\n            if (!(\"url\" in endpoint)) {\n              _context2.next = 6;\n              break;\n            }\n            return _context2.abrupt(\"return\", endpoint.url.href);\n          case 6:\n            if (!(\"hostname\" in endpoint)) {\n              _context2.next = 9;\n              break;\n            }\n            protocol = endpoint.protocol, hostname = endpoint.hostname, port = endpoint.port, path = endpoint.path;\n            return _context2.abrupt(\"return\", \"\".concat(protocol, \"//\").concat(hostname).concat(port ? \":\" + port : \"\").concat(path));\n          case 9:\n            return _context2.abrupt(\"return\", endpoint);\n          case 10:\n          case \"end\":\n            return _context2.stop();\n        }\n      }, _callee2);\n    }));\n  }\n  return configProvider;\n};","map":{"version":3,"names":["createConfigValueProvider","configKey","canonicalEndpointParamKey","config","configProvider","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_config$configKey","configValue","wrap","_callee$","_context","prev","next","abrupt","stop","apply","arguments","_callee2","endpoint","protocol","hostname","port","path","_callee2$","_context2","sent","url","href","concat"],"sources":["/Users/ericli/Desktop/pill2/node_modules/@aws-sdk/middleware-endpoint/dist-es/adaptors/createConfigValueProvider.js"],"sourcesContent":["export const createConfigValueProvider = (configKey, canonicalEndpointParamKey, config) => {\n    const configProvider = async () => {\n        const configValue = config[configKey] ?? config[canonicalEndpointParamKey];\n        if (typeof configValue === \"function\") {\n            return configValue();\n        }\n        return configValue;\n    };\n    if (configKey === \"endpoint\" || canonicalEndpointParamKey === \"endpoint\") {\n        return async () => {\n            const endpoint = await configProvider();\n            if (endpoint && typeof endpoint === \"object\") {\n                if (\"url\" in endpoint) {\n                    return endpoint.url.href;\n                }\n                if (\"hostname\" in endpoint) {\n                    const { protocol, hostname, port, path } = endpoint;\n                    return `${protocol}//${hostname}${port ? \":\" + port : \"\"}${path}`;\n                }\n            }\n            return endpoint;\n        };\n    }\n    return configProvider;\n};\n"],"mappings":";;AAAA,OAAO,IAAMA,yBAAyB,GAAG,SAA5BA,yBAAyBA,CAAIC,SAAS,EAAEC,yBAAyB,EAAEC,MAAM,EAAK;EACvF,IAAMC,cAAc;IAAA,IAAAC,IAAA,GAAAC,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CAAG,SAAAC,QAAA;MAAA,IAAAC,iBAAA;MAAA,IAAAC,WAAA;MAAA,OAAAJ,mBAAA,GAAAK,IAAA,UAAAC,SAAAC,QAAA;QAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;UAAA;YACbL,WAAW,IAAAD,iBAAA,GAAGP,MAAM,CAACF,SAAS,CAAC,cAAAS,iBAAA,cAAAA,iBAAA,GAAIP,MAAM,CAACD,yBAAyB,CAAC;YAAA,MACtE,OAAOS,WAAW,KAAK,UAAU;cAAAG,QAAA,CAAAE,IAAA;cAAA;YAAA;YAAA,OAAAF,QAAA,CAAAG,MAAA,WAC1BN,WAAW,EAAE;UAAA;YAAA,OAAAG,QAAA,CAAAG,MAAA,WAEjBN,WAAW;UAAA;UAAA;YAAA,OAAAG,QAAA,CAAAI,IAAA;QAAA;MAAA,GAAAT,OAAA;IAAA,CACrB;IAAA,gBANKL,cAAcA,CAAA;MAAA,OAAAC,IAAA,CAAAc,KAAA,OAAAC,SAAA;IAAA;EAAA,GAMnB;EACD,IAAInB,SAAS,KAAK,UAAU,IAAIC,yBAAyB,KAAK,UAAU,EAAE;IACtE,oBAAAI,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CAAO,SAAAa,SAAA;MAAA,IAAAC,QAAA,EAAAC,QAAA,EAAAC,QAAA,EAAAC,IAAA,EAAAC,IAAA;MAAA,OAAAnB,mBAAA,GAAAK,IAAA,UAAAe,UAAAC,SAAA;QAAA,kBAAAA,SAAA,CAAAb,IAAA,GAAAa,SAAA,CAAAZ,IAAA;UAAA;YAAAY,SAAA,CAAAZ,IAAA;YAAA,OACoBZ,cAAc,EAAE;UAAA;YAAjCkB,QAAQ,GAAAM,SAAA,CAAAC,IAAA;YAAA,MACVP,QAAQ,IAAI,OAAOA,QAAQ,KAAK,QAAQ;cAAAM,SAAA,CAAAZ,IAAA;cAAA;YAAA;YAAA,MACpC,KAAK,IAAIM,QAAQ;cAAAM,SAAA,CAAAZ,IAAA;cAAA;YAAA;YAAA,OAAAY,SAAA,CAAAX,MAAA,WACVK,QAAQ,CAACQ,GAAG,CAACC,IAAI;UAAA;YAAA,MAExB,UAAU,IAAIT,QAAQ;cAAAM,SAAA,CAAAZ,IAAA;cAAA;YAAA;YACdO,QAAQ,GAA2BD,QAAQ,CAA3CC,QAAQ,EAAEC,QAAQ,GAAiBF,QAAQ,CAAjCE,QAAQ,EAAEC,IAAI,GAAWH,QAAQ,CAAvBG,IAAI,EAAEC,IAAI,GAAKJ,QAAQ,CAAjBI,IAAI;YAAA,OAAAE,SAAA,CAAAX,MAAA,cAAAe,MAAA,CAC5BT,QAAQ,QAAAS,MAAA,CAAKR,QAAQ,EAAAQ,MAAA,CAAGP,IAAI,GAAG,GAAG,GAAGA,IAAI,GAAG,EAAE,EAAAO,MAAA,CAAGN,IAAI;UAAA;YAAA,OAAAE,SAAA,CAAAX,MAAA,WAGhEK,QAAQ;UAAA;UAAA;YAAA,OAAAM,SAAA,CAAAV,IAAA;QAAA;MAAA,GAAAG,QAAA;IAAA,CAClB;EACL;EACA,OAAOjB,cAAc;AACzB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}