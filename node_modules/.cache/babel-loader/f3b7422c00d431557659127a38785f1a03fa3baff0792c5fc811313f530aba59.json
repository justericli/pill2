{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { isa as __isa } from \"@aws-sdk/smithy-client\";\nexport var AmbiguousRoleResolutionType;\n(function (AmbiguousRoleResolutionType) {\n  AmbiguousRoleResolutionType[\"AUTHENTICATED_ROLE\"] = \"AuthenticatedRole\";\n  AmbiguousRoleResolutionType[\"DENY\"] = \"Deny\";\n})(AmbiguousRoleResolutionType || (AmbiguousRoleResolutionType = {}));\nexport var CognitoIdentityProvider;\n(function (CognitoIdentityProvider) {\n  CognitoIdentityProvider.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n  CognitoIdentityProvider.isa = function (o) {\n    return __isa(o, \"CognitoIdentityProvider\");\n  };\n})(CognitoIdentityProvider || (CognitoIdentityProvider = {}));\nexport var ConcurrentModificationException;\n(function (ConcurrentModificationException) {\n  ConcurrentModificationException.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n  ConcurrentModificationException.isa = function (o) {\n    return __isa(o, \"ConcurrentModificationException\");\n  };\n})(ConcurrentModificationException || (ConcurrentModificationException = {}));\nexport var CreateIdentityPoolInput;\n(function (CreateIdentityPoolInput) {\n  CreateIdentityPoolInput.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n  CreateIdentityPoolInput.isa = function (o) {\n    return __isa(o, \"CreateIdentityPoolInput\");\n  };\n})(CreateIdentityPoolInput || (CreateIdentityPoolInput = {}));\nexport var Credentials;\n(function (Credentials) {\n  Credentials.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n  Credentials.isa = function (o) {\n    return __isa(o, \"Credentials\");\n  };\n})(Credentials || (Credentials = {}));\nexport var DeleteIdentitiesInput;\n(function (DeleteIdentitiesInput) {\n  DeleteIdentitiesInput.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n  DeleteIdentitiesInput.isa = function (o) {\n    return __isa(o, \"DeleteIdentitiesInput\");\n  };\n})(DeleteIdentitiesInput || (DeleteIdentitiesInput = {}));\nexport var DeleteIdentitiesResponse;\n(function (DeleteIdentitiesResponse) {\n  DeleteIdentitiesResponse.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n  DeleteIdentitiesResponse.isa = function (o) {\n    return __isa(o, \"DeleteIdentitiesResponse\");\n  };\n})(DeleteIdentitiesResponse || (DeleteIdentitiesResponse = {}));\nexport var DeleteIdentityPoolInput;\n(function (DeleteIdentityPoolInput) {\n  DeleteIdentityPoolInput.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n  DeleteIdentityPoolInput.isa = function (o) {\n    return __isa(o, \"DeleteIdentityPoolInput\");\n  };\n})(DeleteIdentityPoolInput || (DeleteIdentityPoolInput = {}));\nexport var DescribeIdentityInput;\n(function (DescribeIdentityInput) {\n  DescribeIdentityInput.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n  DescribeIdentityInput.isa = function (o) {\n    return __isa(o, \"DescribeIdentityInput\");\n  };\n})(DescribeIdentityInput || (DescribeIdentityInput = {}));\nexport var DescribeIdentityPoolInput;\n(function (DescribeIdentityPoolInput) {\n  DescribeIdentityPoolInput.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n  DescribeIdentityPoolInput.isa = function (o) {\n    return __isa(o, \"DescribeIdentityPoolInput\");\n  };\n})(DescribeIdentityPoolInput || (DescribeIdentityPoolInput = {}));\nexport var DeveloperUserAlreadyRegisteredException;\n(function (DeveloperUserAlreadyRegisteredException) {\n  DeveloperUserAlreadyRegisteredException.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n  DeveloperUserAlreadyRegisteredException.isa = function (o) {\n    return __isa(o, \"DeveloperUserAlreadyRegisteredException\");\n  };\n})(DeveloperUserAlreadyRegisteredException || (DeveloperUserAlreadyRegisteredException = {}));\nexport var ErrorCode;\n(function (ErrorCode) {\n  ErrorCode[\"ACCESS_DENIED\"] = \"AccessDenied\";\n  ErrorCode[\"INTERNAL_SERVER_ERROR\"] = \"InternalServerError\";\n})(ErrorCode || (ErrorCode = {}));\nexport var ExternalServiceException;\n(function (ExternalServiceException) {\n  ExternalServiceException.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n  ExternalServiceException.isa = function (o) {\n    return __isa(o, \"ExternalServiceException\");\n  };\n})(ExternalServiceException || (ExternalServiceException = {}));\nexport var GetCredentialsForIdentityInput;\n(function (GetCredentialsForIdentityInput) {\n  GetCredentialsForIdentityInput.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n  GetCredentialsForIdentityInput.isa = function (o) {\n    return __isa(o, \"GetCredentialsForIdentityInput\");\n  };\n})(GetCredentialsForIdentityInput || (GetCredentialsForIdentityInput = {}));\nexport var GetCredentialsForIdentityResponse;\n(function (GetCredentialsForIdentityResponse) {\n  GetCredentialsForIdentityResponse.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n  GetCredentialsForIdentityResponse.isa = function (o) {\n    return __isa(o, \"GetCredentialsForIdentityResponse\");\n  };\n})(GetCredentialsForIdentityResponse || (GetCredentialsForIdentityResponse = {}));\nexport var GetIdentityPoolRolesInput;\n(function (GetIdentityPoolRolesInput) {\n  GetIdentityPoolRolesInput.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n  GetIdentityPoolRolesInput.isa = function (o) {\n    return __isa(o, \"GetIdentityPoolRolesInput\");\n  };\n})(GetIdentityPoolRolesInput || (GetIdentityPoolRolesInput = {}));\nexport var GetIdentityPoolRolesResponse;\n(function (GetIdentityPoolRolesResponse) {\n  GetIdentityPoolRolesResponse.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n  GetIdentityPoolRolesResponse.isa = function (o) {\n    return __isa(o, \"GetIdentityPoolRolesResponse\");\n  };\n})(GetIdentityPoolRolesResponse || (GetIdentityPoolRolesResponse = {}));\nexport var GetIdInput;\n(function (GetIdInput) {\n  GetIdInput.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n  GetIdInput.isa = function (o) {\n    return __isa(o, \"GetIdInput\");\n  };\n})(GetIdInput || (GetIdInput = {}));\nexport var GetIdResponse;\n(function (GetIdResponse) {\n  GetIdResponse.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n  GetIdResponse.isa = function (o) {\n    return __isa(o, \"GetIdResponse\");\n  };\n})(GetIdResponse || (GetIdResponse = {}));\nexport var GetOpenIdTokenForDeveloperIdentityInput;\n(function (GetOpenIdTokenForDeveloperIdentityInput) {\n  GetOpenIdTokenForDeveloperIdentityInput.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n  GetOpenIdTokenForDeveloperIdentityInput.isa = function (o) {\n    return __isa(o, \"GetOpenIdTokenForDeveloperIdentityInput\");\n  };\n})(GetOpenIdTokenForDeveloperIdentityInput || (GetOpenIdTokenForDeveloperIdentityInput = {}));\nexport var GetOpenIdTokenForDeveloperIdentityResponse;\n(function (GetOpenIdTokenForDeveloperIdentityResponse) {\n  GetOpenIdTokenForDeveloperIdentityResponse.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n  GetOpenIdTokenForDeveloperIdentityResponse.isa = function (o) {\n    return __isa(o, \"GetOpenIdTokenForDeveloperIdentityResponse\");\n  };\n})(GetOpenIdTokenForDeveloperIdentityResponse || (GetOpenIdTokenForDeveloperIdentityResponse = {}));\nexport var GetOpenIdTokenInput;\n(function (GetOpenIdTokenInput) {\n  GetOpenIdTokenInput.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n  GetOpenIdTokenInput.isa = function (o) {\n    return __isa(o, \"GetOpenIdTokenInput\");\n  };\n})(GetOpenIdTokenInput || (GetOpenIdTokenInput = {}));\nexport var GetOpenIdTokenResponse;\n(function (GetOpenIdTokenResponse) {\n  GetOpenIdTokenResponse.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n  GetOpenIdTokenResponse.isa = function (o) {\n    return __isa(o, \"GetOpenIdTokenResponse\");\n  };\n})(GetOpenIdTokenResponse || (GetOpenIdTokenResponse = {}));\nexport var IdentityDescription;\n(function (IdentityDescription) {\n  IdentityDescription.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n  IdentityDescription.isa = function (o) {\n    return __isa(o, \"IdentityDescription\");\n  };\n})(IdentityDescription || (IdentityDescription = {}));\nexport var IdentityPool;\n(function (IdentityPool) {\n  IdentityPool.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n  IdentityPool.isa = function (o) {\n    return __isa(o, \"IdentityPool\");\n  };\n})(IdentityPool || (IdentityPool = {}));\nexport var IdentityPoolShortDescription;\n(function (IdentityPoolShortDescription) {\n  IdentityPoolShortDescription.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n  IdentityPoolShortDescription.isa = function (o) {\n    return __isa(o, \"IdentityPoolShortDescription\");\n  };\n})(IdentityPoolShortDescription || (IdentityPoolShortDescription = {}));\nexport var InternalErrorException;\n(function (InternalErrorException) {\n  InternalErrorException.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n  InternalErrorException.isa = function (o) {\n    return __isa(o, \"InternalErrorException\");\n  };\n})(InternalErrorException || (InternalErrorException = {}));\nexport var InvalidIdentityPoolConfigurationException;\n(function (InvalidIdentityPoolConfigurationException) {\n  InvalidIdentityPoolConfigurationException.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n  InvalidIdentityPoolConfigurationException.isa = function (o) {\n    return __isa(o, \"InvalidIdentityPoolConfigurationException\");\n  };\n})(InvalidIdentityPoolConfigurationException || (InvalidIdentityPoolConfigurationException = {}));\nexport var InvalidParameterException;\n(function (InvalidParameterException) {\n  InvalidParameterException.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n  InvalidParameterException.isa = function (o) {\n    return __isa(o, \"InvalidParameterException\");\n  };\n})(InvalidParameterException || (InvalidParameterException = {}));\nexport var LimitExceededException;\n(function (LimitExceededException) {\n  LimitExceededException.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n  LimitExceededException.isa = function (o) {\n    return __isa(o, \"LimitExceededException\");\n  };\n})(LimitExceededException || (LimitExceededException = {}));\nexport var ListIdentitiesInput;\n(function (ListIdentitiesInput) {\n  ListIdentitiesInput.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n  ListIdentitiesInput.isa = function (o) {\n    return __isa(o, \"ListIdentitiesInput\");\n  };\n})(ListIdentitiesInput || (ListIdentitiesInput = {}));\nexport var ListIdentitiesResponse;\n(function (ListIdentitiesResponse) {\n  ListIdentitiesResponse.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n  ListIdentitiesResponse.isa = function (o) {\n    return __isa(o, \"ListIdentitiesResponse\");\n  };\n})(ListIdentitiesResponse || (ListIdentitiesResponse = {}));\nexport var ListIdentityPoolsInput;\n(function (ListIdentityPoolsInput) {\n  ListIdentityPoolsInput.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n  ListIdentityPoolsInput.isa = function (o) {\n    return __isa(o, \"ListIdentityPoolsInput\");\n  };\n})(ListIdentityPoolsInput || (ListIdentityPoolsInput = {}));\nexport var ListIdentityPoolsResponse;\n(function (ListIdentityPoolsResponse) {\n  ListIdentityPoolsResponse.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n  ListIdentityPoolsResponse.isa = function (o) {\n    return __isa(o, \"ListIdentityPoolsResponse\");\n  };\n})(ListIdentityPoolsResponse || (ListIdentityPoolsResponse = {}));\nexport var ListTagsForResourceInput;\n(function (ListTagsForResourceInput) {\n  ListTagsForResourceInput.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n  ListTagsForResourceInput.isa = function (o) {\n    return __isa(o, \"ListTagsForResourceInput\");\n  };\n})(ListTagsForResourceInput || (ListTagsForResourceInput = {}));\nexport var ListTagsForResourceResponse;\n(function (ListTagsForResourceResponse) {\n  ListTagsForResourceResponse.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n  ListTagsForResourceResponse.isa = function (o) {\n    return __isa(o, \"ListTagsForResourceResponse\");\n  };\n})(ListTagsForResourceResponse || (ListTagsForResourceResponse = {}));\nexport var LookupDeveloperIdentityInput;\n(function (LookupDeveloperIdentityInput) {\n  LookupDeveloperIdentityInput.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n  LookupDeveloperIdentityInput.isa = function (o) {\n    return __isa(o, \"LookupDeveloperIdentityInput\");\n  };\n})(LookupDeveloperIdentityInput || (LookupDeveloperIdentityInput = {}));\nexport var LookupDeveloperIdentityResponse;\n(function (LookupDeveloperIdentityResponse) {\n  LookupDeveloperIdentityResponse.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n  LookupDeveloperIdentityResponse.isa = function (o) {\n    return __isa(o, \"LookupDeveloperIdentityResponse\");\n  };\n})(LookupDeveloperIdentityResponse || (LookupDeveloperIdentityResponse = {}));\nexport var MappingRule;\n(function (MappingRule) {\n  MappingRule.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n  MappingRule.isa = function (o) {\n    return __isa(o, \"MappingRule\");\n  };\n})(MappingRule || (MappingRule = {}));\nexport var MappingRuleMatchType;\n(function (MappingRuleMatchType) {\n  MappingRuleMatchType[\"CONTAINS\"] = \"Contains\";\n  MappingRuleMatchType[\"EQUALS\"] = \"Equals\";\n  MappingRuleMatchType[\"NOT_EQUAL\"] = \"NotEqual\";\n  MappingRuleMatchType[\"STARTS_WITH\"] = \"StartsWith\";\n})(MappingRuleMatchType || (MappingRuleMatchType = {}));\nexport var MergeDeveloperIdentitiesInput;\n(function (MergeDeveloperIdentitiesInput) {\n  MergeDeveloperIdentitiesInput.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n  MergeDeveloperIdentitiesInput.isa = function (o) {\n    return __isa(o, \"MergeDeveloperIdentitiesInput\");\n  };\n})(MergeDeveloperIdentitiesInput || (MergeDeveloperIdentitiesInput = {}));\nexport var MergeDeveloperIdentitiesResponse;\n(function (MergeDeveloperIdentitiesResponse) {\n  MergeDeveloperIdentitiesResponse.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n  MergeDeveloperIdentitiesResponse.isa = function (o) {\n    return __isa(o, \"MergeDeveloperIdentitiesResponse\");\n  };\n})(MergeDeveloperIdentitiesResponse || (MergeDeveloperIdentitiesResponse = {}));\nexport var NotAuthorizedException;\n(function (NotAuthorizedException) {\n  NotAuthorizedException.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n  NotAuthorizedException.isa = function (o) {\n    return __isa(o, \"NotAuthorizedException\");\n  };\n})(NotAuthorizedException || (NotAuthorizedException = {}));\nexport var ResourceConflictException;\n(function (ResourceConflictException) {\n  ResourceConflictException.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n  ResourceConflictException.isa = function (o) {\n    return __isa(o, \"ResourceConflictException\");\n  };\n})(ResourceConflictException || (ResourceConflictException = {}));\nexport var ResourceNotFoundException;\n(function (ResourceNotFoundException) {\n  ResourceNotFoundException.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n  ResourceNotFoundException.isa = function (o) {\n    return __isa(o, \"ResourceNotFoundException\");\n  };\n})(ResourceNotFoundException || (ResourceNotFoundException = {}));\nexport var RoleMapping;\n(function (RoleMapping) {\n  RoleMapping.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n  RoleMapping.isa = function (o) {\n    return __isa(o, \"RoleMapping\");\n  };\n})(RoleMapping || (RoleMapping = {}));\nexport var RoleMappingType;\n(function (RoleMappingType) {\n  RoleMappingType[\"RULES\"] = \"Rules\";\n  RoleMappingType[\"TOKEN\"] = \"Token\";\n})(RoleMappingType || (RoleMappingType = {}));\nexport var RulesConfigurationType;\n(function (RulesConfigurationType) {\n  RulesConfigurationType.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n  RulesConfigurationType.isa = function (o) {\n    return __isa(o, \"RulesConfigurationType\");\n  };\n})(RulesConfigurationType || (RulesConfigurationType = {}));\nexport var SetIdentityPoolRolesInput;\n(function (SetIdentityPoolRolesInput) {\n  SetIdentityPoolRolesInput.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n  SetIdentityPoolRolesInput.isa = function (o) {\n    return __isa(o, \"SetIdentityPoolRolesInput\");\n  };\n})(SetIdentityPoolRolesInput || (SetIdentityPoolRolesInput = {}));\nexport var TagResourceInput;\n(function (TagResourceInput) {\n  TagResourceInput.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n  TagResourceInput.isa = function (o) {\n    return __isa(o, \"TagResourceInput\");\n  };\n})(TagResourceInput || (TagResourceInput = {}));\nexport var TagResourceResponse;\n(function (TagResourceResponse) {\n  TagResourceResponse.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n  TagResourceResponse.isa = function (o) {\n    return __isa(o, \"TagResourceResponse\");\n  };\n})(TagResourceResponse || (TagResourceResponse = {}));\nexport var TooManyRequestsException;\n(function (TooManyRequestsException) {\n  TooManyRequestsException.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n  TooManyRequestsException.isa = function (o) {\n    return __isa(o, \"TooManyRequestsException\");\n  };\n})(TooManyRequestsException || (TooManyRequestsException = {}));\nexport var UnlinkDeveloperIdentityInput;\n(function (UnlinkDeveloperIdentityInput) {\n  UnlinkDeveloperIdentityInput.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n  UnlinkDeveloperIdentityInput.isa = function (o) {\n    return __isa(o, \"UnlinkDeveloperIdentityInput\");\n  };\n})(UnlinkDeveloperIdentityInput || (UnlinkDeveloperIdentityInput = {}));\nexport var UnlinkIdentityInput;\n(function (UnlinkIdentityInput) {\n  UnlinkIdentityInput.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n  UnlinkIdentityInput.isa = function (o) {\n    return __isa(o, \"UnlinkIdentityInput\");\n  };\n})(UnlinkIdentityInput || (UnlinkIdentityInput = {}));\nexport var UnprocessedIdentityId;\n(function (UnprocessedIdentityId) {\n  UnprocessedIdentityId.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n  UnprocessedIdentityId.isa = function (o) {\n    return __isa(o, \"UnprocessedIdentityId\");\n  };\n})(UnprocessedIdentityId || (UnprocessedIdentityId = {}));\nexport var UntagResourceInput;\n(function (UntagResourceInput) {\n  UntagResourceInput.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n  UntagResourceInput.isa = function (o) {\n    return __isa(o, \"UntagResourceInput\");\n  };\n})(UntagResourceInput || (UntagResourceInput = {}));\nexport var UntagResourceResponse;\n(function (UntagResourceResponse) {\n  UntagResourceResponse.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n  UntagResourceResponse.isa = function (o) {\n    return __isa(o, \"UntagResourceResponse\");\n  };\n})(UntagResourceResponse || (UntagResourceResponse = {}));","map":{"version":3,"names":["isa","__isa","AmbiguousRoleResolutionType","CognitoIdentityProvider","filterSensitiveLog","obj","__assign","o","ConcurrentModificationException","CreateIdentityPoolInput","Credentials","DeleteIdentitiesInput","DeleteIdentitiesResponse","DeleteIdentityPoolInput","DescribeIdentityInput","DescribeIdentityPoolInput","DeveloperUserAlreadyRegisteredException","ErrorCode","ExternalServiceException","GetCredentialsForIdentityInput","GetCredentialsForIdentityResponse","GetIdentityPoolRolesInput","GetIdentityPoolRolesResponse","GetIdInput","GetIdResponse","GetOpenIdTokenForDeveloperIdentityInput","GetOpenIdTokenForDeveloperIdentityResponse","GetOpenIdTokenInput","GetOpenIdTokenResponse","IdentityDescription","IdentityPool","IdentityPoolShortDescription","InternalErrorException","InvalidIdentityPoolConfigurationException","InvalidParameterException","LimitExceededException","ListIdentitiesInput","ListIdentitiesResponse","ListIdentityPoolsInput","ListIdentityPoolsResponse","ListTagsForResourceInput","ListTagsForResourceResponse","LookupDeveloperIdentityInput","LookupDeveloperIdentityResponse","MappingRule","MappingRuleMatchType","MergeDeveloperIdentitiesInput","MergeDeveloperIdentitiesResponse","NotAuthorizedException","ResourceConflictException","ResourceNotFoundException","RoleMapping","RoleMappingType","RulesConfigurationType","SetIdentityPoolRolesInput","TagResourceInput","TagResourceResponse","TooManyRequestsException","UnlinkDeveloperIdentityInput","UnlinkIdentityInput","UnprocessedIdentityId","UntagResourceInput","UntagResourceResponse"],"sources":["/Users/ericli/node_modules/@aws-amplify/analytics/node_modules/@aws-sdk/client-cognito-identity/models/index.ts"],"sourcesContent":["import { SENSITIVE_STRING, SmithyException as __SmithyException, isa as __isa } from \"@aws-sdk/smithy-client\";\nimport { MetadataBearer as $MetadataBearer } from \"@aws-sdk/types\";\n\nexport enum AmbiguousRoleResolutionType {\n  AUTHENTICATED_ROLE = \"AuthenticatedRole\",\n  DENY = \"Deny\",\n}\n\n/**\n * <p>A provider representing an Amazon Cognito user pool and its client ID.</p>\n */\nexport interface CognitoIdentityProvider {\n  __type?: \"CognitoIdentityProvider\";\n  /**\n   * <p>The client ID for the Amazon Cognito user pool.</p>\n   */\n  ClientId?: string;\n\n  /**\n   * <p>The provider name for an Amazon Cognito user pool. For example,\n   *             <code>cognito-idp.us-east-1.amazonaws.com/us-east-1_123456789</code>.</p>\n   */\n  ProviderName?: string;\n\n  /**\n   * <p>TRUE if server-side token validation is enabled for the identity provider’s\n   *          token.</p>\n   *          <p>Once you set <code>ServerSideTokenCheck</code> to TRUE for an identity pool, that\n   *          identity pool will check with the integrated user pools to make sure that the user has not\n   *          been globally signed out or deleted before the identity pool provides an OIDC token or AWS\n   *          credentials for the user.</p>\n   *          <p>If the user is signed out or deleted, the identity pool will return a 400 Not\n   *          Authorized error.</p>\n   */\n  ServerSideTokenCheck?: boolean;\n}\n\nexport namespace CognitoIdentityProvider {\n  export const filterSensitiveLog = (obj: CognitoIdentityProvider): any => ({\n    ...obj,\n  });\n  export const isa = (o: any): o is CognitoIdentityProvider => __isa(o, \"CognitoIdentityProvider\");\n}\n\n/**\n * <p>Thrown if there are parallel requests to modify a resource.</p>\n */\nexport interface ConcurrentModificationException extends __SmithyException, $MetadataBearer {\n  name: \"ConcurrentModificationException\";\n  $fault: \"client\";\n  /**\n   * <p>The message returned by a ConcurrentModificationException.</p>\n   */\n  message?: string;\n}\n\nexport namespace ConcurrentModificationException {\n  export const filterSensitiveLog = (obj: ConcurrentModificationException): any => ({\n    ...obj,\n  });\n  export const isa = (o: any): o is ConcurrentModificationException => __isa(o, \"ConcurrentModificationException\");\n}\n\n/**\n * <p>Input to the CreateIdentityPool action.</p>\n */\nexport interface CreateIdentityPoolInput {\n  __type?: \"CreateIdentityPoolInput\";\n  /**\n   * <p>A string that you provide.</p>\n   */\n  IdentityPoolName: string | undefined;\n\n  /**\n   * <p>The \"domain\" by which Cognito will refer to your users. This name acts as a\n   *          placeholder that allows your backend and the Cognito service to communicate about the\n   *          developer provider. For the <code>DeveloperProviderName</code>, you can use letters as well\n   *          as period (<code>.</code>), underscore (<code>_</code>), and dash\n   *          (<code>-</code>).</p>\n   *          <p>Once you have set a developer provider name, you cannot change it. Please take care\n   *          in setting this parameter.</p>\n   */\n  DeveloperProviderName?: string;\n\n  /**\n   * <p>An array of Amazon Cognito user pools and their client IDs.</p>\n   */\n  CognitoIdentityProviders?: CognitoIdentityProvider[];\n\n  /**\n   * <p>Enables or disables the Basic (Classic) authentication flow. For more information, see\n   *       <a href=\"https://docs.aws.amazon.com/cognito/latest/developerguide/authentication-flow.html\">Identity Pools (Federated Identities) Authentication Flow</a> in the <i>Amazon Cognito Developer Guide</i>.</p>\n   */\n  AllowClassicFlow?: boolean;\n\n  /**\n   * <p>A list of OpendID Connect provider ARNs.</p>\n   */\n  OpenIdConnectProviderARNs?: string[];\n\n  /**\n   * <p>An array of Amazon Resource Names (ARNs) of the SAML provider for your identity\n   *          pool.</p>\n   */\n  SamlProviderARNs?: string[];\n\n  /**\n   * <p>Tags to assign to the identity pool. A tag is a label that you can apply to identity\n   *          pools to categorize and manage them in different ways, such as by purpose, owner,\n   *          environment, or other criteria.</p>\n   */\n  IdentityPoolTags?: { [key: string]: string };\n\n  /**\n   * <p>Optional key:value pairs mapping provider names to provider app IDs.</p>\n   */\n  SupportedLoginProviders?: { [key: string]: string };\n\n  /**\n   * <p>TRUE if the identity pool supports unauthenticated logins.</p>\n   */\n  AllowUnauthenticatedIdentities: boolean | undefined;\n}\n\nexport namespace CreateIdentityPoolInput {\n  export const filterSensitiveLog = (obj: CreateIdentityPoolInput): any => ({\n    ...obj,\n  });\n  export const isa = (o: any): o is CreateIdentityPoolInput => __isa(o, \"CreateIdentityPoolInput\");\n}\n\n/**\n * <p>Credentials for the provided identity ID.</p>\n */\nexport interface Credentials {\n  __type?: \"Credentials\";\n  /**\n   * <p>The Secret Access Key portion of the credentials</p>\n   */\n  SecretKey?: string;\n\n  /**\n   * <p>The Access Key portion of the credentials.</p>\n   */\n  AccessKeyId?: string;\n\n  /**\n   * <p>The date at which these credentials will expire.</p>\n   */\n  Expiration?: Date;\n\n  /**\n   * <p>The Session Token portion of the credentials</p>\n   */\n  SessionToken?: string;\n}\n\nexport namespace Credentials {\n  export const filterSensitiveLog = (obj: Credentials): any => ({\n    ...obj,\n  });\n  export const isa = (o: any): o is Credentials => __isa(o, \"Credentials\");\n}\n\n/**\n * <p>Input to the <code>DeleteIdentities</code> action.</p>\n */\nexport interface DeleteIdentitiesInput {\n  __type?: \"DeleteIdentitiesInput\";\n  /**\n   * <p>A list of 1-60 identities that you want to delete.</p>\n   */\n  IdentityIdsToDelete: string[] | undefined;\n}\n\nexport namespace DeleteIdentitiesInput {\n  export const filterSensitiveLog = (obj: DeleteIdentitiesInput): any => ({\n    ...obj,\n  });\n  export const isa = (o: any): o is DeleteIdentitiesInput => __isa(o, \"DeleteIdentitiesInput\");\n}\n\n/**\n * <p>Returned in response to a successful <code>DeleteIdentities</code>\n *          operation.</p>\n */\nexport interface DeleteIdentitiesResponse {\n  __type?: \"DeleteIdentitiesResponse\";\n  /**\n   * <p>An array of UnprocessedIdentityId objects, each of which contains an ErrorCode and\n   *          IdentityId.</p>\n   */\n  UnprocessedIdentityIds?: UnprocessedIdentityId[];\n}\n\nexport namespace DeleteIdentitiesResponse {\n  export const filterSensitiveLog = (obj: DeleteIdentitiesResponse): any => ({\n    ...obj,\n  });\n  export const isa = (o: any): o is DeleteIdentitiesResponse => __isa(o, \"DeleteIdentitiesResponse\");\n}\n\n/**\n * <p>Input to the DeleteIdentityPool action.</p>\n */\nexport interface DeleteIdentityPoolInput {\n  __type?: \"DeleteIdentityPoolInput\";\n  /**\n   * <p>An identity pool ID in the format REGION:GUID.</p>\n   */\n  IdentityPoolId: string | undefined;\n}\n\nexport namespace DeleteIdentityPoolInput {\n  export const filterSensitiveLog = (obj: DeleteIdentityPoolInput): any => ({\n    ...obj,\n  });\n  export const isa = (o: any): o is DeleteIdentityPoolInput => __isa(o, \"DeleteIdentityPoolInput\");\n}\n\n/**\n * <p>Input to the <code>DescribeIdentity</code> action.</p>\n */\nexport interface DescribeIdentityInput {\n  __type?: \"DescribeIdentityInput\";\n  /**\n   * <p>A unique identifier in the format REGION:GUID.</p>\n   */\n  IdentityId: string | undefined;\n}\n\nexport namespace DescribeIdentityInput {\n  export const filterSensitiveLog = (obj: DescribeIdentityInput): any => ({\n    ...obj,\n  });\n  export const isa = (o: any): o is DescribeIdentityInput => __isa(o, \"DescribeIdentityInput\");\n}\n\n/**\n * <p>Input to the DescribeIdentityPool action.</p>\n */\nexport interface DescribeIdentityPoolInput {\n  __type?: \"DescribeIdentityPoolInput\";\n  /**\n   * <p>An identity pool ID in the format REGION:GUID.</p>\n   */\n  IdentityPoolId: string | undefined;\n}\n\nexport namespace DescribeIdentityPoolInput {\n  export const filterSensitiveLog = (obj: DescribeIdentityPoolInput): any => ({\n    ...obj,\n  });\n  export const isa = (o: any): o is DescribeIdentityPoolInput => __isa(o, \"DescribeIdentityPoolInput\");\n}\n\n/**\n * <p>The provided developer user identifier is already registered with Cognito under a\n *          different identity ID.</p>\n */\nexport interface DeveloperUserAlreadyRegisteredException extends __SmithyException, $MetadataBearer {\n  name: \"DeveloperUserAlreadyRegisteredException\";\n  $fault: \"client\";\n  /**\n   * <p>This developer user identifier is already registered with Cognito.</p>\n   */\n  message?: string;\n}\n\nexport namespace DeveloperUserAlreadyRegisteredException {\n  export const filterSensitiveLog = (obj: DeveloperUserAlreadyRegisteredException): any => ({\n    ...obj,\n  });\n  export const isa = (o: any): o is DeveloperUserAlreadyRegisteredException =>\n    __isa(o, \"DeveloperUserAlreadyRegisteredException\");\n}\n\nexport enum ErrorCode {\n  ACCESS_DENIED = \"AccessDenied\",\n  INTERNAL_SERVER_ERROR = \"InternalServerError\",\n}\n\n/**\n * <p>An exception thrown when a dependent service such as Facebook or Twitter is not\n *          responding</p>\n */\nexport interface ExternalServiceException extends __SmithyException, $MetadataBearer {\n  name: \"ExternalServiceException\";\n  $fault: \"client\";\n  /**\n   * <p>The message returned by an ExternalServiceException</p>\n   */\n  message?: string;\n}\n\nexport namespace ExternalServiceException {\n  export const filterSensitiveLog = (obj: ExternalServiceException): any => ({\n    ...obj,\n  });\n  export const isa = (o: any): o is ExternalServiceException => __isa(o, \"ExternalServiceException\");\n}\n\n/**\n * <p>Input to the <code>GetCredentialsForIdentity</code> action.</p>\n */\nexport interface GetCredentialsForIdentityInput {\n  __type?: \"GetCredentialsForIdentityInput\";\n  /**\n   * <p>A unique identifier in the format REGION:GUID.</p>\n   */\n  IdentityId: string | undefined;\n\n  /**\n   * <p>A set of optional name-value pairs that map provider names to provider tokens. The\n   *          name-value pair will follow the syntax \"provider_name\":\n   *          \"provider_user_identifier\".</p>\n   *          <p>Logins should not be specified when trying to get credentials for an unauthenticated\n   *          identity.</p>\n   *          <p>The Logins parameter is required when using identities associated with external\n   *          identity providers such as FaceBook. For examples of <code>Logins</code> maps, see the code\n   *          examples in the <a href=\"http://docs.aws.amazon.com/cognito/latest/developerguide/external-identity-providers.html\">External Identity Providers</a> section of the Amazon Cognito Developer\n   *          Guide.</p>\n   */\n  Logins?: { [key: string]: string };\n\n  /**\n   * <p>The Amazon Resource Name (ARN) of the role to be assumed when multiple roles were\n   *          received in the token from the identity provider. For example, a SAML-based identity\n   *          provider. This parameter is optional for identity providers that do not support role\n   *          customization.</p>\n   */\n  CustomRoleArn?: string;\n}\n\nexport namespace GetCredentialsForIdentityInput {\n  export const filterSensitiveLog = (obj: GetCredentialsForIdentityInput): any => ({\n    ...obj,\n  });\n  export const isa = (o: any): o is GetCredentialsForIdentityInput => __isa(o, \"GetCredentialsForIdentityInput\");\n}\n\n/**\n * <p>Returned in response to a successful <code>GetCredentialsForIdentity</code>\n *          operation.</p>\n */\nexport interface GetCredentialsForIdentityResponse {\n  __type?: \"GetCredentialsForIdentityResponse\";\n  /**\n   * <p>A unique identifier in the format REGION:GUID.</p>\n   */\n  IdentityId?: string;\n\n  /**\n   * <p>Credentials for the provided identity ID.</p>\n   */\n  Credentials?: Credentials;\n}\n\nexport namespace GetCredentialsForIdentityResponse {\n  export const filterSensitiveLog = (obj: GetCredentialsForIdentityResponse): any => ({\n    ...obj,\n  });\n  export const isa = (o: any): o is GetCredentialsForIdentityResponse => __isa(o, \"GetCredentialsForIdentityResponse\");\n}\n\n/**\n * <p>Input to the <code>GetIdentityPoolRoles</code> action.</p>\n */\nexport interface GetIdentityPoolRolesInput {\n  __type?: \"GetIdentityPoolRolesInput\";\n  /**\n   * <p>An identity pool ID in the format REGION:GUID.</p>\n   */\n  IdentityPoolId: string | undefined;\n}\n\nexport namespace GetIdentityPoolRolesInput {\n  export const filterSensitiveLog = (obj: GetIdentityPoolRolesInput): any => ({\n    ...obj,\n  });\n  export const isa = (o: any): o is GetIdentityPoolRolesInput => __isa(o, \"GetIdentityPoolRolesInput\");\n}\n\n/**\n * <p>Returned in response to a successful <code>GetIdentityPoolRoles</code>\n *          operation.</p>\n */\nexport interface GetIdentityPoolRolesResponse {\n  __type?: \"GetIdentityPoolRolesResponse\";\n  /**\n   * <p>How users for a specific identity provider are to mapped to roles. This is a\n   *             String-to-<a>RoleMapping</a> object map. The string identifies the identity\n   *          provider, for example, \"graph.facebook.com\" or\n   *          \"cognito-idp.us-east-1.amazonaws.com/us-east-1_abcdefghi:app_client_id\".</p>\n   */\n  RoleMappings?: { [key: string]: RoleMapping };\n\n  /**\n   * <p>An identity pool ID in the format REGION:GUID.</p>\n   */\n  IdentityPoolId?: string;\n\n  /**\n   * <p>The map of roles associated with this pool. Currently only authenticated and\n   *          unauthenticated roles are supported.</p>\n   */\n  Roles?: { [key: string]: string };\n}\n\nexport namespace GetIdentityPoolRolesResponse {\n  export const filterSensitiveLog = (obj: GetIdentityPoolRolesResponse): any => ({\n    ...obj,\n  });\n  export const isa = (o: any): o is GetIdentityPoolRolesResponse => __isa(o, \"GetIdentityPoolRolesResponse\");\n}\n\n/**\n * <p>Input to the GetId action.</p>\n */\nexport interface GetIdInput {\n  __type?: \"GetIdInput\";\n  /**\n   * <p>An identity pool ID in the format REGION:GUID.</p>\n   */\n  IdentityPoolId: string | undefined;\n\n  /**\n   * <p>A standard AWS account ID (9+ digits).</p>\n   */\n  AccountId?: string;\n\n  /**\n   * <p>A set of optional name-value pairs that map provider names to provider tokens. The\n   *          available provider names for <code>Logins</code> are as follows:</p>\n   *          <ul>\n   *             <li>\n   *                <p>Facebook: <code>graph.facebook.com</code>\n   *                </p>\n   *             </li>\n   *             <li>\n   *                <p>Amazon Cognito user pool:\n   *                   <code>cognito-idp.<region>.amazonaws.com/<YOUR_USER_POOL_ID></code>,\n   *                for example, <code>cognito-idp.us-east-1.amazonaws.com/us-east-1_123456789</code>.\n   *             </p>\n   *             </li>\n   *             <li>\n   *                <p>Google: <code>accounts.google.com</code>\n   *                </p>\n   *             </li>\n   *             <li>\n   *                <p>Amazon: <code>www.amazon.com</code>\n   *                </p>\n   *             </li>\n   *             <li>\n   *                <p>Twitter: <code>api.twitter.com</code>\n   *                </p>\n   *             </li>\n   *             <li>\n   *                <p>Digits: <code>www.digits.com</code>\n   *                </p>\n   *             </li>\n   *          </ul>\n   */\n  Logins?: { [key: string]: string };\n}\n\nexport namespace GetIdInput {\n  export const filterSensitiveLog = (obj: GetIdInput): any => ({\n    ...obj,\n  });\n  export const isa = (o: any): o is GetIdInput => __isa(o, \"GetIdInput\");\n}\n\n/**\n * <p>Returned in response to a GetId request.</p>\n */\nexport interface GetIdResponse {\n  __type?: \"GetIdResponse\";\n  /**\n   * <p>A unique identifier in the format REGION:GUID.</p>\n   */\n  IdentityId?: string;\n}\n\nexport namespace GetIdResponse {\n  export const filterSensitiveLog = (obj: GetIdResponse): any => ({\n    ...obj,\n  });\n  export const isa = (o: any): o is GetIdResponse => __isa(o, \"GetIdResponse\");\n}\n\n/**\n * <p>Input to the <code>GetOpenIdTokenForDeveloperIdentity</code> action.</p>\n */\nexport interface GetOpenIdTokenForDeveloperIdentityInput {\n  __type?: \"GetOpenIdTokenForDeveloperIdentityInput\";\n  /**\n   * <p>An identity pool ID in the format REGION:GUID.</p>\n   */\n  IdentityPoolId: string | undefined;\n\n  /**\n   * <p>A unique identifier in the format REGION:GUID.</p>\n   */\n  IdentityId?: string;\n\n  /**\n   * <p>A set of optional name-value pairs that map provider names to provider tokens. Each\n   *          name-value pair represents a user from a public provider or developer provider. If the user\n   *          is from a developer provider, the name-value pair will follow the syntax\n   *             <code>\"developer_provider_name\": \"developer_user_identifier\"</code>. The developer\n   *          provider is the \"domain\" by which Cognito will refer to your users; you provided this\n   *          domain while creating/updating the identity pool. The developer user identifier is an\n   *          identifier from your backend that uniquely identifies a user. When you create an identity\n   *          pool, you can specify the supported logins.</p>\n   */\n  Logins: { [key: string]: string } | undefined;\n\n  /**\n   * <p>The expiration time of the token, in seconds. You can specify a custom expiration\n   *          time for the token so that you can cache it. If you don't provide an expiration time, the\n   *          token is valid for 15 minutes. You can exchange the token with Amazon STS for temporary AWS\n   *          credentials, which are valid for a maximum of one hour. The maximum token duration you can\n   *          set is 24 hours. You should take care in setting the expiration time for a token, as there\n   *          are significant security implications: an attacker could use a leaked token to access your\n   *          AWS resources for the token's duration.</p>\n   *          <note>\n   *             <p>Please provide for a small grace period, usually no more than 5 minutes, to account for clock skew.</p>\n   *          </note>\n   */\n  TokenDuration?: number;\n}\n\nexport namespace GetOpenIdTokenForDeveloperIdentityInput {\n  export const filterSensitiveLog = (obj: GetOpenIdTokenForDeveloperIdentityInput): any => ({\n    ...obj,\n  });\n  export const isa = (o: any): o is GetOpenIdTokenForDeveloperIdentityInput =>\n    __isa(o, \"GetOpenIdTokenForDeveloperIdentityInput\");\n}\n\n/**\n * <p>Returned in response to a successful <code>GetOpenIdTokenForDeveloperIdentity</code>\n *          request.</p>\n */\nexport interface GetOpenIdTokenForDeveloperIdentityResponse {\n  __type?: \"GetOpenIdTokenForDeveloperIdentityResponse\";\n  /**\n   * <p>A unique identifier in the format REGION:GUID.</p>\n   */\n  IdentityId?: string;\n\n  /**\n   * <p>An OpenID token.</p>\n   */\n  Token?: string;\n}\n\nexport namespace GetOpenIdTokenForDeveloperIdentityResponse {\n  export const filterSensitiveLog = (obj: GetOpenIdTokenForDeveloperIdentityResponse): any => ({\n    ...obj,\n  });\n  export const isa = (o: any): o is GetOpenIdTokenForDeveloperIdentityResponse =>\n    __isa(o, \"GetOpenIdTokenForDeveloperIdentityResponse\");\n}\n\n/**\n * <p>Input to the GetOpenIdToken action.</p>\n */\nexport interface GetOpenIdTokenInput {\n  __type?: \"GetOpenIdTokenInput\";\n  /**\n   * <p>A set of optional name-value pairs that map provider names to provider tokens. When\n   *          using graph.facebook.com and www.amazon.com, supply the access_token returned from the\n   *          provider's authflow. For accounts.google.com, an Amazon Cognito user pool provider, or any\n   *          other OpenId Connect provider, always include the <code>id_token</code>.</p>\n   */\n  Logins?: { [key: string]: string };\n\n  /**\n   * <p>A unique identifier in the format REGION:GUID.</p>\n   */\n  IdentityId: string | undefined;\n}\n\nexport namespace GetOpenIdTokenInput {\n  export const filterSensitiveLog = (obj: GetOpenIdTokenInput): any => ({\n    ...obj,\n  });\n  export const isa = (o: any): o is GetOpenIdTokenInput => __isa(o, \"GetOpenIdTokenInput\");\n}\n\n/**\n * <p>Returned in response to a successful GetOpenIdToken request.</p>\n */\nexport interface GetOpenIdTokenResponse {\n  __type?: \"GetOpenIdTokenResponse\";\n  /**\n   * <p>An OpenID token, valid for 10 minutes.</p>\n   */\n  Token?: string;\n\n  /**\n   * <p>A unique identifier in the format REGION:GUID. Note that the IdentityId returned may\n   *          not match the one passed on input.</p>\n   */\n  IdentityId?: string;\n}\n\nexport namespace GetOpenIdTokenResponse {\n  export const filterSensitiveLog = (obj: GetOpenIdTokenResponse): any => ({\n    ...obj,\n  });\n  export const isa = (o: any): o is GetOpenIdTokenResponse => __isa(o, \"GetOpenIdTokenResponse\");\n}\n\n/**\n * <p>A description of the identity.</p>\n */\nexport interface IdentityDescription {\n  __type?: \"IdentityDescription\";\n  /**\n   * <p>Date on which the identity was last modified.</p>\n   */\n  LastModifiedDate?: Date;\n\n  /**\n   * <p>Date on which the identity was created.</p>\n   */\n  CreationDate?: Date;\n\n  /**\n   * <p>A unique identifier in the format REGION:GUID.</p>\n   */\n  IdentityId?: string;\n\n  /**\n   * <p>The provider names.</p>\n   */\n  Logins?: string[];\n}\n\nexport namespace IdentityDescription {\n  export const filterSensitiveLog = (obj: IdentityDescription): any => ({\n    ...obj,\n  });\n  export const isa = (o: any): o is IdentityDescription => __isa(o, \"IdentityDescription\");\n}\n\n/**\n * <p>An object representing an Amazon Cognito identity pool.</p>\n */\nexport interface IdentityPool {\n  __type?: \"IdentityPool\";\n  /**\n   * <p>Enables or disables the Basic (Classic) authentication flow. For more information, see\n   *       <a href=\"https://docs.aws.amazon.com/cognito/latest/developerguide/authentication-flow.html\">Identity Pools (Federated Identities) Authentication Flow</a> in the <i>Amazon Cognito Developer Guide</i>.</p>\n   */\n  AllowClassicFlow?: boolean;\n\n  /**\n   * <p>A list representing an Amazon Cognito user pool and its client ID.</p>\n   */\n  CognitoIdentityProviders?: CognitoIdentityProvider[];\n\n  /**\n   * <p>An array of Amazon Resource Names (ARNs) of the SAML provider for your identity\n   *          pool.</p>\n   */\n  SamlProviderARNs?: string[];\n\n  /**\n   * <p>A list of OpendID Connect provider ARNs.</p>\n   */\n  OpenIdConnectProviderARNs?: string[];\n\n  /**\n   * <p>The tags that are assigned to the identity pool. A tag is a label that you can apply to\n   *          identity pools to categorize and manage them in different ways, such as by purpose, owner,\n   *          environment, or other criteria.</p>\n   */\n  IdentityPoolTags?: { [key: string]: string };\n\n  /**\n   * <p>An identity pool ID in the format REGION:GUID.</p>\n   */\n  IdentityPoolId: string | undefined;\n\n  /**\n   * <p>The \"domain\" by which Cognito will refer to your users.</p>\n   */\n  DeveloperProviderName?: string;\n\n  /**\n   * <p>A string that you provide.</p>\n   */\n  IdentityPoolName: string | undefined;\n\n  /**\n   * <p>Optional key:value pairs mapping provider names to provider app IDs.</p>\n   */\n  SupportedLoginProviders?: { [key: string]: string };\n\n  /**\n   * <p>TRUE if the identity pool supports unauthenticated logins.</p>\n   */\n  AllowUnauthenticatedIdentities: boolean | undefined;\n}\n\nexport namespace IdentityPool {\n  export const filterSensitiveLog = (obj: IdentityPool): any => ({\n    ...obj,\n  });\n  export const isa = (o: any): o is IdentityPool => __isa(o, \"IdentityPool\");\n}\n\n/**\n * <p>A description of the identity pool.</p>\n */\nexport interface IdentityPoolShortDescription {\n  __type?: \"IdentityPoolShortDescription\";\n  /**\n   * <p>A string that you provide.</p>\n   */\n  IdentityPoolName?: string;\n\n  /**\n   * <p>An identity pool ID in the format REGION:GUID.</p>\n   */\n  IdentityPoolId?: string;\n}\n\nexport namespace IdentityPoolShortDescription {\n  export const filterSensitiveLog = (obj: IdentityPoolShortDescription): any => ({\n    ...obj,\n  });\n  export const isa = (o: any): o is IdentityPoolShortDescription => __isa(o, \"IdentityPoolShortDescription\");\n}\n\n/**\n * <p>Thrown when the service encounters an error during processing the request.</p>\n */\nexport interface InternalErrorException extends __SmithyException, $MetadataBearer {\n  name: \"InternalErrorException\";\n  $fault: \"server\";\n  /**\n   * <p>The message returned by an InternalErrorException.</p>\n   */\n  message?: string;\n}\n\nexport namespace InternalErrorException {\n  export const filterSensitiveLog = (obj: InternalErrorException): any => ({\n    ...obj,\n  });\n  export const isa = (o: any): o is InternalErrorException => __isa(o, \"InternalErrorException\");\n}\n\n/**\n * <p>Thrown if the identity pool has no role associated for the given auth type\n *          (auth/unauth) or if the AssumeRole fails.</p>\n */\nexport interface InvalidIdentityPoolConfigurationException extends __SmithyException, $MetadataBearer {\n  name: \"InvalidIdentityPoolConfigurationException\";\n  $fault: \"client\";\n  /**\n   * <p>The message returned for an <code>InvalidIdentityPoolConfigurationException</code>\n   *          </p>\n   */\n  message?: string;\n}\n\nexport namespace InvalidIdentityPoolConfigurationException {\n  export const filterSensitiveLog = (obj: InvalidIdentityPoolConfigurationException): any => ({\n    ...obj,\n  });\n  export const isa = (o: any): o is InvalidIdentityPoolConfigurationException =>\n    __isa(o, \"InvalidIdentityPoolConfigurationException\");\n}\n\n/**\n * <p>Thrown for missing or bad input parameter(s).</p>\n */\nexport interface InvalidParameterException extends __SmithyException, $MetadataBearer {\n  name: \"InvalidParameterException\";\n  $fault: \"client\";\n  /**\n   * <p>The message returned by an InvalidParameterException.</p>\n   */\n  message?: string;\n}\n\nexport namespace InvalidParameterException {\n  export const filterSensitiveLog = (obj: InvalidParameterException): any => ({\n    ...obj,\n  });\n  export const isa = (o: any): o is InvalidParameterException => __isa(o, \"InvalidParameterException\");\n}\n\n/**\n * <p>Thrown when the total number of user pools has exceeded a preset limit.</p>\n */\nexport interface LimitExceededException extends __SmithyException, $MetadataBearer {\n  name: \"LimitExceededException\";\n  $fault: \"client\";\n  /**\n   * <p>The message returned by a LimitExceededException.</p>\n   */\n  message?: string;\n}\n\nexport namespace LimitExceededException {\n  export const filterSensitiveLog = (obj: LimitExceededException): any => ({\n    ...obj,\n  });\n  export const isa = (o: any): o is LimitExceededException => __isa(o, \"LimitExceededException\");\n}\n\n/**\n * <p>Input to the ListIdentities action.</p>\n */\nexport interface ListIdentitiesInput {\n  __type?: \"ListIdentitiesInput\";\n  /**\n   * <p>A pagination token.</p>\n   */\n  NextToken?: string;\n\n  /**\n   * <p>The maximum number of identities to return.</p>\n   */\n  MaxResults: number | undefined;\n\n  /**\n   * <p>An identity pool ID in the format REGION:GUID.</p>\n   */\n  IdentityPoolId: string | undefined;\n\n  /**\n   * <p>An optional boolean parameter that allows you to hide disabled identities. If\n   *          omitted, the ListIdentities API will include disabled identities in the response.</p>\n   */\n  HideDisabled?: boolean;\n}\n\nexport namespace ListIdentitiesInput {\n  export const filterSensitiveLog = (obj: ListIdentitiesInput): any => ({\n    ...obj,\n  });\n  export const isa = (o: any): o is ListIdentitiesInput => __isa(o, \"ListIdentitiesInput\");\n}\n\n/**\n * <p>The response to a ListIdentities request.</p>\n */\nexport interface ListIdentitiesResponse {\n  __type?: \"ListIdentitiesResponse\";\n  /**\n   * <p>An object containing a set of identities and associated mappings.</p>\n   */\n  Identities?: IdentityDescription[];\n\n  /**\n   * <p>A pagination token.</p>\n   */\n  NextToken?: string;\n\n  /**\n   * <p>An identity pool ID in the format REGION:GUID.</p>\n   */\n  IdentityPoolId?: string;\n}\n\nexport namespace ListIdentitiesResponse {\n  export const filterSensitiveLog = (obj: ListIdentitiesResponse): any => ({\n    ...obj,\n  });\n  export const isa = (o: any): o is ListIdentitiesResponse => __isa(o, \"ListIdentitiesResponse\");\n}\n\n/**\n * <p>Input to the ListIdentityPools action.</p>\n */\nexport interface ListIdentityPoolsInput {\n  __type?: \"ListIdentityPoolsInput\";\n  /**\n   * <p>The maximum number of identities to return.</p>\n   */\n  MaxResults: number | undefined;\n\n  /**\n   * <p>A pagination token.</p>\n   */\n  NextToken?: string;\n}\n\nexport namespace ListIdentityPoolsInput {\n  export const filterSensitiveLog = (obj: ListIdentityPoolsInput): any => ({\n    ...obj,\n  });\n  export const isa = (o: any): o is ListIdentityPoolsInput => __isa(o, \"ListIdentityPoolsInput\");\n}\n\n/**\n * <p>The result of a successful ListIdentityPools action.</p>\n */\nexport interface ListIdentityPoolsResponse {\n  __type?: \"ListIdentityPoolsResponse\";\n  /**\n   * <p>A pagination token.</p>\n   */\n  NextToken?: string;\n\n  /**\n   * <p>The identity pools returned by the ListIdentityPools action.</p>\n   */\n  IdentityPools?: IdentityPoolShortDescription[];\n}\n\nexport namespace ListIdentityPoolsResponse {\n  export const filterSensitiveLog = (obj: ListIdentityPoolsResponse): any => ({\n    ...obj,\n  });\n  export const isa = (o: any): o is ListIdentityPoolsResponse => __isa(o, \"ListIdentityPoolsResponse\");\n}\n\nexport interface ListTagsForResourceInput {\n  __type?: \"ListTagsForResourceInput\";\n  /**\n   * <p>The Amazon Resource Name (ARN) of the identity pool that the tags are assigned\n   *          to.</p>\n   */\n  ResourceArn: string | undefined;\n}\n\nexport namespace ListTagsForResourceInput {\n  export const filterSensitiveLog = (obj: ListTagsForResourceInput): any => ({\n    ...obj,\n  });\n  export const isa = (o: any): o is ListTagsForResourceInput => __isa(o, \"ListTagsForResourceInput\");\n}\n\nexport interface ListTagsForResourceResponse {\n  __type?: \"ListTagsForResourceResponse\";\n  /**\n   * <p>The tags that are assigned to the identity pool.</p>\n   */\n  Tags?: { [key: string]: string };\n}\n\nexport namespace ListTagsForResourceResponse {\n  export const filterSensitiveLog = (obj: ListTagsForResourceResponse): any => ({\n    ...obj,\n  });\n  export const isa = (o: any): o is ListTagsForResourceResponse => __isa(o, \"ListTagsForResourceResponse\");\n}\n\n/**\n * <p>Input to the <code>LookupDeveloperIdentityInput</code> action.</p>\n */\nexport interface LookupDeveloperIdentityInput {\n  __type?: \"LookupDeveloperIdentityInput\";\n  /**\n   * <p>A pagination token. The first call you make will have <code>NextToken</code> set to\n   *          null. After that the service will return <code>NextToken</code> values as needed. For\n   *          example, let's say you make a request with <code>MaxResults</code> set to 10, and there are\n   *          20 matches in the database. The service will return a pagination token as a part of the\n   *          response. This token can be used to call the API again and get results starting from the\n   *          11th match.</p>\n   */\n  NextToken?: string;\n\n  /**\n   * <p>An identity pool ID in the format REGION:GUID.</p>\n   */\n  IdentityPoolId: string | undefined;\n\n  /**\n   * <p>A unique ID used by your backend authentication process to identify a user.\n   *          Typically, a developer identity provider would issue many developer user identifiers, in\n   *          keeping with the number of users.</p>\n   */\n  DeveloperUserIdentifier?: string;\n\n  /**\n   * <p>The maximum number of identities to return.</p>\n   */\n  MaxResults?: number;\n\n  /**\n   * <p>A unique identifier in the format REGION:GUID.</p>\n   */\n  IdentityId?: string;\n}\n\nexport namespace LookupDeveloperIdentityInput {\n  export const filterSensitiveLog = (obj: LookupDeveloperIdentityInput): any => ({\n    ...obj,\n  });\n  export const isa = (o: any): o is LookupDeveloperIdentityInput => __isa(o, \"LookupDeveloperIdentityInput\");\n}\n\n/**\n * <p>Returned in response to a successful <code>LookupDeveloperIdentity</code>\n *          action.</p>\n */\nexport interface LookupDeveloperIdentityResponse {\n  __type?: \"LookupDeveloperIdentityResponse\";\n  /**\n   * <p>A unique identifier in the format REGION:GUID.</p>\n   */\n  IdentityId?: string;\n\n  /**\n   * <p>A pagination token. The first call you make will have <code>NextToken</code> set to\n   *          null. After that the service will return <code>NextToken</code> values as needed. For\n   *          example, let's say you make a request with <code>MaxResults</code> set to 10, and there are\n   *          20 matches in the database. The service will return a pagination token as a part of the\n   *          response. This token can be used to call the API again and get results starting from the\n   *          11th match.</p>\n   */\n  NextToken?: string;\n\n  /**\n   * <p>This is the list of developer user identifiers associated with an identity ID.\n   *          Cognito supports the association of multiple developer user identifiers with an identity\n   *          ID.</p>\n   */\n  DeveloperUserIdentifierList?: string[];\n}\n\nexport namespace LookupDeveloperIdentityResponse {\n  export const filterSensitiveLog = (obj: LookupDeveloperIdentityResponse): any => ({\n    ...obj,\n  });\n  export const isa = (o: any): o is LookupDeveloperIdentityResponse => __isa(o, \"LookupDeveloperIdentityResponse\");\n}\n\n/**\n * <p>A rule that maps a claim name, a claim value, and a match type to a role\n *          ARN.</p>\n */\nexport interface MappingRule {\n  __type?: \"MappingRule\";\n  /**\n   * <p>The claim name that must be present in the token, for example, \"isAdmin\" or\n   *          \"paid\".</p>\n   */\n  Claim: string | undefined;\n\n  /**\n   * <p>The role ARN.</p>\n   */\n  RoleARN: string | undefined;\n\n  /**\n   * <p>The match condition that specifies how closely the claim value in the IdP token must\n   *          match <code>Value</code>.</p>\n   */\n  MatchType: MappingRuleMatchType | string | undefined;\n\n  /**\n   * <p>A brief string that the claim must match, for example, \"paid\" or \"yes\".</p>\n   */\n  Value: string | undefined;\n}\n\nexport namespace MappingRule {\n  export const filterSensitiveLog = (obj: MappingRule): any => ({\n    ...obj,\n  });\n  export const isa = (o: any): o is MappingRule => __isa(o, \"MappingRule\");\n}\n\nexport enum MappingRuleMatchType {\n  CONTAINS = \"Contains\",\n  EQUALS = \"Equals\",\n  NOT_EQUAL = \"NotEqual\",\n  STARTS_WITH = \"StartsWith\",\n}\n\n/**\n * <p>Input to the <code>MergeDeveloperIdentities</code> action.</p>\n */\nexport interface MergeDeveloperIdentitiesInput {\n  __type?: \"MergeDeveloperIdentitiesInput\";\n  /**\n   * <p>User identifier for the destination user. The value should be a\n   *             <code>DeveloperUserIdentifier</code>.</p>\n   */\n  DestinationUserIdentifier: string | undefined;\n\n  /**\n   * <p>The \"domain\" by which Cognito will refer to your users. This is a (pseudo) domain\n   *          name that you provide while creating an identity pool. This name acts as a placeholder that\n   *          allows your backend and the Cognito service to communicate about the developer provider.\n   *          For the <code>DeveloperProviderName</code>, you can use letters as well as period (.),\n   *          underscore (_), and dash (-).</p>\n   */\n  DeveloperProviderName: string | undefined;\n\n  /**\n   * <p>User identifier for the source user. The value should be a\n   *             <code>DeveloperUserIdentifier</code>.</p>\n   */\n  SourceUserIdentifier: string | undefined;\n\n  /**\n   * <p>An identity pool ID in the format REGION:GUID.</p>\n   */\n  IdentityPoolId: string | undefined;\n}\n\nexport namespace MergeDeveloperIdentitiesInput {\n  export const filterSensitiveLog = (obj: MergeDeveloperIdentitiesInput): any => ({\n    ...obj,\n  });\n  export const isa = (o: any): o is MergeDeveloperIdentitiesInput => __isa(o, \"MergeDeveloperIdentitiesInput\");\n}\n\n/**\n * <p>Returned in response to a successful <code>MergeDeveloperIdentities</code>\n *          action.</p>\n */\nexport interface MergeDeveloperIdentitiesResponse {\n  __type?: \"MergeDeveloperIdentitiesResponse\";\n  /**\n   * <p>A unique identifier in the format REGION:GUID.</p>\n   */\n  IdentityId?: string;\n}\n\nexport namespace MergeDeveloperIdentitiesResponse {\n  export const filterSensitiveLog = (obj: MergeDeveloperIdentitiesResponse): any => ({\n    ...obj,\n  });\n  export const isa = (o: any): o is MergeDeveloperIdentitiesResponse => __isa(o, \"MergeDeveloperIdentitiesResponse\");\n}\n\n/**\n * <p>Thrown when a user is not authorized to access the requested resource.</p>\n */\nexport interface NotAuthorizedException extends __SmithyException, $MetadataBearer {\n  name: \"NotAuthorizedException\";\n  $fault: \"client\";\n  /**\n   * <p>The message returned by a NotAuthorizedException</p>\n   */\n  message?: string;\n}\n\nexport namespace NotAuthorizedException {\n  export const filterSensitiveLog = (obj: NotAuthorizedException): any => ({\n    ...obj,\n  });\n  export const isa = (o: any): o is NotAuthorizedException => __isa(o, \"NotAuthorizedException\");\n}\n\n/**\n * <p>Thrown when a user tries to use a login which is already linked to another\n *          account.</p>\n */\nexport interface ResourceConflictException extends __SmithyException, $MetadataBearer {\n  name: \"ResourceConflictException\";\n  $fault: \"client\";\n  /**\n   * <p>The message returned by a ResourceConflictException.</p>\n   */\n  message?: string;\n}\n\nexport namespace ResourceConflictException {\n  export const filterSensitiveLog = (obj: ResourceConflictException): any => ({\n    ...obj,\n  });\n  export const isa = (o: any): o is ResourceConflictException => __isa(o, \"ResourceConflictException\");\n}\n\n/**\n * <p>Thrown when the requested resource (for example, a dataset or record) does not\n *          exist.</p>\n */\nexport interface ResourceNotFoundException extends __SmithyException, $MetadataBearer {\n  name: \"ResourceNotFoundException\";\n  $fault: \"client\";\n  /**\n   * <p>The message returned by a ResourceNotFoundException.</p>\n   */\n  message?: string;\n}\n\nexport namespace ResourceNotFoundException {\n  export const filterSensitiveLog = (obj: ResourceNotFoundException): any => ({\n    ...obj,\n  });\n  export const isa = (o: any): o is ResourceNotFoundException => __isa(o, \"ResourceNotFoundException\");\n}\n\n/**\n * <p>A role mapping.</p>\n */\nexport interface RoleMapping {\n  __type?: \"RoleMapping\";\n  /**\n   * <p>The role mapping type. Token will use <code>cognito:roles</code> and\n   *             <code>cognito:preferred_role</code> claims from the Cognito identity provider token to\n   *          map groups to roles. Rules will attempt to match claims from the token to map to a\n   *          role.</p>\n   */\n  Type: RoleMappingType | string | undefined;\n\n  /**\n   * <p>The rules to be used for mapping users to roles.</p>\n   *          <p>If you specify Rules as the role mapping type, <code>RulesConfiguration</code> is\n   *          required.</p>\n   */\n  RulesConfiguration?: RulesConfigurationType;\n\n  /**\n   * <p>If you specify Token or Rules as the <code>Type</code>,\n   *             <code>AmbiguousRoleResolution</code> is required.</p>\n   *          <p>Specifies the action to be taken if either no rules match the claim value for the\n   *             <code>Rules</code> type, or there is no <code>cognito:preferred_role</code> claim and\n   *          there are multiple <code>cognito:roles</code> matches for the <code>Token</code>\n   *          type.</p>\n   */\n  AmbiguousRoleResolution?: AmbiguousRoleResolutionType | string;\n}\n\nexport namespace RoleMapping {\n  export const filterSensitiveLog = (obj: RoleMapping): any => ({\n    ...obj,\n  });\n  export const isa = (o: any): o is RoleMapping => __isa(o, \"RoleMapping\");\n}\n\nexport enum RoleMappingType {\n  RULES = \"Rules\",\n  TOKEN = \"Token\",\n}\n\n/**\n * <p>A container for rules.</p>\n */\nexport interface RulesConfigurationType {\n  __type?: \"RulesConfigurationType\";\n  /**\n   * <p>An array of rules. You can specify up to 25 rules per identity provider.</p>\n   *          <p>Rules are evaluated in order. The first one to match specifies the role.</p>\n   */\n  Rules: MappingRule[] | undefined;\n}\n\nexport namespace RulesConfigurationType {\n  export const filterSensitiveLog = (obj: RulesConfigurationType): any => ({\n    ...obj,\n  });\n  export const isa = (o: any): o is RulesConfigurationType => __isa(o, \"RulesConfigurationType\");\n}\n\n/**\n * <p>Input to the <code>SetIdentityPoolRoles</code> action.</p>\n */\nexport interface SetIdentityPoolRolesInput {\n  __type?: \"SetIdentityPoolRolesInput\";\n  /**\n   * <p>The map of roles associated with this pool. For a given role, the key will be either\n   *          \"authenticated\" or \"unauthenticated\" and the value will be the Role ARN.</p>\n   */\n  Roles: { [key: string]: string } | undefined;\n\n  /**\n   * <p>An identity pool ID in the format REGION:GUID.</p>\n   */\n  IdentityPoolId: string | undefined;\n\n  /**\n   * <p>How users for a specific identity provider are to mapped to roles. This is a string\n   *          to <a>RoleMapping</a> object map. The string identifies the identity provider,\n   *          for example, \"graph.facebook.com\" or\n   *          \"cognito-idp-east-1.amazonaws.com/us-east-1_abcdefghi:app_client_id\".</p>\n   *          <p>Up to 25 rules can be specified per identity provider.</p>\n   */\n  RoleMappings?: { [key: string]: RoleMapping };\n}\n\nexport namespace SetIdentityPoolRolesInput {\n  export const filterSensitiveLog = (obj: SetIdentityPoolRolesInput): any => ({\n    ...obj,\n  });\n  export const isa = (o: any): o is SetIdentityPoolRolesInput => __isa(o, \"SetIdentityPoolRolesInput\");\n}\n\nexport interface TagResourceInput {\n  __type?: \"TagResourceInput\";\n  /**\n   * <p>The tags to assign to the identity pool.</p>\n   */\n  Tags: { [key: string]: string } | undefined;\n\n  /**\n   * <p>The Amazon Resource Name (ARN) of the identity pool to assign the tags to.</p>\n   */\n  ResourceArn: string | undefined;\n}\n\nexport namespace TagResourceInput {\n  export const filterSensitiveLog = (obj: TagResourceInput): any => ({\n    ...obj,\n  });\n  export const isa = (o: any): o is TagResourceInput => __isa(o, \"TagResourceInput\");\n}\n\nexport interface TagResourceResponse {\n  __type?: \"TagResourceResponse\";\n}\n\nexport namespace TagResourceResponse {\n  export const filterSensitiveLog = (obj: TagResourceResponse): any => ({\n    ...obj,\n  });\n  export const isa = (o: any): o is TagResourceResponse => __isa(o, \"TagResourceResponse\");\n}\n\n/**\n * <p>Thrown when a request is throttled.</p>\n */\nexport interface TooManyRequestsException extends __SmithyException, $MetadataBearer {\n  name: \"TooManyRequestsException\";\n  $fault: \"client\";\n  /**\n   * <p>Message returned by a TooManyRequestsException</p>\n   */\n  message?: string;\n}\n\nexport namespace TooManyRequestsException {\n  export const filterSensitiveLog = (obj: TooManyRequestsException): any => ({\n    ...obj,\n  });\n  export const isa = (o: any): o is TooManyRequestsException => __isa(o, \"TooManyRequestsException\");\n}\n\n/**\n * <p>Input to the <code>UnlinkDeveloperIdentity</code> action.</p>\n */\nexport interface UnlinkDeveloperIdentityInput {\n  __type?: \"UnlinkDeveloperIdentityInput\";\n  /**\n   * <p>An identity pool ID in the format REGION:GUID.</p>\n   */\n  IdentityPoolId: string | undefined;\n\n  /**\n   * <p>A unique identifier in the format REGION:GUID.</p>\n   */\n  IdentityId: string | undefined;\n\n  /**\n   * <p>A unique ID used by your backend authentication process to identify a user.</p>\n   */\n  DeveloperUserIdentifier: string | undefined;\n\n  /**\n   * <p>The \"domain\" by which Cognito will refer to your users.</p>\n   */\n  DeveloperProviderName: string | undefined;\n}\n\nexport namespace UnlinkDeveloperIdentityInput {\n  export const filterSensitiveLog = (obj: UnlinkDeveloperIdentityInput): any => ({\n    ...obj,\n  });\n  export const isa = (o: any): o is UnlinkDeveloperIdentityInput => __isa(o, \"UnlinkDeveloperIdentityInput\");\n}\n\n/**\n * <p>Input to the UnlinkIdentity action.</p>\n */\nexport interface UnlinkIdentityInput {\n  __type?: \"UnlinkIdentityInput\";\n  /**\n   * <p>A set of optional name-value pairs that map provider names to provider\n   *          tokens.</p>\n   */\n  Logins: { [key: string]: string } | undefined;\n\n  /**\n   * <p>A unique identifier in the format REGION:GUID.</p>\n   */\n  IdentityId: string | undefined;\n\n  /**\n   * <p>Provider names to unlink from this identity.</p>\n   */\n  LoginsToRemove: string[] | undefined;\n}\n\nexport namespace UnlinkIdentityInput {\n  export const filterSensitiveLog = (obj: UnlinkIdentityInput): any => ({\n    ...obj,\n  });\n  export const isa = (o: any): o is UnlinkIdentityInput => __isa(o, \"UnlinkIdentityInput\");\n}\n\n/**\n * <p>An array of UnprocessedIdentityId objects, each of which contains an ErrorCode and\n *          IdentityId.</p>\n */\nexport interface UnprocessedIdentityId {\n  __type?: \"UnprocessedIdentityId\";\n  /**\n   * <p>The error code indicating the type of error that occurred.</p>\n   */\n  ErrorCode?: ErrorCode | string;\n\n  /**\n   * <p>A unique identifier in the format REGION:GUID.</p>\n   */\n  IdentityId?: string;\n}\n\nexport namespace UnprocessedIdentityId {\n  export const filterSensitiveLog = (obj: UnprocessedIdentityId): any => ({\n    ...obj,\n  });\n  export const isa = (o: any): o is UnprocessedIdentityId => __isa(o, \"UnprocessedIdentityId\");\n}\n\nexport interface UntagResourceInput {\n  __type?: \"UntagResourceInput\";\n  /**\n   * <p>The keys of the tags to remove from the user pool.</p>\n   */\n  TagKeys: string[] | undefined;\n\n  /**\n   * <p>The Amazon Resource Name (ARN) of the identity pool that the tags are assigned\n   *          to.</p>\n   */\n  ResourceArn: string | undefined;\n}\n\nexport namespace UntagResourceInput {\n  export const filterSensitiveLog = (obj: UntagResourceInput): any => ({\n    ...obj,\n  });\n  export const isa = (o: any): o is UntagResourceInput => __isa(o, \"UntagResourceInput\");\n}\n\nexport interface UntagResourceResponse {\n  __type?: \"UntagResourceResponse\";\n}\n\nexport namespace UntagResourceResponse {\n  export const filterSensitiveLog = (obj: UntagResourceResponse): any => ({\n    ...obj,\n  });\n  export const isa = (o: any): o is UntagResourceResponse => __isa(o, \"UntagResourceResponse\");\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}