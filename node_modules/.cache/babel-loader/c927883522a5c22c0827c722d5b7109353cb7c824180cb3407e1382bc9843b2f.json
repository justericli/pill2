{"ast":null,"code":"import _createForOfIteratorHelper from \"/Users/ericli/Desktop/pill2/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _toConsumableArray from \"/Users/ericli/Desktop/pill2/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _objectSpread from \"/Users/ericli/Desktop/pill2/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nexport var constructStack = function constructStack() {\n  var absoluteEntries = [];\n  var relativeEntries = [];\n  var entriesNameSet = new Set();\n  var sort = function sort(entries) {\n    return entries.sort(function (a, b) {\n      return stepWeights[b.step] - stepWeights[a.step] || priorityWeights[b.priority || \"normal\"] - priorityWeights[a.priority || \"normal\"];\n    });\n  };\n  var removeByName = function removeByName(toRemove) {\n    var isRemoved = false;\n    var filterCb = function filterCb(entry) {\n      if (entry.name && entry.name === toRemove) {\n        isRemoved = true;\n        entriesNameSet.delete(toRemove);\n        return false;\n      }\n      return true;\n    };\n    absoluteEntries = absoluteEntries.filter(filterCb);\n    relativeEntries = relativeEntries.filter(filterCb);\n    return isRemoved;\n  };\n  var removeByReference = function removeByReference(toRemove) {\n    var isRemoved = false;\n    var filterCb = function filterCb(entry) {\n      if (entry.middleware === toRemove) {\n        isRemoved = true;\n        if (entry.name) entriesNameSet.delete(entry.name);\n        return false;\n      }\n      return true;\n    };\n    absoluteEntries = absoluteEntries.filter(filterCb);\n    relativeEntries = relativeEntries.filter(filterCb);\n    return isRemoved;\n  };\n  var cloneTo = function cloneTo(toStack) {\n    absoluteEntries.forEach(function (entry) {\n      toStack.add(entry.middleware, _objectSpread({}, entry));\n    });\n    relativeEntries.forEach(function (entry) {\n      toStack.addRelativeTo(entry.middleware, _objectSpread({}, entry));\n    });\n    return toStack;\n  };\n  var expandRelativeMiddlewareList = function expandRelativeMiddlewareList(from) {\n    var expandedMiddlewareList = [];\n    from.before.forEach(function (entry) {\n      if (entry.before.length === 0 && entry.after.length === 0) {\n        expandedMiddlewareList.push(entry);\n      } else {\n        expandedMiddlewareList.push.apply(expandedMiddlewareList, _toConsumableArray(expandRelativeMiddlewareList(entry)));\n      }\n    });\n    expandedMiddlewareList.push(from);\n    from.after.reverse().forEach(function (entry) {\n      if (entry.before.length === 0 && entry.after.length === 0) {\n        expandedMiddlewareList.push(entry);\n      } else {\n        expandedMiddlewareList.push.apply(expandedMiddlewareList, _toConsumableArray(expandRelativeMiddlewareList(entry)));\n      }\n    });\n    return expandedMiddlewareList;\n  };\n  var getMiddlewareList = function getMiddlewareList() {\n    var debug = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    var normalizedAbsoluteEntries = [];\n    var normalizedRelativeEntries = [];\n    var normalizedEntriesNameMap = {};\n    absoluteEntries.forEach(function (entry) {\n      var normalizedEntry = _objectSpread(_objectSpread({}, entry), {}, {\n        before: [],\n        after: []\n      });\n      if (normalizedEntry.name) normalizedEntriesNameMap[normalizedEntry.name] = normalizedEntry;\n      normalizedAbsoluteEntries.push(normalizedEntry);\n    });\n    relativeEntries.forEach(function (entry) {\n      var normalizedEntry = _objectSpread(_objectSpread({}, entry), {}, {\n        before: [],\n        after: []\n      });\n      if (normalizedEntry.name) normalizedEntriesNameMap[normalizedEntry.name] = normalizedEntry;\n      normalizedRelativeEntries.push(normalizedEntry);\n    });\n    normalizedRelativeEntries.forEach(function (entry) {\n      if (entry.toMiddleware) {\n        var toMiddleware = normalizedEntriesNameMap[entry.toMiddleware];\n        if (toMiddleware === undefined) {\n          if (debug) {\n            return;\n          }\n          throw new Error(\"\".concat(entry.toMiddleware, \" is not found when adding \").concat(entry.name || \"anonymous\", \" middleware \").concat(entry.relation, \" \").concat(entry.toMiddleware));\n        }\n        if (entry.relation === \"after\") {\n          toMiddleware.after.push(entry);\n        }\n        if (entry.relation === \"before\") {\n          toMiddleware.before.push(entry);\n        }\n      }\n    });\n    var mainChain = sort(normalizedAbsoluteEntries).map(expandRelativeMiddlewareList).reduce(function (wholeList, expendedMiddlewareList) {\n      wholeList.push.apply(wholeList, _toConsumableArray(expendedMiddlewareList));\n      return wholeList;\n    }, []);\n    return mainChain;\n  };\n  var stack = {\n    add: function add(middleware) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var name = options.name,\n        override = options.override;\n      var entry = _objectSpread({\n        step: \"initialize\",\n        priority: \"normal\",\n        middleware: middleware\n      }, options);\n      if (name) {\n        if (entriesNameSet.has(name)) {\n          if (!override) throw new Error(\"Duplicate middleware name '\".concat(name, \"'\"));\n          var toOverrideIndex = absoluteEntries.findIndex(function (entry) {\n            return entry.name === name;\n          });\n          var toOverride = absoluteEntries[toOverrideIndex];\n          if (toOverride.step !== entry.step || toOverride.priority !== entry.priority) {\n            throw new Error(\"\\\"\".concat(name, \"\\\" middleware with \").concat(toOverride.priority, \" priority in \").concat(toOverride.step, \" step cannot be \") + \"overridden by same-name middleware with \".concat(entry.priority, \" priority in \").concat(entry.step, \" step.\"));\n          }\n          absoluteEntries.splice(toOverrideIndex, 1);\n        }\n        entriesNameSet.add(name);\n      }\n      absoluteEntries.push(entry);\n    },\n    addRelativeTo: function addRelativeTo(middleware, options) {\n      var name = options.name,\n        override = options.override;\n      var entry = _objectSpread({\n        middleware: middleware\n      }, options);\n      if (name) {\n        if (entriesNameSet.has(name)) {\n          if (!override) throw new Error(\"Duplicate middleware name '\".concat(name, \"'\"));\n          var toOverrideIndex = relativeEntries.findIndex(function (entry) {\n            return entry.name === name;\n          });\n          var toOverride = relativeEntries[toOverrideIndex];\n          if (toOverride.toMiddleware !== entry.toMiddleware || toOverride.relation !== entry.relation) {\n            throw new Error(\"\\\"\".concat(name, \"\\\" middleware \").concat(toOverride.relation, \" \\\"\").concat(toOverride.toMiddleware, \"\\\" middleware cannot be overridden \") + \"by same-name middleware \".concat(entry.relation, \" \\\"\").concat(entry.toMiddleware, \"\\\" middleware.\"));\n          }\n          relativeEntries.splice(toOverrideIndex, 1);\n        }\n        entriesNameSet.add(name);\n      }\n      relativeEntries.push(entry);\n    },\n    clone: function clone() {\n      return cloneTo(constructStack());\n    },\n    use: function use(plugin) {\n      plugin.applyToStack(stack);\n    },\n    remove: function remove(toRemove) {\n      if (typeof toRemove === \"string\") return removeByName(toRemove);else return removeByReference(toRemove);\n    },\n    removeByTag: function removeByTag(toRemove) {\n      var isRemoved = false;\n      var filterCb = function filterCb(entry) {\n        var tags = entry.tags,\n          name = entry.name;\n        if (tags && tags.includes(toRemove)) {\n          if (name) entriesNameSet.delete(name);\n          isRemoved = true;\n          return false;\n        }\n        return true;\n      };\n      absoluteEntries = absoluteEntries.filter(filterCb);\n      relativeEntries = relativeEntries.filter(filterCb);\n      return isRemoved;\n    },\n    concat: function concat(from) {\n      var cloned = cloneTo(constructStack());\n      cloned.use(from);\n      return cloned;\n    },\n    applyToStack: cloneTo,\n    identify: function identify() {\n      return getMiddlewareList(true).map(function (mw) {\n        return mw.name + \": \" + (mw.tags || []).join(\",\");\n      });\n    },\n    resolve: function resolve(handler, context) {\n      var _iterator = _createForOfIteratorHelper(getMiddlewareList().map(function (entry) {\n          return entry.middleware;\n        }).reverse()),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var middleware = _step.value;\n          handler = middleware(handler, context);\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n      return handler;\n    }\n  };\n  return stack;\n};\nvar stepWeights = {\n  initialize: 5,\n  serialize: 4,\n  build: 3,\n  finalizeRequest: 2,\n  deserialize: 1\n};\nvar priorityWeights = {\n  high: 3,\n  normal: 2,\n  low: 1\n};","map":{"version":3,"names":["constructStack","absoluteEntries","relativeEntries","entriesNameSet","Set","sort","entries","a","b","stepWeights","step","priorityWeights","priority","removeByName","toRemove","isRemoved","filterCb","entry","name","delete","filter","removeByReference","middleware","cloneTo","toStack","forEach","add","_objectSpread","addRelativeTo","expandRelativeMiddlewareList","from","expandedMiddlewareList","before","length","after","push","apply","_toConsumableArray","reverse","getMiddlewareList","debug","arguments","undefined","normalizedAbsoluteEntries","normalizedRelativeEntries","normalizedEntriesNameMap","normalizedEntry","toMiddleware","Error","concat","relation","mainChain","map","reduce","wholeList","expendedMiddlewareList","stack","options","override","has","toOverrideIndex","findIndex","toOverride","splice","clone","use","plugin","applyToStack","remove","removeByTag","tags","includes","cloned","identify","mw","join","resolve","handler","context","_iterator","_createForOfIteratorHelper","_step","s","n","done","value","err","e","f","initialize","serialize","build","finalizeRequest","deserialize","high","normal","low"],"sources":["/Users/ericli/Desktop/pill2/node_modules/@aws-sdk/client-s3/node_modules/@aws-sdk/middleware-stack/dist-es/MiddlewareStack.js"],"sourcesContent":["export const constructStack = () => {\n    let absoluteEntries = [];\n    let relativeEntries = [];\n    const entriesNameSet = new Set();\n    const sort = (entries) => entries.sort((a, b) => stepWeights[b.step] - stepWeights[a.step] ||\n        priorityWeights[b.priority || \"normal\"] - priorityWeights[a.priority || \"normal\"]);\n    const removeByName = (toRemove) => {\n        let isRemoved = false;\n        const filterCb = (entry) => {\n            if (entry.name && entry.name === toRemove) {\n                isRemoved = true;\n                entriesNameSet.delete(toRemove);\n                return false;\n            }\n            return true;\n        };\n        absoluteEntries = absoluteEntries.filter(filterCb);\n        relativeEntries = relativeEntries.filter(filterCb);\n        return isRemoved;\n    };\n    const removeByReference = (toRemove) => {\n        let isRemoved = false;\n        const filterCb = (entry) => {\n            if (entry.middleware === toRemove) {\n                isRemoved = true;\n                if (entry.name)\n                    entriesNameSet.delete(entry.name);\n                return false;\n            }\n            return true;\n        };\n        absoluteEntries = absoluteEntries.filter(filterCb);\n        relativeEntries = relativeEntries.filter(filterCb);\n        return isRemoved;\n    };\n    const cloneTo = (toStack) => {\n        absoluteEntries.forEach((entry) => {\n            toStack.add(entry.middleware, { ...entry });\n        });\n        relativeEntries.forEach((entry) => {\n            toStack.addRelativeTo(entry.middleware, { ...entry });\n        });\n        return toStack;\n    };\n    const expandRelativeMiddlewareList = (from) => {\n        const expandedMiddlewareList = [];\n        from.before.forEach((entry) => {\n            if (entry.before.length === 0 && entry.after.length === 0) {\n                expandedMiddlewareList.push(entry);\n            }\n            else {\n                expandedMiddlewareList.push(...expandRelativeMiddlewareList(entry));\n            }\n        });\n        expandedMiddlewareList.push(from);\n        from.after.reverse().forEach((entry) => {\n            if (entry.before.length === 0 && entry.after.length === 0) {\n                expandedMiddlewareList.push(entry);\n            }\n            else {\n                expandedMiddlewareList.push(...expandRelativeMiddlewareList(entry));\n            }\n        });\n        return expandedMiddlewareList;\n    };\n    const getMiddlewareList = (debug = false) => {\n        const normalizedAbsoluteEntries = [];\n        const normalizedRelativeEntries = [];\n        const normalizedEntriesNameMap = {};\n        absoluteEntries.forEach((entry) => {\n            const normalizedEntry = {\n                ...entry,\n                before: [],\n                after: [],\n            };\n            if (normalizedEntry.name)\n                normalizedEntriesNameMap[normalizedEntry.name] = normalizedEntry;\n            normalizedAbsoluteEntries.push(normalizedEntry);\n        });\n        relativeEntries.forEach((entry) => {\n            const normalizedEntry = {\n                ...entry,\n                before: [],\n                after: [],\n            };\n            if (normalizedEntry.name)\n                normalizedEntriesNameMap[normalizedEntry.name] = normalizedEntry;\n            normalizedRelativeEntries.push(normalizedEntry);\n        });\n        normalizedRelativeEntries.forEach((entry) => {\n            if (entry.toMiddleware) {\n                const toMiddleware = normalizedEntriesNameMap[entry.toMiddleware];\n                if (toMiddleware === undefined) {\n                    if (debug) {\n                        return;\n                    }\n                    throw new Error(`${entry.toMiddleware} is not found when adding ${entry.name || \"anonymous\"} middleware ${entry.relation} ${entry.toMiddleware}`);\n                }\n                if (entry.relation === \"after\") {\n                    toMiddleware.after.push(entry);\n                }\n                if (entry.relation === \"before\") {\n                    toMiddleware.before.push(entry);\n                }\n            }\n        });\n        const mainChain = sort(normalizedAbsoluteEntries)\n            .map(expandRelativeMiddlewareList)\n            .reduce((wholeList, expendedMiddlewareList) => {\n            wholeList.push(...expendedMiddlewareList);\n            return wholeList;\n        }, []);\n        return mainChain;\n    };\n    const stack = {\n        add: (middleware, options = {}) => {\n            const { name, override } = options;\n            const entry = {\n                step: \"initialize\",\n                priority: \"normal\",\n                middleware,\n                ...options,\n            };\n            if (name) {\n                if (entriesNameSet.has(name)) {\n                    if (!override)\n                        throw new Error(`Duplicate middleware name '${name}'`);\n                    const toOverrideIndex = absoluteEntries.findIndex((entry) => entry.name === name);\n                    const toOverride = absoluteEntries[toOverrideIndex];\n                    if (toOverride.step !== entry.step || toOverride.priority !== entry.priority) {\n                        throw new Error(`\"${name}\" middleware with ${toOverride.priority} priority in ${toOverride.step} step cannot be ` +\n                            `overridden by same-name middleware with ${entry.priority} priority in ${entry.step} step.`);\n                    }\n                    absoluteEntries.splice(toOverrideIndex, 1);\n                }\n                entriesNameSet.add(name);\n            }\n            absoluteEntries.push(entry);\n        },\n        addRelativeTo: (middleware, options) => {\n            const { name, override } = options;\n            const entry = {\n                middleware,\n                ...options,\n            };\n            if (name) {\n                if (entriesNameSet.has(name)) {\n                    if (!override)\n                        throw new Error(`Duplicate middleware name '${name}'`);\n                    const toOverrideIndex = relativeEntries.findIndex((entry) => entry.name === name);\n                    const toOverride = relativeEntries[toOverrideIndex];\n                    if (toOverride.toMiddleware !== entry.toMiddleware || toOverride.relation !== entry.relation) {\n                        throw new Error(`\"${name}\" middleware ${toOverride.relation} \"${toOverride.toMiddleware}\" middleware cannot be overridden ` +\n                            `by same-name middleware ${entry.relation} \"${entry.toMiddleware}\" middleware.`);\n                    }\n                    relativeEntries.splice(toOverrideIndex, 1);\n                }\n                entriesNameSet.add(name);\n            }\n            relativeEntries.push(entry);\n        },\n        clone: () => cloneTo(constructStack()),\n        use: (plugin) => {\n            plugin.applyToStack(stack);\n        },\n        remove: (toRemove) => {\n            if (typeof toRemove === \"string\")\n                return removeByName(toRemove);\n            else\n                return removeByReference(toRemove);\n        },\n        removeByTag: (toRemove) => {\n            let isRemoved = false;\n            const filterCb = (entry) => {\n                const { tags, name } = entry;\n                if (tags && tags.includes(toRemove)) {\n                    if (name)\n                        entriesNameSet.delete(name);\n                    isRemoved = true;\n                    return false;\n                }\n                return true;\n            };\n            absoluteEntries = absoluteEntries.filter(filterCb);\n            relativeEntries = relativeEntries.filter(filterCb);\n            return isRemoved;\n        },\n        concat: (from) => {\n            const cloned = cloneTo(constructStack());\n            cloned.use(from);\n            return cloned;\n        },\n        applyToStack: cloneTo,\n        identify: () => {\n            return getMiddlewareList(true).map((mw) => {\n                return mw.name + \": \" + (mw.tags || []).join(\",\");\n            });\n        },\n        resolve: (handler, context) => {\n            for (const middleware of getMiddlewareList()\n                .map((entry) => entry.middleware)\n                .reverse()) {\n                handler = middleware(handler, context);\n            }\n            return handler;\n        },\n    };\n    return stack;\n};\nconst stepWeights = {\n    initialize: 5,\n    serialize: 4,\n    build: 3,\n    finalizeRequest: 2,\n    deserialize: 1,\n};\nconst priorityWeights = {\n    high: 3,\n    normal: 2,\n    low: 1,\n};\n"],"mappings":";;;AAAA,OAAO,IAAMA,cAAc,GAAG,SAAjBA,cAAcA,CAAA,EAAS;EAChC,IAAIC,eAAe,GAAG,EAAE;EACxB,IAAIC,eAAe,GAAG,EAAE;EACxB,IAAMC,cAAc,GAAG,IAAIC,GAAG,EAAE;EAChC,IAAMC,IAAI,GAAG,SAAPA,IAAIA,CAAIC,OAAO;IAAA,OAAKA,OAAO,CAACD,IAAI,CAAC,UAACE,CAAC,EAAEC,CAAC;MAAA,OAAKC,WAAW,CAACD,CAAC,CAACE,IAAI,CAAC,GAAGD,WAAW,CAACF,CAAC,CAACG,IAAI,CAAC,IACtFC,eAAe,CAACH,CAAC,CAACI,QAAQ,IAAI,QAAQ,CAAC,GAAGD,eAAe,CAACJ,CAAC,CAACK,QAAQ,IAAI,QAAQ,CAAC;IAAA,EAAC;EAAA;EACtF,IAAMC,YAAY,GAAG,SAAfA,YAAYA,CAAIC,QAAQ,EAAK;IAC/B,IAAIC,SAAS,GAAG,KAAK;IACrB,IAAMC,QAAQ,GAAG,SAAXA,QAAQA,CAAIC,KAAK,EAAK;MACxB,IAAIA,KAAK,CAACC,IAAI,IAAID,KAAK,CAACC,IAAI,KAAKJ,QAAQ,EAAE;QACvCC,SAAS,GAAG,IAAI;QAChBZ,cAAc,CAACgB,MAAM,CAACL,QAAQ,CAAC;QAC/B,OAAO,KAAK;MAChB;MACA,OAAO,IAAI;IACf,CAAC;IACDb,eAAe,GAAGA,eAAe,CAACmB,MAAM,CAACJ,QAAQ,CAAC;IAClDd,eAAe,GAAGA,eAAe,CAACkB,MAAM,CAACJ,QAAQ,CAAC;IAClD,OAAOD,SAAS;EACpB,CAAC;EACD,IAAMM,iBAAiB,GAAG,SAApBA,iBAAiBA,CAAIP,QAAQ,EAAK;IACpC,IAAIC,SAAS,GAAG,KAAK;IACrB,IAAMC,QAAQ,GAAG,SAAXA,QAAQA,CAAIC,KAAK,EAAK;MACxB,IAAIA,KAAK,CAACK,UAAU,KAAKR,QAAQ,EAAE;QAC/BC,SAAS,GAAG,IAAI;QAChB,IAAIE,KAAK,CAACC,IAAI,EACVf,cAAc,CAACgB,MAAM,CAACF,KAAK,CAACC,IAAI,CAAC;QACrC,OAAO,KAAK;MAChB;MACA,OAAO,IAAI;IACf,CAAC;IACDjB,eAAe,GAAGA,eAAe,CAACmB,MAAM,CAACJ,QAAQ,CAAC;IAClDd,eAAe,GAAGA,eAAe,CAACkB,MAAM,CAACJ,QAAQ,CAAC;IAClD,OAAOD,SAAS;EACpB,CAAC;EACD,IAAMQ,OAAO,GAAG,SAAVA,OAAOA,CAAIC,OAAO,EAAK;IACzBvB,eAAe,CAACwB,OAAO,CAAC,UAACR,KAAK,EAAK;MAC/BO,OAAO,CAACE,GAAG,CAACT,KAAK,CAACK,UAAU,EAAAK,aAAA,KAAOV,KAAK,EAAG;IAC/C,CAAC,CAAC;IACFf,eAAe,CAACuB,OAAO,CAAC,UAACR,KAAK,EAAK;MAC/BO,OAAO,CAACI,aAAa,CAACX,KAAK,CAACK,UAAU,EAAAK,aAAA,KAAOV,KAAK,EAAG;IACzD,CAAC,CAAC;IACF,OAAOO,OAAO;EAClB,CAAC;EACD,IAAMK,4BAA4B,GAAG,SAA/BA,4BAA4BA,CAAIC,IAAI,EAAK;IAC3C,IAAMC,sBAAsB,GAAG,EAAE;IACjCD,IAAI,CAACE,MAAM,CAACP,OAAO,CAAC,UAACR,KAAK,EAAK;MAC3B,IAAIA,KAAK,CAACe,MAAM,CAACC,MAAM,KAAK,CAAC,IAAIhB,KAAK,CAACiB,KAAK,CAACD,MAAM,KAAK,CAAC,EAAE;QACvDF,sBAAsB,CAACI,IAAI,CAAClB,KAAK,CAAC;MACtC,CAAC,MACI;QACDc,sBAAsB,CAACI,IAAI,CAAAC,KAAA,CAA3BL,sBAAsB,EAAAM,kBAAA,CAASR,4BAA4B,CAACZ,KAAK,CAAC,EAAC;MACvE;IACJ,CAAC,CAAC;IACFc,sBAAsB,CAACI,IAAI,CAACL,IAAI,CAAC;IACjCA,IAAI,CAACI,KAAK,CAACI,OAAO,EAAE,CAACb,OAAO,CAAC,UAACR,KAAK,EAAK;MACpC,IAAIA,KAAK,CAACe,MAAM,CAACC,MAAM,KAAK,CAAC,IAAIhB,KAAK,CAACiB,KAAK,CAACD,MAAM,KAAK,CAAC,EAAE;QACvDF,sBAAsB,CAACI,IAAI,CAAClB,KAAK,CAAC;MACtC,CAAC,MACI;QACDc,sBAAsB,CAACI,IAAI,CAAAC,KAAA,CAA3BL,sBAAsB,EAAAM,kBAAA,CAASR,4BAA4B,CAACZ,KAAK,CAAC,EAAC;MACvE;IACJ,CAAC,CAAC;IACF,OAAOc,sBAAsB;EACjC,CAAC;EACD,IAAMQ,iBAAiB,GAAG,SAApBA,iBAAiBA,CAAA,EAAsB;IAAA,IAAlBC,KAAK,GAAAC,SAAA,CAAAR,MAAA,QAAAQ,SAAA,QAAAC,SAAA,GAAAD,SAAA,MAAG,KAAK;IACpC,IAAME,yBAAyB,GAAG,EAAE;IACpC,IAAMC,yBAAyB,GAAG,EAAE;IACpC,IAAMC,wBAAwB,GAAG,CAAC,CAAC;IACnC5C,eAAe,CAACwB,OAAO,CAAC,UAACR,KAAK,EAAK;MAC/B,IAAM6B,eAAe,GAAAnB,aAAA,CAAAA,aAAA,KACdV,KAAK;QACRe,MAAM,EAAE,EAAE;QACVE,KAAK,EAAE;MAAE,EACZ;MACD,IAAIY,eAAe,CAAC5B,IAAI,EACpB2B,wBAAwB,CAACC,eAAe,CAAC5B,IAAI,CAAC,GAAG4B,eAAe;MACpEH,yBAAyB,CAACR,IAAI,CAACW,eAAe,CAAC;IACnD,CAAC,CAAC;IACF5C,eAAe,CAACuB,OAAO,CAAC,UAACR,KAAK,EAAK;MAC/B,IAAM6B,eAAe,GAAAnB,aAAA,CAAAA,aAAA,KACdV,KAAK;QACRe,MAAM,EAAE,EAAE;QACVE,KAAK,EAAE;MAAE,EACZ;MACD,IAAIY,eAAe,CAAC5B,IAAI,EACpB2B,wBAAwB,CAACC,eAAe,CAAC5B,IAAI,CAAC,GAAG4B,eAAe;MACpEF,yBAAyB,CAACT,IAAI,CAACW,eAAe,CAAC;IACnD,CAAC,CAAC;IACFF,yBAAyB,CAACnB,OAAO,CAAC,UAACR,KAAK,EAAK;MACzC,IAAIA,KAAK,CAAC8B,YAAY,EAAE;QACpB,IAAMA,YAAY,GAAGF,wBAAwB,CAAC5B,KAAK,CAAC8B,YAAY,CAAC;QACjE,IAAIA,YAAY,KAAKL,SAAS,EAAE;UAC5B,IAAIF,KAAK,EAAE;YACP;UACJ;UACA,MAAM,IAAIQ,KAAK,IAAAC,MAAA,CAAIhC,KAAK,CAAC8B,YAAY,gCAAAE,MAAA,CAA6BhC,KAAK,CAACC,IAAI,IAAI,WAAW,kBAAA+B,MAAA,CAAehC,KAAK,CAACiC,QAAQ,OAAAD,MAAA,CAAIhC,KAAK,CAAC8B,YAAY,EAAG;QACrJ;QACA,IAAI9B,KAAK,CAACiC,QAAQ,KAAK,OAAO,EAAE;UAC5BH,YAAY,CAACb,KAAK,CAACC,IAAI,CAAClB,KAAK,CAAC;QAClC;QACA,IAAIA,KAAK,CAACiC,QAAQ,KAAK,QAAQ,EAAE;UAC7BH,YAAY,CAACf,MAAM,CAACG,IAAI,CAAClB,KAAK,CAAC;QACnC;MACJ;IACJ,CAAC,CAAC;IACF,IAAMkC,SAAS,GAAG9C,IAAI,CAACsC,yBAAyB,CAAC,CAC5CS,GAAG,CAACvB,4BAA4B,CAAC,CACjCwB,MAAM,CAAC,UAACC,SAAS,EAAEC,sBAAsB,EAAK;MAC/CD,SAAS,CAACnB,IAAI,CAAAC,KAAA,CAAdkB,SAAS,EAAAjB,kBAAA,CAASkB,sBAAsB,EAAC;MACzC,OAAOD,SAAS;IACpB,CAAC,EAAE,EAAE,CAAC;IACN,OAAOH,SAAS;EACpB,CAAC;EACD,IAAMK,KAAK,GAAG;IACV9B,GAAG,EAAE,SAAAA,IAACJ,UAAU,EAAmB;MAAA,IAAjBmC,OAAO,GAAAhB,SAAA,CAAAR,MAAA,QAAAQ,SAAA,QAAAC,SAAA,GAAAD,SAAA,MAAG,CAAC,CAAC;MAC1B,IAAQvB,IAAI,GAAeuC,OAAO,CAA1BvC,IAAI;QAAEwC,QAAQ,GAAKD,OAAO,CAApBC,QAAQ;MACtB,IAAMzC,KAAK,GAAAU,aAAA;QACPjB,IAAI,EAAE,YAAY;QAClBE,QAAQ,EAAE,QAAQ;QAClBU,UAAU,EAAVA;MAAU,GACPmC,OAAO,CACb;MACD,IAAIvC,IAAI,EAAE;QACN,IAAIf,cAAc,CAACwD,GAAG,CAACzC,IAAI,CAAC,EAAE;UAC1B,IAAI,CAACwC,QAAQ,EACT,MAAM,IAAIV,KAAK,+BAAAC,MAAA,CAA+B/B,IAAI,OAAI;UAC1D,IAAM0C,eAAe,GAAG3D,eAAe,CAAC4D,SAAS,CAAC,UAAC5C,KAAK;YAAA,OAAKA,KAAK,CAACC,IAAI,KAAKA,IAAI;UAAA,EAAC;UACjF,IAAM4C,UAAU,GAAG7D,eAAe,CAAC2D,eAAe,CAAC;UACnD,IAAIE,UAAU,CAACpD,IAAI,KAAKO,KAAK,CAACP,IAAI,IAAIoD,UAAU,CAAClD,QAAQ,KAAKK,KAAK,CAACL,QAAQ,EAAE;YAC1E,MAAM,IAAIoC,KAAK,CAAC,KAAAC,MAAA,CAAI/B,IAAI,yBAAA+B,MAAA,CAAqBa,UAAU,CAAClD,QAAQ,mBAAAqC,MAAA,CAAgBa,UAAU,CAACpD,IAAI,mEAAAuC,MAAA,CAChDhC,KAAK,CAACL,QAAQ,mBAAAqC,MAAA,CAAgBhC,KAAK,CAACP,IAAI,WAAQ,CAAC;UACpG;UACAT,eAAe,CAAC8D,MAAM,CAACH,eAAe,EAAE,CAAC,CAAC;QAC9C;QACAzD,cAAc,CAACuB,GAAG,CAACR,IAAI,CAAC;MAC5B;MACAjB,eAAe,CAACkC,IAAI,CAAClB,KAAK,CAAC;IAC/B,CAAC;IACDW,aAAa,EAAE,SAAAA,cAACN,UAAU,EAAEmC,OAAO,EAAK;MACpC,IAAQvC,IAAI,GAAeuC,OAAO,CAA1BvC,IAAI;QAAEwC,QAAQ,GAAKD,OAAO,CAApBC,QAAQ;MACtB,IAAMzC,KAAK,GAAAU,aAAA;QACPL,UAAU,EAAVA;MAAU,GACPmC,OAAO,CACb;MACD,IAAIvC,IAAI,EAAE;QACN,IAAIf,cAAc,CAACwD,GAAG,CAACzC,IAAI,CAAC,EAAE;UAC1B,IAAI,CAACwC,QAAQ,EACT,MAAM,IAAIV,KAAK,+BAAAC,MAAA,CAA+B/B,IAAI,OAAI;UAC1D,IAAM0C,eAAe,GAAG1D,eAAe,CAAC2D,SAAS,CAAC,UAAC5C,KAAK;YAAA,OAAKA,KAAK,CAACC,IAAI,KAAKA,IAAI;UAAA,EAAC;UACjF,IAAM4C,UAAU,GAAG5D,eAAe,CAAC0D,eAAe,CAAC;UACnD,IAAIE,UAAU,CAACf,YAAY,KAAK9B,KAAK,CAAC8B,YAAY,IAAIe,UAAU,CAACZ,QAAQ,KAAKjC,KAAK,CAACiC,QAAQ,EAAE;YAC1F,MAAM,IAAIF,KAAK,CAAC,KAAAC,MAAA,CAAI/B,IAAI,oBAAA+B,MAAA,CAAgBa,UAAU,CAACZ,QAAQ,SAAAD,MAAA,CAAKa,UAAU,CAACf,YAAY,sEAAAE,MAAA,CACxDhC,KAAK,CAACiC,QAAQ,SAAAD,MAAA,CAAKhC,KAAK,CAAC8B,YAAY,mBAAe,CAAC;UACxF;UACA7C,eAAe,CAAC6D,MAAM,CAACH,eAAe,EAAE,CAAC,CAAC;QAC9C;QACAzD,cAAc,CAACuB,GAAG,CAACR,IAAI,CAAC;MAC5B;MACAhB,eAAe,CAACiC,IAAI,CAAClB,KAAK,CAAC;IAC/B,CAAC;IACD+C,KAAK,EAAE,SAAAA,MAAA;MAAA,OAAMzC,OAAO,CAACvB,cAAc,EAAE,CAAC;IAAA;IACtCiE,GAAG,EAAE,SAAAA,IAACC,MAAM,EAAK;MACbA,MAAM,CAACC,YAAY,CAACX,KAAK,CAAC;IAC9B,CAAC;IACDY,MAAM,EAAE,SAAAA,OAACtD,QAAQ,EAAK;MAClB,IAAI,OAAOA,QAAQ,KAAK,QAAQ,EAC5B,OAAOD,YAAY,CAACC,QAAQ,CAAC,CAAC,KAE9B,OAAOO,iBAAiB,CAACP,QAAQ,CAAC;IAC1C,CAAC;IACDuD,WAAW,EAAE,SAAAA,YAACvD,QAAQ,EAAK;MACvB,IAAIC,SAAS,GAAG,KAAK;MACrB,IAAMC,QAAQ,GAAG,SAAXA,QAAQA,CAAIC,KAAK,EAAK;QACxB,IAAQqD,IAAI,GAAWrD,KAAK,CAApBqD,IAAI;UAAEpD,IAAI,GAAKD,KAAK,CAAdC,IAAI;QAClB,IAAIoD,IAAI,IAAIA,IAAI,CAACC,QAAQ,CAACzD,QAAQ,CAAC,EAAE;UACjC,IAAII,IAAI,EACJf,cAAc,CAACgB,MAAM,CAACD,IAAI,CAAC;UAC/BH,SAAS,GAAG,IAAI;UAChB,OAAO,KAAK;QAChB;QACA,OAAO,IAAI;MACf,CAAC;MACDd,eAAe,GAAGA,eAAe,CAACmB,MAAM,CAACJ,QAAQ,CAAC;MAClDd,eAAe,GAAGA,eAAe,CAACkB,MAAM,CAACJ,QAAQ,CAAC;MAClD,OAAOD,SAAS;IACpB,CAAC;IACDkC,MAAM,EAAE,SAAAA,OAACnB,IAAI,EAAK;MACd,IAAM0C,MAAM,GAAGjD,OAAO,CAACvB,cAAc,EAAE,CAAC;MACxCwE,MAAM,CAACP,GAAG,CAACnC,IAAI,CAAC;MAChB,OAAO0C,MAAM;IACjB,CAAC;IACDL,YAAY,EAAE5C,OAAO;IACrBkD,QAAQ,EAAE,SAAAA,SAAA,EAAM;MACZ,OAAOlC,iBAAiB,CAAC,IAAI,CAAC,CAACa,GAAG,CAAC,UAACsB,EAAE,EAAK;QACvC,OAAOA,EAAE,CAACxD,IAAI,GAAG,IAAI,GAAG,CAACwD,EAAE,CAACJ,IAAI,IAAI,EAAE,EAAEK,IAAI,CAAC,GAAG,CAAC;MACrD,CAAC,CAAC;IACN,CAAC;IACDC,OAAO,EAAE,SAAAA,QAACC,OAAO,EAAEC,OAAO,EAAK;MAAA,IAAAC,SAAA,GAAAC,0BAAA,CACFzC,iBAAiB,EAAE,CACvCa,GAAG,CAAC,UAACnC,KAAK;UAAA,OAAKA,KAAK,CAACK,UAAU;QAAA,EAAC,CAChCgB,OAAO,EAAE;QAAA2C,KAAA;MAAA;QAFd,KAAAF,SAAA,CAAAG,CAAA,MAAAD,KAAA,GAAAF,SAAA,CAAAI,CAAA,IAAAC,IAAA,GAEgB;UAAA,IAFL9D,UAAU,GAAA2D,KAAA,CAAAI,KAAA;UAGjBR,OAAO,GAAGvD,UAAU,CAACuD,OAAO,EAAEC,OAAO,CAAC;QAC1C;MAAC,SAAAQ,GAAA;QAAAP,SAAA,CAAAQ,CAAA,CAAAD,GAAA;MAAA;QAAAP,SAAA,CAAAS,CAAA;MAAA;MACD,OAAOX,OAAO;IAClB;EACJ,CAAC;EACD,OAAOrB,KAAK;AAChB,CAAC;AACD,IAAM/C,WAAW,GAAG;EAChBgF,UAAU,EAAE,CAAC;EACbC,SAAS,EAAE,CAAC;EACZC,KAAK,EAAE,CAAC;EACRC,eAAe,EAAE,CAAC;EAClBC,WAAW,EAAE;AACjB,CAAC;AACD,IAAMlF,eAAe,GAAG;EACpBmF,IAAI,EAAE,CAAC;EACPC,MAAM,EAAE,CAAC;EACTC,GAAG,EAAE;AACT,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}