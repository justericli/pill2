{"ast":null,"code":"var _jsxFileName = \"/Users/ericli/Desktop/pill2/src/components/User_Account.jsx\";\nimport React, { createContext } from \"react\";\nimport { CognitoUser, AuthenticationDetails } from \"amazon-cognito-identity-js\";\nimport UserPool from \"../User_Userpool.jsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AccountContext = /*#__PURE__*/createContext();\nconst User_Account = props => {\n  const getSession = async () => {\n    return await new Promise((resolve, reject) => {\n      const user = UserPool.getCurrentUser();\n      if (user) {\n        user.getSession((err, session) => {\n          if (err) {\n            reject();\n          } else {\n            resolve(session);\n          }\n        });\n      } else {\n        reject();\n      }\n    });\n  };\n  const authenticate = async (Username, Password) => {\n    return await new Promise((resolve, reject) => {\n      const user = new CognitoUser({\n        Username,\n        Pool: UserPool\n      });\n      const authDetails = new AuthenticationDetails({\n        Username,\n        Password\n      });\n      user.authenticateUser(authDetails, {\n        onSuccess: data => {\n          console.log(\"onSuccess: \", data);\n          resolve(data);\n        },\n        onFailure: err => {\n          console.error(\"onFailure: \", err);\n          resolve(err);\n        },\n        newPasswordRequired: data => {\n          console.log(\"newPasswordRequired: \", data);\n          resolve(data);\n        }\n      });\n    });\n  };\n  const logout = () => {\n    const user = UserPool.getCurrentUser();\n    if (user) {\n      user.signOut();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(AccountContext.Provider, {\n    value: {\n      authenticate,\n      getSession,\n      logout\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_c = User_Account;\nexport default User_Account;\nexport { AccountContext };\nvar _c;\n$RefreshReg$(_c, \"User_Account\");","map":{"version":3,"names":["React","createContext","CognitoUser","AuthenticationDetails","UserPool","jsxDEV","_jsxDEV","AccountContext","User_Account","props","getSession","Promise","resolve","reject","user","getCurrentUser","err","session","authenticate","Username","Password","Pool","authDetails","authenticateUser","onSuccess","data","console","log","onFailure","error","newPasswordRequired","logout","signOut","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ericli/Desktop/pill2/src/components/User_Account.jsx"],"sourcesContent":["import React, { createContext } from \"react\";\nimport { CognitoUser, AuthenticationDetails } from \"amazon-cognito-identity-js\";\nimport UserPool from \"../User_Userpool.jsx\";\n\nconst AccountContext = createContext();\n\nconst User_Account = (props) => {\n  const getSession = async () => {\n    return await new Promise((resolve, reject) => {\n      const user = UserPool.getCurrentUser();\n      if (user) {\n        user.getSession((err, session) => {\n          if (err) {\n            reject();\n          } else {\n            resolve(session);\n          }\n        });\n      } else {\n        reject();\n      }\n    });\n  };\n  const authenticate = async (Username, Password) => {\n    return await new Promise((resolve, reject) => {\n      const user = new CognitoUser({\n        Username,\n        Pool: UserPool,\n      });\n\n      const authDetails = new AuthenticationDetails({\n        Username,\n        Password,\n      });\n\n      user.authenticateUser(authDetails, {\n        onSuccess: (data) => {\n          console.log(\"onSuccess: \", data);\n          resolve(data);\n        },\n        onFailure: (err) => {\n          console.error(\"onFailure: \", err);\n          resolve(err);\n        },\n        newPasswordRequired: (data) => {\n          console.log(\"newPasswordRequired: \", data);\n          resolve(data);\n        },\n      });\n    });\n  };\n\n  const logout = () => {\n    const user = UserPool.getCurrentUser();\n    if (user) {\n      user.signOut();\n    }\n  };\n  return (\n    <AccountContext.Provider value={{ authenticate, getSession, logout }}>\n      {props.children}\n    </AccountContext.Provider>\n  );\n};\n\nexport default User_Account;\nexport { AccountContext };\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,aAAa,QAAQ,OAAO;AAC5C,SAASC,WAAW,EAAEC,qBAAqB,QAAQ,4BAA4B;AAC/E,OAAOC,QAAQ,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,cAAc,gBAAGN,aAAa,EAAE;AAEtC,MAAMO,YAAY,GAAIC,KAAK,IAAK;EAC9B,MAAMC,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,OAAO,MAAM,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;MAC5C,MAAMC,IAAI,GAAGV,QAAQ,CAACW,cAAc,EAAE;MACtC,IAAID,IAAI,EAAE;QACRA,IAAI,CAACJ,UAAU,CAAC,CAACM,GAAG,EAAEC,OAAO,KAAK;UAChC,IAAID,GAAG,EAAE;YACPH,MAAM,EAAE;UACV,CAAC,MAAM;YACLD,OAAO,CAACK,OAAO,CAAC;UAClB;QACF,CAAC,CAAC;MACJ,CAAC,MAAM;QACLJ,MAAM,EAAE;MACV;IACF,CAAC,CAAC;EACJ,CAAC;EACD,MAAMK,YAAY,GAAG,MAAAA,CAAOC,QAAQ,EAAEC,QAAQ,KAAK;IACjD,OAAO,MAAM,IAAIT,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;MAC5C,MAAMC,IAAI,GAAG,IAAIZ,WAAW,CAAC;QAC3BiB,QAAQ;QACRE,IAAI,EAAEjB;MACR,CAAC,CAAC;MAEF,MAAMkB,WAAW,GAAG,IAAInB,qBAAqB,CAAC;QAC5CgB,QAAQ;QACRC;MACF,CAAC,CAAC;MAEFN,IAAI,CAACS,gBAAgB,CAACD,WAAW,EAAE;QACjCE,SAAS,EAAGC,IAAI,IAAK;UACnBC,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEF,IAAI,CAAC;UAChCb,OAAO,CAACa,IAAI,CAAC;QACf,CAAC;QACDG,SAAS,EAAGZ,GAAG,IAAK;UAClBU,OAAO,CAACG,KAAK,CAAC,aAAa,EAAEb,GAAG,CAAC;UACjCJ,OAAO,CAACI,GAAG,CAAC;QACd,CAAC;QACDc,mBAAmB,EAAGL,IAAI,IAAK;UAC7BC,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEF,IAAI,CAAC;UAC1Cb,OAAO,CAACa,IAAI,CAAC;QACf;MACF,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ,CAAC;EAED,MAAMM,MAAM,GAAGA,CAAA,KAAM;IACnB,MAAMjB,IAAI,GAAGV,QAAQ,CAACW,cAAc,EAAE;IACtC,IAAID,IAAI,EAAE;MACRA,IAAI,CAACkB,OAAO,EAAE;IAChB;EACF,CAAC;EACD,oBACE1B,OAAA,CAACC,cAAc,CAAC0B,QAAQ;IAACC,KAAK,EAAE;MAAEhB,YAAY;MAAER,UAAU;MAAEqB;IAAO,CAAE;IAAAI,QAAA,EAClE1B,KAAK,CAAC0B;EAAQ;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACS;AAE9B,CAAC;AAACC,EAAA,GAzDIhC,YAAY;AA2DlB,eAAeA,YAAY;AAC3B,SAASD,cAAc;AAAG,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}