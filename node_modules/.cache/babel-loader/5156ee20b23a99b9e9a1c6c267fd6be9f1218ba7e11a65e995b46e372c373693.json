{"ast":null,"code":"import _createForOfIteratorHelper from \"/Users/ericli/Desktop/pill2/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport { ALWAYS_UNSIGNABLE_HEADERS, PROXY_HEADER_PATTERN, SEC_HEADER_PATTERN } from \"./constants\";\nexport var getCanonicalHeaders = function getCanonicalHeaders(_ref, unsignableHeaders, signableHeaders) {\n  var headers = _ref.headers;\n  var canonical = {};\n  var _iterator = _createForOfIteratorHelper(Object.keys(headers).sort()),\n    _step;\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var headerName = _step.value;\n      if (headers[headerName] == undefined) {\n        continue;\n      }\n      var canonicalHeaderName = headerName.toLowerCase();\n      if (canonicalHeaderName in ALWAYS_UNSIGNABLE_HEADERS || unsignableHeaders !== null && unsignableHeaders !== void 0 && unsignableHeaders.has(canonicalHeaderName) || PROXY_HEADER_PATTERN.test(canonicalHeaderName) || SEC_HEADER_PATTERN.test(canonicalHeaderName)) {\n        if (!signableHeaders || signableHeaders && !signableHeaders.has(canonicalHeaderName)) {\n          continue;\n        }\n      }\n      canonical[canonicalHeaderName] = headers[headerName].trim().replace(/\\s+/g, \" \");\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n  return canonical;\n};","map":{"version":3,"names":["ALWAYS_UNSIGNABLE_HEADERS","PROXY_HEADER_PATTERN","SEC_HEADER_PATTERN","getCanonicalHeaders","_ref","unsignableHeaders","signableHeaders","headers","canonical","_iterator","_createForOfIteratorHelper","Object","keys","sort","_step","s","n","done","headerName","value","undefined","canonicalHeaderName","toLowerCase","has","test","trim","replace","err","e","f"],"sources":["/Users/ericli/Desktop/pill2/node_modules/@aws-sdk/signature-v4-multi-region/node_modules/@aws-sdk/signature-v4/dist-es/getCanonicalHeaders.js"],"sourcesContent":["import { ALWAYS_UNSIGNABLE_HEADERS, PROXY_HEADER_PATTERN, SEC_HEADER_PATTERN } from \"./constants\";\nexport const getCanonicalHeaders = ({ headers }, unsignableHeaders, signableHeaders) => {\n    const canonical = {};\n    for (const headerName of Object.keys(headers).sort()) {\n        if (headers[headerName] == undefined) {\n            continue;\n        }\n        const canonicalHeaderName = headerName.toLowerCase();\n        if (canonicalHeaderName in ALWAYS_UNSIGNABLE_HEADERS ||\n            unsignableHeaders?.has(canonicalHeaderName) ||\n            PROXY_HEADER_PATTERN.test(canonicalHeaderName) ||\n            SEC_HEADER_PATTERN.test(canonicalHeaderName)) {\n            if (!signableHeaders || (signableHeaders && !signableHeaders.has(canonicalHeaderName))) {\n                continue;\n            }\n        }\n        canonical[canonicalHeaderName] = headers[headerName].trim().replace(/\\s+/g, \" \");\n    }\n    return canonical;\n};\n"],"mappings":";AAAA,SAASA,yBAAyB,EAAEC,oBAAoB,EAAEC,kBAAkB,QAAQ,aAAa;AACjG,OAAO,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAmBA,CAAAC,IAAA,EAAiBC,iBAAiB,EAAEC,eAAe,EAAK;EAAA,IAAlDC,OAAO,GAAAH,IAAA,CAAPG,OAAO;EACzC,IAAMC,SAAS,GAAG,CAAC,CAAC;EAAC,IAAAC,SAAA,GAAAC,0BAAA,CACIC,MAAM,CAACC,IAAI,CAACL,OAAO,CAAC,CAACM,IAAI,EAAE;IAAAC,KAAA;EAAA;IAApD,KAAAL,SAAA,CAAAM,CAAA,MAAAD,KAAA,GAAAL,SAAA,CAAAO,CAAA,IAAAC,IAAA,GAAsD;MAAA,IAA3CC,UAAU,GAAAJ,KAAA,CAAAK,KAAA;MACjB,IAAIZ,OAAO,CAACW,UAAU,CAAC,IAAIE,SAAS,EAAE;QAClC;MACJ;MACA,IAAMC,mBAAmB,GAAGH,UAAU,CAACI,WAAW,EAAE;MACpD,IAAID,mBAAmB,IAAIrB,yBAAyB,IAChDK,iBAAiB,aAAjBA,iBAAiB,eAAjBA,iBAAiB,CAAEkB,GAAG,CAACF,mBAAmB,CAAC,IAC3CpB,oBAAoB,CAACuB,IAAI,CAACH,mBAAmB,CAAC,IAC9CnB,kBAAkB,CAACsB,IAAI,CAACH,mBAAmB,CAAC,EAAE;QAC9C,IAAI,CAACf,eAAe,IAAKA,eAAe,IAAI,CAACA,eAAe,CAACiB,GAAG,CAACF,mBAAmB,CAAE,EAAE;UACpF;QACJ;MACJ;MACAb,SAAS,CAACa,mBAAmB,CAAC,GAAGd,OAAO,CAACW,UAAU,CAAC,CAACO,IAAI,EAAE,CAACC,OAAO,CAAC,MAAM,EAAE,GAAG,CAAC;IACpF;EAAC,SAAAC,GAAA;IAAAlB,SAAA,CAAAmB,CAAA,CAAAD,GAAA;EAAA;IAAAlB,SAAA,CAAAoB,CAAA;EAAA;EACD,OAAOrB,SAAS;AACpB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}