{"ast":null,"code":"import _regeneratorRuntime from \"/Users/ericli/Desktop/pill2/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/ericli/Desktop/pill2/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { fromBase64 } from \"@aws-sdk/util-base64\";\nexport var streamCollector = function streamCollector(stream) {\n  if (typeof Blob === \"function\" && stream instanceof Blob) {\n    return collectBlob(stream);\n  }\n  return collectStream(stream);\n};\nfunction collectBlob(_x) {\n  return _collectBlob.apply(this, arguments);\n}\nfunction _collectBlob() {\n  _collectBlob = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(blob) {\n    var base64, arrayBuffer;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return readToBase64(blob);\n        case 2:\n          base64 = _context.sent;\n          arrayBuffer = fromBase64(base64);\n          return _context.abrupt(\"return\", new Uint8Array(arrayBuffer));\n        case 5:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  }));\n  return _collectBlob.apply(this, arguments);\n}\nfunction collectStream(_x2) {\n  return _collectStream.apply(this, arguments);\n}\nfunction _collectStream() {\n  _collectStream = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(stream) {\n    var res, reader, isDone, _yield$reader$read, done, value, prior;\n    return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n      while (1) switch (_context2.prev = _context2.next) {\n        case 0:\n          res = new Uint8Array(0);\n          reader = stream.getReader();\n          isDone = false;\n        case 3:\n          if (isDone) {\n            _context2.next = 13;\n            break;\n          }\n          _context2.next = 6;\n          return reader.read();\n        case 6:\n          _yield$reader$read = _context2.sent;\n          done = _yield$reader$read.done;\n          value = _yield$reader$read.value;\n          if (value) {\n            prior = res;\n            res = new Uint8Array(prior.length + value.length);\n            res.set(prior);\n            res.set(value, prior.length);\n          }\n          isDone = done;\n          _context2.next = 3;\n          break;\n        case 13:\n          return _context2.abrupt(\"return\", res);\n        case 14:\n        case \"end\":\n          return _context2.stop();\n      }\n    }, _callee2);\n  }));\n  return _collectStream.apply(this, arguments);\n}\nfunction readToBase64(blob) {\n  return new Promise(function (resolve, reject) {\n    var reader = new FileReader();\n    reader.onloadend = function () {\n      var _reader$result;\n      if (reader.readyState !== 2) {\n        return reject(new Error(\"Reader aborted too early\"));\n      }\n      var result = (_reader$result = reader.result) !== null && _reader$result !== void 0 ? _reader$result : \"\";\n      var commaIndex = result.indexOf(\",\");\n      var dataOffset = commaIndex > -1 ? commaIndex + 1 : result.length;\n      resolve(result.substring(dataOffset));\n    };\n    reader.onabort = function () {\n      return reject(new Error(\"Read aborted\"));\n    };\n    reader.onerror = function () {\n      return reject(reader.error);\n    };\n    reader.readAsDataURL(blob);\n  });\n}","map":{"version":3,"names":["fromBase64","streamCollector","stream","Blob","collectBlob","collectStream","_x","_collectBlob","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","blob","base64","arrayBuffer","wrap","_callee$","_context","prev","next","readToBase64","sent","abrupt","Uint8Array","stop","_x2","_collectStream","_callee2","res","reader","isDone","_yield$reader$read","done","value","prior","_callee2$","_context2","getReader","read","length","set","Promise","resolve","reject","FileReader","onloadend","_reader$result","readyState","Error","result","commaIndex","indexOf","dataOffset","substring","onabort","onerror","error","readAsDataURL"],"sources":["/Users/ericli/Desktop/pill2/node_modules/@aws-sdk/client-s3/node_modules/@aws-sdk/fetch-http-handler/dist-es/stream-collector.js"],"sourcesContent":["import { fromBase64 } from \"@aws-sdk/util-base64\";\nexport const streamCollector = (stream) => {\n    if (typeof Blob === \"function\" && stream instanceof Blob) {\n        return collectBlob(stream);\n    }\n    return collectStream(stream);\n};\nasync function collectBlob(blob) {\n    const base64 = await readToBase64(blob);\n    const arrayBuffer = fromBase64(base64);\n    return new Uint8Array(arrayBuffer);\n}\nasync function collectStream(stream) {\n    let res = new Uint8Array(0);\n    const reader = stream.getReader();\n    let isDone = false;\n    while (!isDone) {\n        const { done, value } = await reader.read();\n        if (value) {\n            const prior = res;\n            res = new Uint8Array(prior.length + value.length);\n            res.set(prior);\n            res.set(value, prior.length);\n        }\n        isDone = done;\n    }\n    return res;\n}\nfunction readToBase64(blob) {\n    return new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.onloadend = () => {\n            if (reader.readyState !== 2) {\n                return reject(new Error(\"Reader aborted too early\"));\n            }\n            const result = (reader.result ?? \"\");\n            const commaIndex = result.indexOf(\",\");\n            const dataOffset = commaIndex > -1 ? commaIndex + 1 : result.length;\n            resolve(result.substring(dataOffset));\n        };\n        reader.onabort = () => reject(new Error(\"Read aborted\"));\n        reader.onerror = () => reject(reader.error);\n        reader.readAsDataURL(blob);\n    });\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}