{"ast":null,"code":"import _objectSpread from \"/Users/ericli/Desktop/pill2/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _createForOfIteratorHelper from \"/Users/ericli/Desktop/pill2/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport { debugId, toDebugString } from \"../debug\";\nimport { evaluateCondition } from \"./evaluateCondition\";\nexport var evaluateConditions = function evaluateConditions() {\n  var conditions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var options = arguments.length > 1 ? arguments[1] : undefined;\n  var conditionsReferenceRecord = {};\n  var _iterator = _createForOfIteratorHelper(conditions),\n    _step;\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var condition = _step.value;\n      var _evaluateCondition = evaluateCondition(condition, _objectSpread(_objectSpread({}, options), {}, {\n          referenceRecord: _objectSpread(_objectSpread({}, options.referenceRecord), conditionsReferenceRecord)\n        })),\n        result = _evaluateCondition.result,\n        toAssign = _evaluateCondition.toAssign;\n      if (!result) {\n        return {\n          result: result\n        };\n      }\n      if (toAssign) {\n        var _options$logger, _options$logger$debug, _options$logger2;\n        conditionsReferenceRecord[toAssign.name] = toAssign.value;\n        (_options$logger = options.logger) === null || _options$logger === void 0 ? void 0 : (_options$logger$debug = (_options$logger2 = _options$logger).debug) === null || _options$logger$debug === void 0 ? void 0 : _options$logger$debug.call(_options$logger2, debugId, \"assign: \".concat(toAssign.name, \" := \").concat(toDebugString(toAssign.value)));\n      }\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n  return {\n    result: true,\n    referenceRecord: conditionsReferenceRecord\n  };\n};","map":{"version":3,"names":["debugId","toDebugString","evaluateCondition","evaluateConditions","conditions","arguments","length","undefined","options","conditionsReferenceRecord","_iterator","_createForOfIteratorHelper","_step","s","n","done","condition","value","_evaluateCondition","_objectSpread","referenceRecord","result","toAssign","_options$logger","_options$logger$debug","_options$logger2","name","logger","debug","call","concat","err","e","f"],"sources":["/Users/ericli/Desktop/pill2/node_modules/@aws-sdk/util-endpoints/dist-es/utils/evaluateConditions.js"],"sourcesContent":["import { debugId, toDebugString } from \"../debug\";\nimport { evaluateCondition } from \"./evaluateCondition\";\nexport const evaluateConditions = (conditions = [], options) => {\n    const conditionsReferenceRecord = {};\n    for (const condition of conditions) {\n        const { result, toAssign } = evaluateCondition(condition, {\n            ...options,\n            referenceRecord: {\n                ...options.referenceRecord,\n                ...conditionsReferenceRecord,\n            },\n        });\n        if (!result) {\n            return { result };\n        }\n        if (toAssign) {\n            conditionsReferenceRecord[toAssign.name] = toAssign.value;\n            options.logger?.debug?.(debugId, `assign: ${toAssign.name} := ${toDebugString(toAssign.value)}`);\n        }\n    }\n    return { result: true, referenceRecord: conditionsReferenceRecord };\n};\n"],"mappings":";;AAAA,SAASA,OAAO,EAAEC,aAAa,QAAQ,UAAU;AACjD,SAASC,iBAAiB,QAAQ,qBAAqB;AACvD,OAAO,IAAMC,kBAAkB,GAAG,SAArBA,kBAAkBA,CAAA,EAAiC;EAAA,IAA7BC,UAAU,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,EAAE;EAAA,IAAEG,OAAO,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EACvD,IAAME,yBAAyB,GAAG,CAAC,CAAC;EAAC,IAAAC,SAAA,GAAAC,0BAAA,CACbP,UAAU;IAAAQ,KAAA;EAAA;IAAlC,KAAAF,SAAA,CAAAG,CAAA,MAAAD,KAAA,GAAAF,SAAA,CAAAI,CAAA,IAAAC,IAAA,GAAoC;MAAA,IAAzBC,SAAS,GAAAJ,KAAA,CAAAK,KAAA;MAChB,IAAAC,kBAAA,GAA6BhB,iBAAiB,CAACc,SAAS,EAAAG,aAAA,CAAAA,aAAA,KACjDX,OAAO;UACVY,eAAe,EAAAD,aAAA,CAAAA,aAAA,KACRX,OAAO,CAACY,eAAe,GACvBX,yBAAyB;QAC/B,GACH;QANMY,MAAM,GAAAH,kBAAA,CAANG,MAAM;QAAEC,QAAQ,GAAAJ,kBAAA,CAARI,QAAQ;MAOxB,IAAI,CAACD,MAAM,EAAE;QACT,OAAO;UAAEA,MAAM,EAANA;QAAO,CAAC;MACrB;MACA,IAAIC,QAAQ,EAAE;QAAA,IAAAC,eAAA,EAAAC,qBAAA,EAAAC,gBAAA;QACVhB,yBAAyB,CAACa,QAAQ,CAACI,IAAI,CAAC,GAAGJ,QAAQ,CAACL,KAAK;QACzD,CAAAM,eAAA,GAAAf,OAAO,CAACmB,MAAM,cAAAJ,eAAA,wBAAAC,qBAAA,GAAd,CAAAC,gBAAA,GAAAF,eAAA,EAAgBK,KAAK,cAAAJ,qBAAA,uBAArBA,qBAAA,CAAAK,IAAA,CAAAJ,gBAAA,EAAwBzB,OAAO,aAAA8B,MAAA,CAAaR,QAAQ,CAACI,IAAI,UAAAI,MAAA,CAAO7B,aAAa,CAACqB,QAAQ,CAACL,KAAK,CAAC,EAAG;MACpG;IACJ;EAAC,SAAAc,GAAA;IAAArB,SAAA,CAAAsB,CAAA,CAAAD,GAAA;EAAA;IAAArB,SAAA,CAAAuB,CAAA;EAAA;EACD,OAAO;IAAEZ,MAAM,EAAE,IAAI;IAAED,eAAe,EAAEX;EAA0B,CAAC;AACvE,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}