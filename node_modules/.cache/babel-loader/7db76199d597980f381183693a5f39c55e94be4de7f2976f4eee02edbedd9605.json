{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n      label: 0,\n      sent: function () {\n        if (t[0] & 1) throw t[1];\n        return t[1];\n      },\n      trys: [],\n      ops: []\n    },\n    f,\n    y,\n    t,\n    g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n        case 7:\n          op = _.ops.pop();\n          _.trys.pop();\n          continue;\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n            _.ops.push(op);\n            break;\n          }\n          if (t[2]) _.ops.pop();\n          _.trys.pop();\n          continue;\n      }\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n/*\n * Copyright 2017-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nimport { Auth } from '@aws-amplify/auth';\nimport Cache from '@aws-amplify/cache';\nimport { RestAPIClass } from '@aws-amplify/api-rest';\nimport { GraphQLAPIClass } from '@aws-amplify/api-graphql';\nimport { Amplify, ConsoleLogger as Logger, Credentials } from '@aws-amplify/core';\nvar logger = new Logger('API');\n/**\n * @deprecated\n * Use RestApi or GraphQLAPI to reduce your application bundle size\n * Export Cloud Logic APIs\n */\nvar APIClass = /** @class */function () {\n  /**\n   * Initialize API with AWS configuration\n   * @param {Object} options - Configuration object for API\n   */\n  function APIClass(options) {\n    this.Auth = Auth;\n    this.Cache = Cache;\n    this.Credentials = Credentials;\n    this._options = options;\n    this._restApi = new RestAPIClass(options);\n    this._graphqlApi = new GraphQLAPIClass(options);\n    logger.debug('API Options', this._options);\n  }\n  APIClass.prototype.getModuleName = function () {\n    return 'API';\n  };\n  /**\n   * Configure API part with aws configurations\n   * @param {Object} config - Configuration of the API\n   * @return {Object} - The current configuration\n   */\n  APIClass.prototype.configure = function (options) {\n    this._options = Object.assign({}, this._options, options);\n    // Share Amplify instance with client for SSR\n    this._restApi.Credentials = this.Credentials;\n    this._graphqlApi.Auth = this.Auth;\n    this._graphqlApi.Cache = this.Cache;\n    this._graphqlApi.Credentials = this.Credentials;\n    var restAPIConfig = this._restApi.configure(this._options);\n    var graphQLAPIConfig = this._graphqlApi.configure(this._options);\n    return __assign(__assign({}, restAPIConfig), graphQLAPIConfig);\n  };\n  /**\n   * Make a GET request\n   * @param {string} apiName - The api name of the request\n   * @param {string} path - The path of the request\n   * @param {json} [init] - Request extra params\n   * @return {Promise} - A promise that resolves to an object with response status and JSON data, if successful.\n   */\n  APIClass.prototype.get = function (apiName, path, init) {\n    return this._restApi.get(apiName, path, init);\n  };\n  /**\n   * Make a POST request\n   * @param {string} apiName - The api name of the request\n   * @param {string} path - The path of the request\n   * @param {json} [init] - Request extra params\n   * @return {Promise} - A promise that resolves to an object with response status and JSON data, if successful.\n   */\n  APIClass.prototype.post = function (apiName, path, init) {\n    return this._restApi.post(apiName, path, init);\n  };\n  /**\n   * Make a PUT request\n   * @param {string} apiName - The api name of the request\n   * @param {string} path - The path of the request\n   * @param {json} [init] - Request extra params\n   * @return {Promise} - A promise that resolves to an object with response status and JSON data, if successful.\n   */\n  APIClass.prototype.put = function (apiName, path, init) {\n    return this._restApi.put(apiName, path, init);\n  };\n  /**\n   * Make a PATCH request\n   * @param {string} apiName - The api name of the request\n   * @param {string} path - The path of the request\n   * @param {json} [init] - Request extra params\n   * @return {Promise} - A promise that resolves to an object with response status and JSON data, if successful.\n   */\n  APIClass.prototype.patch = function (apiName, path, init) {\n    return this._restApi.patch(apiName, path, init);\n  };\n  /**\n   * Make a DEL request\n   * @param {string} apiName - The api name of the request\n   * @param {string} path - The path of the request\n   * @param {json} [init] - Request extra params\n   * @return {Promise} - A promise that resolves to an object with response status and JSON data, if successful.\n   */\n  APIClass.prototype.del = function (apiName, path, init) {\n    return this._restApi.del(apiName, path, init);\n  };\n  /**\n   * Make a HEAD request\n   * @param {string} apiName - The api name of the request\n   * @param {string} path - The path of the request\n   * @param {json} [init] - Request extra params\n   * @return {Promise} - A promise that resolves to an object with response status and JSON data, if successful.\n   */\n  APIClass.prototype.head = function (apiName, path, init) {\n    return this._restApi.head(apiName, path, init);\n  };\n  /**\n   * Checks to see if an error thrown is from an api request cancellation\n   * @param {any} error - Any error\n   * @return {boolean} - A boolean indicating if the error was from an api request cancellation\n   */\n  APIClass.prototype.isCancel = function (error) {\n    return this._restApi.isCancel(error);\n  };\n  /**\n   * Cancels an inflight request\n   * @param {any} request - request to cancel\n   * @return {boolean} - A boolean indicating if the request was cancelled\n   */\n  APIClass.prototype.cancel = function (request, message) {\n    return this._restApi.cancel(request, message);\n  };\n  /**\n   * Getting endpoint for API\n   * @param {string} apiName - The name of the api\n   * @return {string} - The endpoint of the api\n   */\n  APIClass.prototype.endpoint = function (apiName) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        return [2 /*return*/, this._restApi.endpoint(apiName)];\n      });\n    });\n  };\n  /**\n   * to get the operation type\n   * @param operation\n   */\n  APIClass.prototype.getGraphqlOperationType = function (operation) {\n    return this._graphqlApi.getGraphqlOperationType(operation);\n  };\n  /**\n   * Executes a GraphQL operation\n   *\n   * @param {GraphQLOptions} GraphQL Options\n   * @param {object} additionalHeaders headers to merge in after any `graphql_headers` set in the config\n   * @returns {Promise<GraphQLResult> | Observable<object>}\n   */\n  APIClass.prototype.graphql = function (options, additionalHeaders) {\n    return this._graphqlApi.graphql(options, additionalHeaders);\n  };\n  return APIClass;\n}();\nexport { APIClass };\nexport var API = new APIClass(null);\nAmplify.register(API);","map":{"version":3,"names":["Auth","Cache","RestAPIClass","GraphQLAPIClass","Amplify","ConsoleLogger","Logger","Credentials","logger","APIClass","options","_options","_restApi","_graphqlApi","debug","prototype","getModuleName","configure","Object","assign","restAPIConfig","graphQLAPIConfig","__assign","get","apiName","path","init","post","put","patch","del","head","isCancel","error","cancel","request","message","endpoint","getGraphqlOperationType","operation","graphql","additionalHeaders","API","register"],"sources":["/Users/ericli/node_modules/@aws-amplify/api/src/API.ts"],"sourcesContent":["/*\n * Copyright 2017-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nimport { Auth } from '@aws-amplify/auth';\nimport Cache from '@aws-amplify/cache';\nimport { RestAPIClass } from '@aws-amplify/api-rest';\nimport {\n\tGraphQLAPIClass,\n\tGraphQLOptions,\n\tGraphQLResult,\n} from '@aws-amplify/api-graphql';\nimport {\n\tAmplify,\n\tConsoleLogger as Logger,\n\tCredentials,\n} from '@aws-amplify/core';\nimport Observable from 'zen-observable-ts';\n\nconst logger = new Logger('API');\n/**\n * @deprecated\n * Use RestApi or GraphQLAPI to reduce your application bundle size\n * Export Cloud Logic APIs\n */\nexport class APIClass {\n\t/**\n\t * Initialize API with AWS configuration\n\t * @param {Object} options - Configuration object for API\n\t */\n\tprivate _options;\n\tprivate _restApi: RestAPIClass;\n\tprivate _graphqlApi;\n\n\tAuth = Auth;\n\tCache = Cache;\n\tCredentials = Credentials;\n\n\t/**\n\t * Initialize API with AWS configuration\n\t * @param {Object} options - Configuration object for API\n\t */\n\tconstructor(options) {\n\t\tthis._options = options;\n\t\tthis._restApi = new RestAPIClass(options);\n\t\tthis._graphqlApi = new GraphQLAPIClass(options);\n\t\tlogger.debug('API Options', this._options);\n\t}\n\n\tpublic getModuleName() {\n\t\treturn 'API';\n\t}\n\n\t/**\n\t * Configure API part with aws configurations\n\t * @param {Object} config - Configuration of the API\n\t * @return {Object} - The current configuration\n\t */\n\tconfigure(options) {\n\t\tthis._options = Object.assign({}, this._options, options);\n\n\t\t// Share Amplify instance with client for SSR\n\t\tthis._restApi.Credentials = this.Credentials;\n\n\t\tthis._graphqlApi.Auth = this.Auth;\n\t\tthis._graphqlApi.Cache = this.Cache;\n\t\tthis._graphqlApi.Credentials = this.Credentials;\n\n\t\tconst restAPIConfig = this._restApi.configure(this._options);\n\t\tconst graphQLAPIConfig = this._graphqlApi.configure(this._options);\n\n\t\treturn { ...restAPIConfig, ...graphQLAPIConfig };\n\t}\n\n\t/**\n\t * Make a GET request\n\t * @param {string} apiName - The api name of the request\n\t * @param {string} path - The path of the request\n\t * @param {json} [init] - Request extra params\n\t * @return {Promise} - A promise that resolves to an object with response status and JSON data, if successful.\n\t */\n\tget(apiName, path, init): Promise<any> {\n\t\treturn this._restApi.get(apiName, path, init);\n\t}\n\n\t/**\n\t * Make a POST request\n\t * @param {string} apiName - The api name of the request\n\t * @param {string} path - The path of the request\n\t * @param {json} [init] - Request extra params\n\t * @return {Promise} - A promise that resolves to an object with response status and JSON data, if successful.\n\t */\n\tpost(apiName, path, init): Promise<any> {\n\t\treturn this._restApi.post(apiName, path, init);\n\t}\n\n\t/**\n\t * Make a PUT request\n\t * @param {string} apiName - The api name of the request\n\t * @param {string} path - The path of the request\n\t * @param {json} [init] - Request extra params\n\t * @return {Promise} - A promise that resolves to an object with response status and JSON data, if successful.\n\t */\n\tput(apiName, path, init): Promise<any> {\n\t\treturn this._restApi.put(apiName, path, init);\n\t}\n\n\t/**\n\t * Make a PATCH request\n\t * @param {string} apiName - The api name of the request\n\t * @param {string} path - The path of the request\n\t * @param {json} [init] - Request extra params\n\t * @return {Promise} - A promise that resolves to an object with response status and JSON data, if successful.\n\t */\n\tpatch(apiName, path, init): Promise<any> {\n\t\treturn this._restApi.patch(apiName, path, init);\n\t}\n\n\t/**\n\t * Make a DEL request\n\t * @param {string} apiName - The api name of the request\n\t * @param {string} path - The path of the request\n\t * @param {json} [init] - Request extra params\n\t * @return {Promise} - A promise that resolves to an object with response status and JSON data, if successful.\n\t */\n\tdel(apiName, path, init): Promise<any> {\n\t\treturn this._restApi.del(apiName, path, init);\n\t}\n\n\t/**\n\t * Make a HEAD request\n\t * @param {string} apiName - The api name of the request\n\t * @param {string} path - The path of the request\n\t * @param {json} [init] - Request extra params\n\t * @return {Promise} - A promise that resolves to an object with response status and JSON data, if successful.\n\t */\n\thead(apiName, path, init): Promise<any> {\n\t\treturn this._restApi.head(apiName, path, init);\n\t}\n\n\t/**\n\t * Checks to see if an error thrown is from an api request cancellation\n\t * @param {any} error - Any error\n\t * @return {boolean} - A boolean indicating if the error was from an api request cancellation\n\t */\n\tisCancel(error) {\n\t\treturn this._restApi.isCancel(error);\n\t}\n\t/**\n\t * Cancels an inflight request\n\t * @param {any} request - request to cancel\n\t * @return {boolean} - A boolean indicating if the request was cancelled\n\t */\n\tcancel(request: Promise<any>, message?: string) {\n\t\treturn this._restApi.cancel(request, message);\n\t}\n\n\t/**\n\t * Getting endpoint for API\n\t * @param {string} apiName - The name of the api\n\t * @return {string} - The endpoint of the api\n\t */\n\tasync endpoint(apiName) {\n\t\treturn this._restApi.endpoint(apiName);\n\t}\n\n\t/**\n\t * to get the operation type\n\t * @param operation\n\t */\n\tgetGraphqlOperationType(operation) {\n\t\treturn this._graphqlApi.getGraphqlOperationType(operation);\n\t}\n\n\t/**\n\t * Executes a GraphQL operation\n\t *\n\t * @param {GraphQLOptions} GraphQL Options\n\t * @param {object} additionalHeaders headers to merge in after any `graphql_headers` set in the config\n\t * @returns {Promise<GraphQLResult> | Observable<object>}\n\t */\n\tgraphql(\n\t\toptions: GraphQLOptions,\n\t\tadditionalHeaders?: { [key: string]: string }\n\t): Promise<GraphQLResult> | Observable<object> {\n\t\treturn this._graphqlApi.graphql(options, additionalHeaders);\n\t}\n}\n\nexport const API = new APIClass(null);\nAmplify.register(API);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}