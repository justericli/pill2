{"ast":null,"code":"var _jsxFileName = \"/Users/ericli/Desktop/pill2/src/components/Forms/ListingForm.jsx\",\n  _s = $RefreshSig$();\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ImageUpload = () => {\n  _s();\n  const [selectedFile, setSelectedFile] = useState(null);\n  const handleFileDrop = acceptedFiles => {\n    setSelectedFile(acceptedFiles[0]);\n  };\n  const handleUpload = () => {\n    if (selectedFile) {\n      const params = {\n        Bucket: \"YOUR_BUCKET_NAME\",\n        Key: selectedFile.name,\n        Body: selectedFile,\n        ACL: \"public-read\" // Set the desired access control level for the uploaded image\n      };\n\n      s3.upload(params, (err, data) => {\n        if (err) {\n          console.log(\"Error:\", err);\n        } else {\n          console.log(\"Image uploaded successfully:\", data.Location);\n          // Perform any further actions after successful image upload\n        }\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Dropzone, {\n      onDrop: handleFileDrop,\n      children: _ref => {\n        let {\n          getRootProps,\n          getInputProps\n        } = _ref;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          ...getRootProps(),\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            ...getInputProps()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 13\n          }, this), selectedFile ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"Selected file: \", selectedFile.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Drag and drop an image here or click to select\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      children: \"Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(ImageUpload, \"cz3B5sQOxlrekAnUFUPeMaA2gqY=\");\n_c = ImageUpload;\nexport default ImageUpload;\nvar _c;\n$RefreshReg$(_c, \"ImageUpload\");","map":{"version":3,"names":["ImageUpload","_s","selectedFile","setSelectedFile","useState","handleFileDrop","acceptedFiles","handleUpload","params","Bucket","Key","name","Body","ACL","s3","upload","err","data","console","log","Location","_jsxDEV","children","Dropzone","onDrop","_ref","getRootProps","getInputProps","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/ericli/Desktop/pill2/src/components/Forms/ListingForm.jsx"],"sourcesContent":["const ImageUpload = () => {\n  const [selectedFile, setSelectedFile] = useState(null);\n\n  const handleFileDrop = (acceptedFiles) => {\n    setSelectedFile(acceptedFiles[0]);\n  };\n\n  const handleUpload = () => {\n    if (selectedFile) {\n      const params = {\n        Bucket: \"YOUR_BUCKET_NAME\",\n        Key: selectedFile.name,\n        Body: selectedFile,\n        ACL: \"public-read\", // Set the desired access control level for the uploaded image\n      };\n\n      s3.upload(params, (err, data) => {\n        if (err) {\n          console.log(\"Error:\", err);\n        } else {\n          console.log(\"Image uploaded successfully:\", data.Location);\n          // Perform any further actions after successful image upload\n        }\n      });\n    }\n  };\n\n  return (\n    <div>\n      <Dropzone onDrop={handleFileDrop}>\n        {({ getRootProps, getInputProps }) => (\n          <div {...getRootProps()}>\n            <input {...getInputProps()} />\n            {selectedFile ? (\n              <div>Selected file: {selectedFile.name}</div>\n            ) : (\n              <div>Drag and drop an image here or click to select</div>\n            )}\n          </div>\n        )}\n      </Dropzone>\n      <button onClick={handleUpload}>Upload</button>\n    </div>\n  );\n};\n\nexport default ImageUpload;\n"],"mappings":";;;AAAA,MAAMA,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGC,QAAQ,CAAC,IAAI,CAAC;EAEtD,MAAMC,cAAc,GAAIC,aAAa,IAAK;IACxCH,eAAe,CAACG,aAAa,CAAC,CAAC,CAAC,CAAC;EACnC,CAAC;EAED,MAAMC,YAAY,GAAGA,CAAA,KAAM;IACzB,IAAIL,YAAY,EAAE;MAChB,MAAMM,MAAM,GAAG;QACbC,MAAM,EAAE,kBAAkB;QAC1BC,GAAG,EAAER,YAAY,CAACS,IAAI;QACtBC,IAAI,EAAEV,YAAY;QAClBW,GAAG,EAAE,aAAa,CAAE;MACtB,CAAC;;MAEDC,EAAE,CAACC,MAAM,CAACP,MAAM,EAAE,CAACQ,GAAG,EAAEC,IAAI,KAAK;QAC/B,IAAID,GAAG,EAAE;UACPE,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEH,GAAG,CAAC;QAC5B,CAAC,MAAM;UACLE,OAAO,CAACC,GAAG,CAAC,8BAA8B,EAAEF,IAAI,CAACG,QAAQ,CAAC;UAC1D;QACF;MACF,CAAC,CAAC;IACJ;EACF,CAAC;;EAED,oBACEC,OAAA;IAAAC,QAAA,gBACED,OAAA,CAACE,QAAQ;MAACC,MAAM,EAAEnB,cAAe;MAAAiB,QAAA,EAC9BG,IAAA;QAAA,IAAC;UAAEC,YAAY;UAAEC;QAAc,CAAC,GAAAF,IAAA;QAAA,oBAC/BJ,OAAA;UAAA,GAASK,YAAY,EAAE;UAAAJ,QAAA,gBACrBD,OAAA;YAAA,GAAWM,aAAa;UAAE;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAI,EAC7B7B,YAAY,gBACXmB,OAAA;YAAAC,QAAA,GAAK,iBAAe,EAACpB,YAAY,CAACS,IAAI;UAAA;YAAAiB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAO,gBAE7CV,OAAA;YAAAC,QAAA,EAAK;UAA8C;YAAAM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QACpD;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACG;MAAA;IACP;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACQ,eACXV,OAAA;MAAQW,OAAO,EAAEzB,YAAa;MAAAe,QAAA,EAAC;IAAM;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAC1C;AAEV,CAAC;AAAC9B,EAAA,CA5CID,WAAW;AAAAiC,EAAA,GAAXjC,WAAW;AA8CjB,eAAeA,WAAW;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}