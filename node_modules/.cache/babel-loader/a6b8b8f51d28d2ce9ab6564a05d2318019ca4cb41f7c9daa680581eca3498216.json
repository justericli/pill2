{"ast":null,"code":"/*\n * Copyright 2017-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n    r,\n    ar = [],\n    e;\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n  return ar;\n};\nvar __spread = this && this.__spread || function () {\n  for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));\n  return ar;\n};\nvar LOG_LEVELS = {\n  VERBOSE: 1,\n  DEBUG: 2,\n  INFO: 3,\n  WARN: 4,\n  ERROR: 5\n};\n/**\n * Write logs\n * @class Logger\n */\nvar ConsoleLogger = /** @class */function () {\n  /**\n   * @constructor\n   * @param {string} name - Name of the logger\n   */\n  function ConsoleLogger(name, level) {\n    if (level === void 0) {\n      level = 'WARN';\n    }\n    this.name = name;\n    this.level = level;\n  }\n  ConsoleLogger.prototype._padding = function (n) {\n    return n < 10 ? '0' + n : '' + n;\n  };\n  ConsoleLogger.prototype._ts = function () {\n    var dt = new Date();\n    return [this._padding(dt.getMinutes()), this._padding(dt.getSeconds())].join(':') + '.' + dt.getMilliseconds();\n  };\n  /**\n   * Write log\n   * @method\n   * @memeberof Logger\n   * @param {string} type - log type, default INFO\n   * @param {string|object} msg - Logging message or object\n   */\n  ConsoleLogger.prototype._log = function (type) {\n    var msg = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n      msg[_i - 1] = arguments[_i];\n    }\n    var logger_level_name = this.level;\n    if (ConsoleLogger.LOG_LEVEL) {\n      logger_level_name = ConsoleLogger.LOG_LEVEL;\n    }\n    if (typeof window !== 'undefined' && window.LOG_LEVEL) {\n      logger_level_name = window.LOG_LEVEL;\n    }\n    var logger_level = LOG_LEVELS[logger_level_name];\n    var type_level = LOG_LEVELS[type];\n    if (!(type_level >= logger_level)) {\n      // Do nothing if type is not greater than or equal to logger level (handle undefined)\n      return;\n    }\n    var log = console.log.bind(console);\n    if (type === 'ERROR' && console.error) {\n      log = console.error.bind(console);\n    }\n    if (type === 'WARN' && console.warn) {\n      log = console.warn.bind(console);\n    }\n    var prefix = \"[\" + type + \"] \" + this._ts() + \" \" + this.name;\n    if (msg.length === 1 && typeof msg[0] === 'string') {\n      log(prefix + \" - \" + msg[0]);\n    } else if (msg.length === 1) {\n      log(prefix, msg[0]);\n    } else if (typeof msg[0] === 'string') {\n      var obj = msg.slice(1);\n      if (obj.length === 1) {\n        obj = obj[0];\n      }\n      log(prefix + \" - \" + msg[0], obj);\n    } else {\n      log(prefix, msg);\n    }\n  };\n  /**\n   * Write General log. Default to INFO\n   * @method\n   * @memeberof Logger\n   * @param {string|object} msg - Logging message or object\n   */\n  ConsoleLogger.prototype.log = function () {\n    var msg = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n      msg[_i] = arguments[_i];\n    }\n    this._log.apply(this, __spread(['INFO'], msg));\n  };\n  /**\n   * Write INFO log\n   * @method\n   * @memeberof Logger\n   * @param {string|object} msg - Logging message or object\n   */\n  ConsoleLogger.prototype.info = function () {\n    var msg = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n      msg[_i] = arguments[_i];\n    }\n    this._log.apply(this, __spread(['INFO'], msg));\n  };\n  /**\n   * Write WARN log\n   * @method\n   * @memeberof Logger\n   * @param {string|object} msg - Logging message or object\n   */\n  ConsoleLogger.prototype.warn = function () {\n    var msg = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n      msg[_i] = arguments[_i];\n    }\n    this._log.apply(this, __spread(['WARN'], msg));\n  };\n  /**\n   * Write ERROR log\n   * @method\n   * @memeberof Logger\n   * @param {string|object} msg - Logging message or object\n   */\n  ConsoleLogger.prototype.error = function () {\n    var msg = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n      msg[_i] = arguments[_i];\n    }\n    this._log.apply(this, __spread(['ERROR'], msg));\n  };\n  /**\n   * Write DEBUG log\n   * @method\n   * @memeberof Logger\n   * @param {string|object} msg - Logging message or object\n   */\n  ConsoleLogger.prototype.debug = function () {\n    var msg = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n      msg[_i] = arguments[_i];\n    }\n    this._log.apply(this, __spread(['DEBUG'], msg));\n  };\n  /**\n   * Write VERBOSE log\n   * @method\n   * @memeberof Logger\n   * @param {string|object} msg - Logging message or object\n   */\n  ConsoleLogger.prototype.verbose = function () {\n    var msg = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n      msg[_i] = arguments[_i];\n    }\n    this._log.apply(this, __spread(['VERBOSE'], msg));\n  };\n  ConsoleLogger.LOG_LEVEL = null;\n  return ConsoleLogger;\n}();\nexport { ConsoleLogger };","map":{"version":3,"names":["LOG_LEVELS","VERBOSE","DEBUG","INFO","WARN","ERROR","ConsoleLogger","name","level","prototype","_padding","n","_ts","dt","Date","getMinutes","getSeconds","join","getMilliseconds","_log","type","msg","_i","arguments","length","logger_level_name","LOG_LEVEL","window","logger_level","type_level","log","console","bind","error","warn","prefix","obj","slice","apply","__spread","info","debug","verbose"],"sources":["/Users/ericli/node_modules/@aws-amplify/core/src/Logger/ConsoleLogger.ts"],"sourcesContent":["/*\n * Copyright 2017-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\n\nimport { Logger } from './logger-interface';\n\nconst LOG_LEVELS = {\n\tVERBOSE: 1,\n\tDEBUG: 2,\n\tINFO: 3,\n\tWARN: 4,\n\tERROR: 5,\n};\n\n/**\n * Write logs\n * @class Logger\n */\nexport class ConsoleLogger implements Logger {\n\tname: string;\n\tlevel: string;\n\n\t/**\n\t * @constructor\n\t * @param {string} name - Name of the logger\n\t */\n\tconstructor(name, level = 'WARN') {\n\t\tthis.name = name;\n\t\tthis.level = level;\n\t}\n\n\tstatic LOG_LEVEL = null;\n\n\t_padding(n) {\n\t\treturn n < 10 ? '0' + n : '' + n;\n\t}\n\n\t_ts() {\n\t\tconst dt = new Date();\n\t\treturn (\n\t\t\t[this._padding(dt.getMinutes()), this._padding(dt.getSeconds())].join(\n\t\t\t\t':'\n\t\t\t) +\n\t\t\t'.' +\n\t\t\tdt.getMilliseconds()\n\t\t);\n\t}\n\n\t/**\n\t * Write log\n\t * @method\n\t * @memeberof Logger\n\t * @param {string} type - log type, default INFO\n\t * @param {string|object} msg - Logging message or object\n\t */\n\t_log(type: string, ...msg) {\n\t\tlet logger_level_name = this.level;\n\t\tif (ConsoleLogger.LOG_LEVEL) {\n\t\t\tlogger_level_name = ConsoleLogger.LOG_LEVEL;\n\t\t}\n\t\tif (typeof (<any>window) !== 'undefined' && (<any>window).LOG_LEVEL) {\n\t\t\tlogger_level_name = (<any>window).LOG_LEVEL;\n\t\t}\n\t\tconst logger_level = LOG_LEVELS[logger_level_name];\n\t\tconst type_level = LOG_LEVELS[type];\n\t\tif (!(type_level >= logger_level)) {\n\t\t\t// Do nothing if type is not greater than or equal to logger level (handle undefined)\n\t\t\treturn;\n\t\t}\n\n\t\tlet log = console.log.bind(console);\n\t\tif (type === 'ERROR' && console.error) {\n\t\t\tlog = console.error.bind(console);\n\t\t}\n\t\tif (type === 'WARN' && console.warn) {\n\t\t\tlog = console.warn.bind(console);\n\t\t}\n\n\t\tconst prefix = `[${type}] ${this._ts()} ${this.name}`;\n\n\t\tif (msg.length === 1 && typeof msg[0] === 'string') {\n\t\t\tlog(`${prefix} - ${msg[0]}`);\n\t\t} else if (msg.length === 1) {\n\t\t\tlog(prefix, msg[0]);\n\t\t} else if (typeof msg[0] === 'string') {\n\t\t\tlet obj = msg.slice(1);\n\t\t\tif (obj.length === 1) {\n\t\t\t\tobj = obj[0];\n\t\t\t}\n\t\t\tlog(`${prefix} - ${msg[0]}`, obj);\n\t\t} else {\n\t\t\tlog(prefix, msg);\n\t\t}\n\t}\n\n\t/**\n\t * Write General log. Default to INFO\n\t * @method\n\t * @memeberof Logger\n\t * @param {string|object} msg - Logging message or object\n\t */\n\tlog(...msg) {\n\t\tthis._log('INFO', ...msg);\n\t}\n\n\t/**\n\t * Write INFO log\n\t * @method\n\t * @memeberof Logger\n\t * @param {string|object} msg - Logging message or object\n\t */\n\tinfo(...msg) {\n\t\tthis._log('INFO', ...msg);\n\t}\n\n\t/**\n\t * Write WARN log\n\t * @method\n\t * @memeberof Logger\n\t * @param {string|object} msg - Logging message or object\n\t */\n\twarn(...msg) {\n\t\tthis._log('WARN', ...msg);\n\t}\n\n\t/**\n\t * Write ERROR log\n\t * @method\n\t * @memeberof Logger\n\t * @param {string|object} msg - Logging message or object\n\t */\n\terror(...msg) {\n\t\tthis._log('ERROR', ...msg);\n\t}\n\n\t/**\n\t * Write DEBUG log\n\t * @method\n\t * @memeberof Logger\n\t * @param {string|object} msg - Logging message or object\n\t */\n\tdebug(...msg) {\n\t\tthis._log('DEBUG', ...msg);\n\t}\n\n\t/**\n\t * Write VERBOSE log\n\t * @method\n\t * @memeberof Logger\n\t * @param {string|object} msg - Logging message or object\n\t */\n\tverbose(...msg) {\n\t\tthis._log('VERBOSE', ...msg);\n\t}\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}