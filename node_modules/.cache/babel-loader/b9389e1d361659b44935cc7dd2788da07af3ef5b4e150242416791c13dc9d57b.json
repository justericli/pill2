{"ast":null,"code":"import _regeneratorRuntime from \"/Users/ericli/Desktop/pill2/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/ericli/Desktop/pill2/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _objectSpread from \"/Users/ericli/Desktop/pill2/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport packageInfo from \"../package.json\";\nimport { Sha1 } from \"@aws-crypto/sha1-browser\";\nimport { Sha256 } from \"@aws-crypto/sha256-browser\";\nimport { DEFAULT_USE_DUALSTACK_ENDPOINT, DEFAULT_USE_FIPS_ENDPOINT } from \"@aws-sdk/config-resolver\";\nimport { eventStreamSerdeProvider } from \"@aws-sdk/eventstream-serde-browser\";\nimport { FetchHttpHandler as RequestHandler, streamCollector } from \"@aws-sdk/fetch-http-handler\";\nimport { blobHasher as streamHasher } from \"@aws-sdk/hash-blob-browser\";\nimport { invalidProvider } from \"@aws-sdk/invalid-dependency\";\nimport { Md5 } from \"@aws-sdk/md5-js\";\nimport { calculateBodyLength } from \"@aws-sdk/util-body-length-browser\";\nimport { DEFAULT_MAX_ATTEMPTS, DEFAULT_RETRY_MODE } from \"@aws-sdk/util-retry\";\nimport { getAwsChunkedEncodingStream, sdkStreamMixin } from \"@aws-sdk/util-stream-browser\";\nimport { defaultUserAgent } from \"@aws-sdk/util-user-agent-browser\";\nimport { getRuntimeConfig as getSharedRuntimeConfig } from \"./runtimeConfig.shared\";\nimport { loadConfigsForDefaultMode } from \"@aws-sdk/smithy-client\";\nimport { resolveDefaultsModeConfig } from \"@aws-sdk/util-defaults-mode-browser\";\nexport var getRuntimeConfig = function getRuntimeConfig(config) {\n  var _config$bodyLengthChe, _config$credentialDef, _config$defaultUserAg, _config$eventStreamSe, _config$getAwsChunked, _config$maxAttempts, _config$md, _config$region, _config$requestHandle, _config$retryMode, _config$sdkStreamMixi, _config$sha, _config$sha2, _config$streamCollect, _config$streamHasher, _config$useDualstackE, _config$useFipsEndpoi;\n  var defaultsMode = resolveDefaultsModeConfig(config);\n  var defaultConfigProvider = function defaultConfigProvider() {\n    return defaultsMode().then(loadConfigsForDefaultMode);\n  };\n  var clientSharedValues = getSharedRuntimeConfig(config);\n  return _objectSpread(_objectSpread(_objectSpread({}, clientSharedValues), config), {}, {\n    runtime: \"browser\",\n    defaultsMode: defaultsMode,\n    bodyLengthChecker: (_config$bodyLengthChe = config === null || config === void 0 ? void 0 : config.bodyLengthChecker) !== null && _config$bodyLengthChe !== void 0 ? _config$bodyLengthChe : calculateBodyLength,\n    credentialDefaultProvider: (_config$credentialDef = config === null || config === void 0 ? void 0 : config.credentialDefaultProvider) !== null && _config$credentialDef !== void 0 ? _config$credentialDef : function (_) {\n      return function () {\n        return Promise.reject(new Error(\"Credential is missing\"));\n      };\n    },\n    defaultUserAgentProvider: (_config$defaultUserAg = config === null || config === void 0 ? void 0 : config.defaultUserAgentProvider) !== null && _config$defaultUserAg !== void 0 ? _config$defaultUserAg : defaultUserAgent({\n      serviceId: clientSharedValues.serviceId,\n      clientVersion: packageInfo.version\n    }),\n    eventStreamSerdeProvider: (_config$eventStreamSe = config === null || config === void 0 ? void 0 : config.eventStreamSerdeProvider) !== null && _config$eventStreamSe !== void 0 ? _config$eventStreamSe : eventStreamSerdeProvider,\n    getAwsChunkedEncodingStream: (_config$getAwsChunked = config === null || config === void 0 ? void 0 : config.getAwsChunkedEncodingStream) !== null && _config$getAwsChunked !== void 0 ? _config$getAwsChunked : getAwsChunkedEncodingStream,\n    maxAttempts: (_config$maxAttempts = config === null || config === void 0 ? void 0 : config.maxAttempts) !== null && _config$maxAttempts !== void 0 ? _config$maxAttempts : DEFAULT_MAX_ATTEMPTS,\n    md5: (_config$md = config === null || config === void 0 ? void 0 : config.md5) !== null && _config$md !== void 0 ? _config$md : Md5,\n    region: (_config$region = config === null || config === void 0 ? void 0 : config.region) !== null && _config$region !== void 0 ? _config$region : invalidProvider(\"Region is missing\"),\n    requestHandler: (_config$requestHandle = config === null || config === void 0 ? void 0 : config.requestHandler) !== null && _config$requestHandle !== void 0 ? _config$requestHandle : new RequestHandler(defaultConfigProvider),\n    retryMode: (_config$retryMode = config === null || config === void 0 ? void 0 : config.retryMode) !== null && _config$retryMode !== void 0 ? _config$retryMode : /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return defaultConfigProvider();\n          case 2:\n            _context.t0 = _context.sent.retryMode;\n            if (_context.t0) {\n              _context.next = 5;\n              break;\n            }\n            _context.t0 = DEFAULT_RETRY_MODE;\n          case 5:\n            return _context.abrupt(\"return\", _context.t0);\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    })),\n    sdkStreamMixin: (_config$sdkStreamMixi = config === null || config === void 0 ? void 0 : config.sdkStreamMixin) !== null && _config$sdkStreamMixi !== void 0 ? _config$sdkStreamMixi : sdkStreamMixin,\n    sha1: (_config$sha = config === null || config === void 0 ? void 0 : config.sha1) !== null && _config$sha !== void 0 ? _config$sha : Sha1,\n    sha256: (_config$sha2 = config === null || config === void 0 ? void 0 : config.sha256) !== null && _config$sha2 !== void 0 ? _config$sha2 : Sha256,\n    streamCollector: (_config$streamCollect = config === null || config === void 0 ? void 0 : config.streamCollector) !== null && _config$streamCollect !== void 0 ? _config$streamCollect : streamCollector,\n    streamHasher: (_config$streamHasher = config === null || config === void 0 ? void 0 : config.streamHasher) !== null && _config$streamHasher !== void 0 ? _config$streamHasher : streamHasher,\n    useDualstackEndpoint: (_config$useDualstackE = config === null || config === void 0 ? void 0 : config.useDualstackEndpoint) !== null && _config$useDualstackE !== void 0 ? _config$useDualstackE : function () {\n      return Promise.resolve(DEFAULT_USE_DUALSTACK_ENDPOINT);\n    },\n    useFipsEndpoint: (_config$useFipsEndpoi = config === null || config === void 0 ? void 0 : config.useFipsEndpoint) !== null && _config$useFipsEndpoi !== void 0 ? _config$useFipsEndpoi : function () {\n      return Promise.resolve(DEFAULT_USE_FIPS_ENDPOINT);\n    }\n  });\n};","map":{"version":3,"names":["packageInfo","Sha1","Sha256","DEFAULT_USE_DUALSTACK_ENDPOINT","DEFAULT_USE_FIPS_ENDPOINT","eventStreamSerdeProvider","FetchHttpHandler","RequestHandler","streamCollector","blobHasher","streamHasher","invalidProvider","Md5","calculateBodyLength","DEFAULT_MAX_ATTEMPTS","DEFAULT_RETRY_MODE","getAwsChunkedEncodingStream","sdkStreamMixin","defaultUserAgent","getRuntimeConfig","getSharedRuntimeConfig","loadConfigsForDefaultMode","resolveDefaultsModeConfig","config","_config$bodyLengthChe","_config$credentialDef","_config$defaultUserAg","_config$eventStreamSe","_config$getAwsChunked","_config$maxAttempts","_config$md","_config$region","_config$requestHandle","_config$retryMode","_config$sdkStreamMixi","_config$sha","_config$sha2","_config$streamCollect","_config$streamHasher","_config$useDualstackE","_config$useFipsEndpoi","defaultsMode","defaultConfigProvider","then","clientSharedValues","_objectSpread","runtime","bodyLengthChecker","credentialDefaultProvider","_","Promise","reject","Error","defaultUserAgentProvider","serviceId","clientVersion","version","maxAttempts","md5","region","requestHandler","retryMode","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_callee$","_context","prev","next","t0","sent","abrupt","stop","sha1","sha256","useDualstackEndpoint","resolve","useFipsEndpoint"],"sources":["/Users/ericli/Desktop/pill2/node_modules/@aws-sdk/client-s3/dist-es/runtimeConfig.browser.js"],"sourcesContent":["import packageInfo from \"../package.json\";\nimport { Sha1 } from \"@aws-crypto/sha1-browser\";\nimport { Sha256 } from \"@aws-crypto/sha256-browser\";\nimport { DEFAULT_USE_DUALSTACK_ENDPOINT, DEFAULT_USE_FIPS_ENDPOINT } from \"@aws-sdk/config-resolver\";\nimport { eventStreamSerdeProvider } from \"@aws-sdk/eventstream-serde-browser\";\nimport { FetchHttpHandler as RequestHandler, streamCollector } from \"@aws-sdk/fetch-http-handler\";\nimport { blobHasher as streamHasher } from \"@aws-sdk/hash-blob-browser\";\nimport { invalidProvider } from \"@aws-sdk/invalid-dependency\";\nimport { Md5 } from \"@aws-sdk/md5-js\";\nimport { calculateBodyLength } from \"@aws-sdk/util-body-length-browser\";\nimport { DEFAULT_MAX_ATTEMPTS, DEFAULT_RETRY_MODE } from \"@aws-sdk/util-retry\";\nimport { getAwsChunkedEncodingStream, sdkStreamMixin } from \"@aws-sdk/util-stream-browser\";\nimport { defaultUserAgent } from \"@aws-sdk/util-user-agent-browser\";\nimport { getRuntimeConfig as getSharedRuntimeConfig } from \"./runtimeConfig.shared\";\nimport { loadConfigsForDefaultMode } from \"@aws-sdk/smithy-client\";\nimport { resolveDefaultsModeConfig } from \"@aws-sdk/util-defaults-mode-browser\";\nexport const getRuntimeConfig = (config) => {\n    const defaultsMode = resolveDefaultsModeConfig(config);\n    const defaultConfigProvider = () => defaultsMode().then(loadConfigsForDefaultMode);\n    const clientSharedValues = getSharedRuntimeConfig(config);\n    return {\n        ...clientSharedValues,\n        ...config,\n        runtime: \"browser\",\n        defaultsMode,\n        bodyLengthChecker: config?.bodyLengthChecker ?? calculateBodyLength,\n        credentialDefaultProvider: config?.credentialDefaultProvider ?? ((_) => () => Promise.reject(new Error(\"Credential is missing\"))),\n        defaultUserAgentProvider: config?.defaultUserAgentProvider ??\n            defaultUserAgent({ serviceId: clientSharedValues.serviceId, clientVersion: packageInfo.version }),\n        eventStreamSerdeProvider: config?.eventStreamSerdeProvider ?? eventStreamSerdeProvider,\n        getAwsChunkedEncodingStream: config?.getAwsChunkedEncodingStream ?? getAwsChunkedEncodingStream,\n        maxAttempts: config?.maxAttempts ?? DEFAULT_MAX_ATTEMPTS,\n        md5: config?.md5 ?? Md5,\n        region: config?.region ?? invalidProvider(\"Region is missing\"),\n        requestHandler: config?.requestHandler ?? new RequestHandler(defaultConfigProvider),\n        retryMode: config?.retryMode ?? (async () => (await defaultConfigProvider()).retryMode || DEFAULT_RETRY_MODE),\n        sdkStreamMixin: config?.sdkStreamMixin ?? sdkStreamMixin,\n        sha1: config?.sha1 ?? Sha1,\n        sha256: config?.sha256 ?? Sha256,\n        streamCollector: config?.streamCollector ?? streamCollector,\n        streamHasher: config?.streamHasher ?? streamHasher,\n        useDualstackEndpoint: config?.useDualstackEndpoint ?? (() => Promise.resolve(DEFAULT_USE_DUALSTACK_ENDPOINT)),\n        useFipsEndpoint: config?.useFipsEndpoint ?? (() => Promise.resolve(DEFAULT_USE_FIPS_ENDPOINT)),\n    };\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}