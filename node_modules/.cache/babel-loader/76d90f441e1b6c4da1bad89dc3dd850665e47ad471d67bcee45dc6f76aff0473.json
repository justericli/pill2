{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nimport { ConsoleLogger as Logger } from '@aws-amplify/core';\nvar logger = new Logger('AbstractPubSubProvider');\nvar AbstractPubSubProvider = /** @class */function () {\n  function AbstractPubSubProvider(options) {\n    if (options === void 0) {\n      options = {};\n    }\n    this._config = options;\n  }\n  AbstractPubSubProvider.prototype.configure = function (config) {\n    if (config === void 0) {\n      config = {};\n    }\n    this._config = __assign(__assign({}, config), this._config);\n    logger.debug(\"configure \" + this.getProviderName(), this._config);\n    return this.options;\n  };\n  AbstractPubSubProvider.prototype.getCategory = function () {\n    return 'PubSub';\n  };\n  Object.defineProperty(AbstractPubSubProvider.prototype, \"options\", {\n    get: function () {\n      return __assign({}, this._config);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return AbstractPubSubProvider;\n}();\nexport { AbstractPubSubProvider };","map":{"version":3,"names":["ConsoleLogger","Logger","logger","AbstractPubSubProvider","options","_config","prototype","configure","config","__assign","debug","getProviderName","getCategory","Object","defineProperty","get"],"sources":["/Users/ericli/node_modules/@aws-amplify/api-graphql/node_modules/@aws-amplify/pubsub/src/Providers/PubSubProvider.ts"],"sourcesContent":["/*\n * Copyright 2017-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nimport Observable from 'zen-observable-ts';\nimport { PubSubProvider, ProvidertOptions } from '../types';\nimport { ConsoleLogger as Logger } from '@aws-amplify/core';\n\nconst logger = new Logger('AbstractPubSubProvider');\n\nexport abstract class AbstractPubSubProvider implements PubSubProvider {\n\tprivate _config: ProvidertOptions;\n\n\tconstructor(options: ProvidertOptions = {}) {\n\t\tthis._config = options;\n\t}\n\n\tconfigure(config: ProvidertOptions = {}): ProvidertOptions {\n\t\tthis._config = { ...config, ...this._config };\n\n\t\tlogger.debug(`configure ${this.getProviderName()}`, this._config);\n\n\t\treturn this.options;\n\t}\n\n\tgetCategory() {\n\t\treturn 'PubSub';\n\t}\n\n\tabstract getProviderName(): string;\n\n\tprotected get options(): ProvidertOptions {\n\t\treturn { ...this._config };\n\t}\n\n\tpublic abstract newClient(clientOptions: ProvidertOptions): Promise<any>;\n\n\tpublic abstract publish(\n\t\ttopics: string[] | string,\n\t\tmsg: any,\n\t\toptions?: ProvidertOptions\n\t): void;\n\n\tpublic abstract subscribe(\n\t\ttopics: string[] | string,\n\t\toptions?: ProvidertOptions\n\t): Observable<any>;\n}\n"],"mappings":";;;;;;;;;;AAcA,SAASA,aAAa,IAAIC,MAAM,QAAQ,mBAAmB;AAE3D,IAAMC,MAAM,GAAG,IAAID,MAAM,CAAC,wBAAwB,CAAC;AAEnD,IAAAE,sBAAA;EAGC,SAAAA,uBAAYC,OAA8B;IAA9B,IAAAA,OAAA;MAAAA,OAAA,KAA8B;IAAA;IACzC,IAAI,CAACC,OAAO,GAAGD,OAAO;EACvB;EAEAD,sBAAA,CAAAG,SAAA,CAAAC,SAAS,GAAT,UAAUC,MAA6B;IAA7B,IAAAA,MAAA;MAAAA,MAAA,KAA6B;IAAA;IACtC,IAAI,CAACH,OAAO,GAAAI,QAAA,CAAAA,QAAA,KAAQD,MAAM,GAAK,IAAI,CAACH,OAAO,CAAE;IAE7CH,MAAM,CAACQ,KAAK,CAAC,eAAa,IAAI,CAACC,eAAe,EAAI,EAAE,IAAI,CAACN,OAAO,CAAC;IAEjE,OAAO,IAAI,CAACD,OAAO;EACpB,CAAC;EAEDD,sBAAA,CAAAG,SAAA,CAAAM,WAAW,GAAX;IACC,OAAO,QAAQ;EAChB,CAAC;EAIDC,MAAA,CAAAC,cAAA,CAAcX,sBAAA,CAAAG,SAAA,WAAO;SAArB,SAAAS,CAAA;MACC,OAAAN,QAAA,KAAY,IAAI,CAACJ,OAAO;IACzB,CAAC;;;;EAcF,OAAAF,sBAAC;AAAD,CAAC,EArCD"},"metadata":{},"sourceType":"module","externalDependencies":[]}