{"ast":null,"code":"import { ListObjectsV2Command } from \"../commands/ListObjectsV2Command\";\nimport { S3Client } from \"../S3Client\";\nconst makePagedClientRequest = async function (client, input) {\n  for (var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n    args[_key - 2] = arguments[_key];\n  }\n  return await client.send(new ListObjectsV2Command(input), ...args);\n};\nexport async function* paginateListObjectsV2(config, input) {\n  let token = config.startingToken || undefined;\n  let hasNext = true;\n  let page;\n  for (var _len2 = arguments.length, additionalArguments = new Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {\n    additionalArguments[_key2 - 2] = arguments[_key2];\n  }\n  while (hasNext) {\n    input.ContinuationToken = token;\n    input[\"MaxKeys\"] = config.pageSize;\n    if (config.client instanceof S3Client) {\n      page = await makePagedClientRequest(config.client, input, ...additionalArguments);\n    } else {\n      throw new Error(\"Invalid client, expected S3 | S3Client\");\n    }\n    yield page;\n    const prevToken = token;\n    token = page.NextContinuationToken;\n    hasNext = !!(token && (!config.stopOnSameToken || token !== prevToken));\n  }\n  return undefined;\n}","map":{"version":3,"names":["ListObjectsV2Command","S3Client","makePagedClientRequest","client","input","_len","arguments","length","args","Array","_key","send","paginateListObjectsV2","config","token","startingToken","undefined","hasNext","page","_len2","additionalArguments","_key2","ContinuationToken","pageSize","Error","prevToken","NextContinuationToken","stopOnSameToken"],"sources":["/Users/ericli/Desktop/pill2/node_modules/@aws-sdk/client-s3/dist-es/pagination/ListObjectsV2Paginator.js"],"sourcesContent":["import { ListObjectsV2Command, } from \"../commands/ListObjectsV2Command\";\nimport { S3Client } from \"../S3Client\";\nconst makePagedClientRequest = async (client, input, ...args) => {\n    return await client.send(new ListObjectsV2Command(input), ...args);\n};\nexport async function* paginateListObjectsV2(config, input, ...additionalArguments) {\n    let token = config.startingToken || undefined;\n    let hasNext = true;\n    let page;\n    while (hasNext) {\n        input.ContinuationToken = token;\n        input[\"MaxKeys\"] = config.pageSize;\n        if (config.client instanceof S3Client) {\n            page = await makePagedClientRequest(config.client, input, ...additionalArguments);\n        }\n        else {\n            throw new Error(\"Invalid client, expected S3 | S3Client\");\n        }\n        yield page;\n        const prevToken = token;\n        token = page.NextContinuationToken;\n        hasNext = !!(token && (!config.stopOnSameToken || token !== prevToken));\n    }\n    return undefined;\n}\n"],"mappings":"AAAA,SAASA,oBAAoB,QAAS,kCAAkC;AACxE,SAASC,QAAQ,QAAQ,aAAa;AACtC,MAAMC,sBAAsB,GAAG,eAAAA,CAAOC,MAAM,EAAEC,KAAK,EAAc;EAAA,SAAAC,IAAA,GAAAC,SAAA,CAAAC,MAAA,EAATC,IAAI,OAAAC,KAAA,CAAAJ,IAAA,OAAAA,IAAA,WAAAK,IAAA,MAAAA,IAAA,GAAAL,IAAA,EAAAK,IAAA;IAAJF,IAAI,CAAAE,IAAA,QAAAJ,SAAA,CAAAI,IAAA;EAAA;EACxD,OAAO,MAAMP,MAAM,CAACQ,IAAI,CAAC,IAAIX,oBAAoB,CAACI,KAAK,CAAC,EAAE,GAAGI,IAAI,CAAC;AACtE,CAAC;AACD,OAAO,gBAAgBI,qBAAqBA,CAACC,MAAM,EAAET,KAAK,EAA0B;EAChF,IAAIU,KAAK,GAAGD,MAAM,CAACE,aAAa,IAAIC,SAAS;EAC7C,IAAIC,OAAO,GAAG,IAAI;EAClB,IAAIC,IAAI;EAAC,SAAAC,KAAA,GAAAb,SAAA,CAAAC,MAAA,EAHkDa,mBAAmB,OAAAX,KAAA,CAAAU,KAAA,OAAAA,KAAA,WAAAE,KAAA,MAAAA,KAAA,GAAAF,KAAA,EAAAE,KAAA;IAAnBD,mBAAmB,CAAAC,KAAA,QAAAf,SAAA,CAAAe,KAAA;EAAA;EAI9E,OAAOJ,OAAO,EAAE;IACZb,KAAK,CAACkB,iBAAiB,GAAGR,KAAK;IAC/BV,KAAK,CAAC,SAAS,CAAC,GAAGS,MAAM,CAACU,QAAQ;IAClC,IAAIV,MAAM,CAACV,MAAM,YAAYF,QAAQ,EAAE;MACnCiB,IAAI,GAAG,MAAMhB,sBAAsB,CAACW,MAAM,CAACV,MAAM,EAAEC,KAAK,EAAE,GAAGgB,mBAAmB,CAAC;IACrF,CAAC,MACI;MACD,MAAM,IAAII,KAAK,CAAC,wCAAwC,CAAC;IAC7D;IACA,MAAMN,IAAI;IACV,MAAMO,SAAS,GAAGX,KAAK;IACvBA,KAAK,GAAGI,IAAI,CAACQ,qBAAqB;IAClCT,OAAO,GAAG,CAAC,EAAEH,KAAK,KAAK,CAACD,MAAM,CAACc,eAAe,IAAIb,KAAK,KAAKW,SAAS,CAAC,CAAC;EAC3E;EACA,OAAOT,SAAS;AACpB"},"metadata":{},"sourceType":"module","externalDependencies":[]}