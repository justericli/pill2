{"ast":null,"code":"import { __awaiter, __generator } from \"tslib\";\nimport { toHex } from \"@aws-sdk/util-hex-encoding\";\nimport { ALGORITHM_IDENTIFIER, ALGORITHM_QUERY_PARAM, AMZ_DATE_HEADER, AMZ_DATE_QUERY_PARAM, AUTH_HEADER, CREDENTIAL_QUERY_PARAM, EVENT_ALGORITHM_IDENTIFIER, EXPIRES_QUERY_PARAM, MAX_PRESIGNED_TTL, SHA256_HEADER, SIGNATURE_QUERY_PARAM, SIGNED_HEADERS_QUERY_PARAM, TOKEN_HEADER, TOKEN_QUERY_PARAM } from \"./constants\";\nimport { createScope, getSigningKey } from \"./credentialDerivation\";\nimport { getCanonicalHeaders } from \"./getCanonicalHeaders\";\nimport { getCanonicalQuery } from \"./getCanonicalQuery\";\nimport { getPayloadHash } from \"./getPayloadHash\";\nimport { hasHeader } from \"./hasHeader\";\nimport { moveHeadersToQuery } from \"./moveHeadersToQuery\";\nimport { prepareRequest } from \"./prepareRequest\";\nimport { iso8601 } from \"./utilDate\";\nvar SignatureV4 = /** @class */function () {\n  function SignatureV4(_a) {\n    var applyChecksum = _a.applyChecksum,\n      credentials = _a.credentials,\n      region = _a.region,\n      service = _a.service,\n      sha256 = _a.sha256,\n      _b = _a.uriEscapePath,\n      uriEscapePath = _b === void 0 ? true : _b;\n    this.service = service;\n    this.sha256 = sha256;\n    this.uriEscapePath = uriEscapePath;\n    // default to true if applyChecksum isn't set\n    this.applyChecksum = typeof applyChecksum === \"boolean\" ? applyChecksum : true;\n    this.regionProvider = normalizeRegionProvider(region);\n    this.credentialProvider = normalizeCredentialsProvider(credentials);\n  }\n  SignatureV4.prototype.presign = function (originalRequest, options) {\n    if (options === void 0) {\n      options = {};\n    }\n    return __awaiter(this, void 0, void 0, function () {\n      var _a, signingDate, _b, expiresIn, unsignableHeaders, signableHeaders, signingRegion, signingService, credentials, region, _c, _d, longDate, shortDate, scope, request, canonicalHeaders, _e, _f, _g, _h, _j, _k;\n      return __generator(this, function (_l) {\n        switch (_l.label) {\n          case 0:\n            _a = options.signingDate, signingDate = _a === void 0 ? new Date() : _a, _b = options.expiresIn, expiresIn = _b === void 0 ? 3600 : _b, unsignableHeaders = options.unsignableHeaders, signableHeaders = options.signableHeaders, signingRegion = options.signingRegion, signingService = options.signingService;\n            return [4 /*yield*/, this.credentialProvider()];\n          case 1:\n            credentials = _l.sent();\n            if (!(signingRegion !== null && signingRegion !== void 0)) return [3 /*break*/, 2];\n            _c = signingRegion;\n            return [3 /*break*/, 4];\n          case 2:\n            return [4 /*yield*/, this.regionProvider()];\n          case 3:\n            _c = _l.sent();\n            _l.label = 4;\n          case 4:\n            region = _c;\n            _d = formatDate(signingDate), longDate = _d.longDate, shortDate = _d.shortDate;\n            if (expiresIn > MAX_PRESIGNED_TTL) {\n              return [2 /*return*/, Promise.reject(\"Signature version 4 presigned URLs\" + \" must have an expiration date less than one week in\" + \" the future\")];\n            }\n            scope = createScope(shortDate, region, signingService !== null && signingService !== void 0 ? signingService : this.service);\n            request = moveHeadersToQuery(prepareRequest(originalRequest));\n            if (credentials.sessionToken) {\n              request.query[TOKEN_QUERY_PARAM] = credentials.sessionToken;\n            }\n            request.query[ALGORITHM_QUERY_PARAM] = ALGORITHM_IDENTIFIER;\n            request.query[CREDENTIAL_QUERY_PARAM] = credentials.accessKeyId + \"/\" + scope;\n            request.query[AMZ_DATE_QUERY_PARAM] = longDate;\n            request.query[EXPIRES_QUERY_PARAM] = expiresIn.toString(10);\n            canonicalHeaders = getCanonicalHeaders(request, unsignableHeaders, signableHeaders);\n            request.query[SIGNED_HEADERS_QUERY_PARAM] = getCanonicalHeaderList(canonicalHeaders);\n            _e = request.query;\n            _f = SIGNATURE_QUERY_PARAM;\n            _g = this.getSignature;\n            _h = [longDate, scope, this.getSigningKey(credentials, region, shortDate, signingService)];\n            _j = this.createCanonicalRequest;\n            _k = [request, canonicalHeaders];\n            return [4 /*yield*/, getPayloadHash(originalRequest, this.sha256)];\n          case 5:\n            return [4 /*yield*/, _g.apply(this, _h.concat([_j.apply(this, _k.concat([_l.sent()]))]))];\n          case 6:\n            _e[_f] = _l.sent();\n            return [2 /*return*/, request];\n        }\n      });\n    });\n  };\n  SignatureV4.prototype.sign = function (toSign, options) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        if (typeof toSign === \"string\") {\n          return [2 /*return*/, this.signString(toSign, options)];\n        } else if (toSign.headers && toSign.payload) {\n          return [2 /*return*/, this.signEvent(toSign, options)];\n        } else {\n          return [2 /*return*/, this.signRequest(toSign, options)];\n        }\n        return [2 /*return*/];\n      });\n    });\n  };\n\n  SignatureV4.prototype.signEvent = function (_a, _b) {\n    var headers = _a.headers,\n      payload = _a.payload;\n    var _c = _b.signingDate,\n      signingDate = _c === void 0 ? new Date() : _c,\n      priorSignature = _b.priorSignature,\n      signingRegion = _b.signingRegion,\n      signingService = _b.signingService;\n    return __awaiter(this, void 0, void 0, function () {\n      var region, _d, _e, shortDate, longDate, scope, hashedPayload, hash, hashedHeaders, _f, stringToSign;\n      return __generator(this, function (_g) {\n        switch (_g.label) {\n          case 0:\n            if (!(signingRegion !== null && signingRegion !== void 0)) return [3 /*break*/, 1];\n            _d = signingRegion;\n            return [3 /*break*/, 3];\n          case 1:\n            return [4 /*yield*/, this.regionProvider()];\n          case 2:\n            _d = _g.sent();\n            _g.label = 3;\n          case 3:\n            region = _d;\n            _e = formatDate(signingDate), shortDate = _e.shortDate, longDate = _e.longDate;\n            scope = createScope(shortDate, region, signingService !== null && signingService !== void 0 ? signingService : this.service);\n            return [4 /*yield*/, getPayloadHash({\n              headers: {},\n              body: payload\n            }, this.sha256)];\n          case 4:\n            hashedPayload = _g.sent();\n            hash = new this.sha256();\n            hash.update(headers);\n            _f = toHex;\n            return [4 /*yield*/, hash.digest()];\n          case 5:\n            hashedHeaders = _f.apply(void 0, [_g.sent()]);\n            stringToSign = [EVENT_ALGORITHM_IDENTIFIER, longDate, scope, priorSignature, hashedHeaders, hashedPayload].join(\"\\n\");\n            return [2 /*return*/, this.signString(stringToSign, {\n              signingDate: signingDate,\n              signingRegion: region,\n              signingService: signingService\n            })];\n        }\n      });\n    });\n  };\n  SignatureV4.prototype.signString = function (stringToSign, _a) {\n    var _b = _a === void 0 ? {} : _a,\n      _c = _b.signingDate,\n      signingDate = _c === void 0 ? new Date() : _c,\n      signingRegion = _b.signingRegion,\n      signingService = _b.signingService;\n    return __awaiter(this, void 0, void 0, function () {\n      var credentials, region, _d, shortDate, hash, _e, _f, _g;\n      return __generator(this, function (_h) {\n        switch (_h.label) {\n          case 0:\n            return [4 /*yield*/, this.credentialProvider()];\n          case 1:\n            credentials = _h.sent();\n            if (!(signingRegion !== null && signingRegion !== void 0)) return [3 /*break*/, 2];\n            _d = signingRegion;\n            return [3 /*break*/, 4];\n          case 2:\n            return [4 /*yield*/, this.regionProvider()];\n          case 3:\n            _d = _h.sent();\n            _h.label = 4;\n          case 4:\n            region = _d;\n            shortDate = formatDate(signingDate).shortDate;\n            _f = (_e = this.sha256).bind;\n            return [4 /*yield*/, this.getSigningKey(credentials, region, shortDate, signingService)];\n          case 5:\n            hash = new (_f.apply(_e, [void 0, _h.sent()]))();\n            hash.update(stringToSign);\n            _g = toHex;\n            return [4 /*yield*/, hash.digest()];\n          case 6:\n            return [2 /*return*/, _g.apply(void 0, [_h.sent()])];\n        }\n      });\n    });\n  };\n  SignatureV4.prototype.signRequest = function (requestToSign, _a) {\n    var _b = _a === void 0 ? {} : _a,\n      _c = _b.signingDate,\n      signingDate = _c === void 0 ? new Date() : _c,\n      signableHeaders = _b.signableHeaders,\n      unsignableHeaders = _b.unsignableHeaders,\n      signingRegion = _b.signingRegion,\n      signingService = _b.signingService;\n    return __awaiter(this, void 0, void 0, function () {\n      var credentials, region, _d, request, _e, longDate, shortDate, scope, payloadHash, canonicalHeaders, signature;\n      return __generator(this, function (_f) {\n        switch (_f.label) {\n          case 0:\n            return [4 /*yield*/, this.credentialProvider()];\n          case 1:\n            credentials = _f.sent();\n            if (!(signingRegion !== null && signingRegion !== void 0)) return [3 /*break*/, 2];\n            _d = signingRegion;\n            return [3 /*break*/, 4];\n          case 2:\n            return [4 /*yield*/, this.regionProvider()];\n          case 3:\n            _d = _f.sent();\n            _f.label = 4;\n          case 4:\n            region = _d;\n            request = prepareRequest(requestToSign);\n            _e = formatDate(signingDate), longDate = _e.longDate, shortDate = _e.shortDate;\n            scope = createScope(shortDate, region, signingService !== null && signingService !== void 0 ? signingService : this.service);\n            request.headers[AMZ_DATE_HEADER] = longDate;\n            if (credentials.sessionToken) {\n              request.headers[TOKEN_HEADER] = credentials.sessionToken;\n            }\n            return [4 /*yield*/, getPayloadHash(request, this.sha256)];\n          case 5:\n            payloadHash = _f.sent();\n            if (!hasHeader(SHA256_HEADER, request.headers) && this.applyChecksum) {\n              request.headers[SHA256_HEADER] = payloadHash;\n            }\n            canonicalHeaders = getCanonicalHeaders(request, unsignableHeaders, signableHeaders);\n            return [4 /*yield*/, this.getSignature(longDate, scope, this.getSigningKey(credentials, region, shortDate, signingService), this.createCanonicalRequest(request, canonicalHeaders, payloadHash))];\n          case 6:\n            signature = _f.sent();\n            request.headers[AUTH_HEADER] = ALGORITHM_IDENTIFIER + \" \" + (\"Credential=\" + credentials.accessKeyId + \"/\" + scope + \", \") + (\"SignedHeaders=\" + getCanonicalHeaderList(canonicalHeaders) + \", \") + (\"Signature=\" + signature);\n            return [2 /*return*/, request];\n        }\n      });\n    });\n  };\n  SignatureV4.prototype.createCanonicalRequest = function (request, canonicalHeaders, payloadHash) {\n    var sortedHeaders = Object.keys(canonicalHeaders).sort();\n    return request.method + \"\\n\" + this.getCanonicalPath(request) + \"\\n\" + getCanonicalQuery(request) + \"\\n\" + sortedHeaders.map(function (name) {\n      return name + \":\" + canonicalHeaders[name];\n    }).join(\"\\n\") + \"\\n\\n\" + sortedHeaders.join(\";\") + \"\\n\" + payloadHash;\n  };\n  SignatureV4.prototype.createStringToSign = function (longDate, credentialScope, canonicalRequest) {\n    return __awaiter(this, void 0, void 0, function () {\n      var hash, hashedRequest;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            hash = new this.sha256();\n            hash.update(canonicalRequest);\n            return [4 /*yield*/, hash.digest()];\n          case 1:\n            hashedRequest = _a.sent();\n            return [2 /*return*/, ALGORITHM_IDENTIFIER + \"\\n\" + longDate + \"\\n\" + credentialScope + \"\\n\" + toHex(hashedRequest)];\n        }\n      });\n    });\n  };\n  SignatureV4.prototype.getCanonicalPath = function (_a) {\n    var path = _a.path;\n    if (this.uriEscapePath) {\n      var doubleEncoded = encodeURIComponent(path.replace(/^\\//, \"\"));\n      return \"/\" + doubleEncoded.replace(/%2F/g, \"/\");\n    }\n    return path;\n  };\n  SignatureV4.prototype.getSignature = function (longDate, credentialScope, keyPromise, canonicalRequest) {\n    return __awaiter(this, void 0, void 0, function () {\n      var stringToSign, hash, _a, _b, _c;\n      return __generator(this, function (_d) {\n        switch (_d.label) {\n          case 0:\n            return [4 /*yield*/, this.createStringToSign(longDate, credentialScope, canonicalRequest)];\n          case 1:\n            stringToSign = _d.sent();\n            _b = (_a = this.sha256).bind;\n            return [4 /*yield*/, keyPromise];\n          case 2:\n            hash = new (_b.apply(_a, [void 0, _d.sent()]))();\n            hash.update(stringToSign);\n            _c = toHex;\n            return [4 /*yield*/, hash.digest()];\n          case 3:\n            return [2 /*return*/, _c.apply(void 0, [_d.sent()])];\n        }\n      });\n    });\n  };\n  SignatureV4.prototype.getSigningKey = function (credentials, region, shortDate, service) {\n    return getSigningKey(this.sha256, credentials, shortDate, region, service || this.service);\n  };\n  return SignatureV4;\n}();\nexport { SignatureV4 };\nvar formatDate = function (now) {\n  var longDate = iso8601(now).replace(/[\\-:]/g, \"\");\n  return {\n    longDate: longDate,\n    shortDate: longDate.substr(0, 8)\n  };\n};\nvar getCanonicalHeaderList = function (headers) {\n  return Object.keys(headers).sort().join(\";\");\n};\nvar normalizeRegionProvider = function (region) {\n  if (typeof region === \"string\") {\n    var promisified_1 = Promise.resolve(region);\n    return function () {\n      return promisified_1;\n    };\n  } else {\n    return region;\n  }\n};\nvar normalizeCredentialsProvider = function (credentials) {\n  if (typeof credentials === \"object\") {\n    var promisified_2 = Promise.resolve(credentials);\n    return function () {\n      return promisified_2;\n    };\n  } else {\n    return credentials;\n  }\n};","map":{"version":3,"names":["toHex","ALGORITHM_IDENTIFIER","ALGORITHM_QUERY_PARAM","AMZ_DATE_HEADER","AMZ_DATE_QUERY_PARAM","AUTH_HEADER","CREDENTIAL_QUERY_PARAM","EVENT_ALGORITHM_IDENTIFIER","EXPIRES_QUERY_PARAM","MAX_PRESIGNED_TTL","SHA256_HEADER","SIGNATURE_QUERY_PARAM","SIGNED_HEADERS_QUERY_PARAM","TOKEN_HEADER","TOKEN_QUERY_PARAM","createScope","getSigningKey","getCanonicalHeaders","getCanonicalQuery","getPayloadHash","hasHeader","moveHeadersToQuery","prepareRequest","iso8601","SignatureV4","_a","applyChecksum","credentials","region","service","sha256","_b","uriEscapePath","regionProvider","normalizeRegionProvider","credentialProvider","normalizeCredentialsProvider","prototype","presign","originalRequest","options","signingDate","Date","expiresIn","unsignableHeaders","signableHeaders","signingRegion","signingService","_l","sent","_c","_d","formatDate","longDate","shortDate","Promise","reject","scope","request","sessionToken","query","accessKeyId","toString","canonicalHeaders","getCanonicalHeaderList","_e","_f","_g","getSignature","_j","createCanonicalRequest","apply","_h","concat","_k","sign","toSign","signString","headers","payload","signEvent","signRequest","priorSignature","body","hashedPayload","hash","update","digest","hashedHeaders","stringToSign","join","bind","requestToSign","payloadHash","signature","sortedHeaders","Object","keys","sort","method","getCanonicalPath","map","name","createStringToSign","credentialScope","canonicalRequest","hashedRequest","path","doubleEncoded","encodeURIComponent","replace","keyPromise","now","substr","promisified_1","resolve","promisified_2"],"sources":["../../src/SignatureV4.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}