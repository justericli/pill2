{"ast":null,"code":"var _jsxFileName = \"/Users/ericli/Desktop/pill2/src/components/Forms/ListingForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Dropzone from \"react-dropzone\";\nimport { S3Client, PutObjectCommand } from \"@aws-sdk/client-s3\";\nimport { BsCloudUpload } from \"react-icons/bs\";\nimport PlacesAutocomplete, { geocodeByAddress, getLatLng } from \"react-google-places-autocomplete\";\n\n// Configure the AWS SDK\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst s3 = new S3Client({\n  region: \"us-east-1\",\n  // Replace with your desired region\n  credentials: {\n    accessKeyId: \"AKIA2AJRN6P67CIV6TTD\",\n    secretAccessKey: \"ZA/r6XSUs2GdDq5Io3ryjJolRvp31WMvIMKj9pRp\"\n  }\n});\nconst ImageUpload = () => {\n  _s();\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [cost, setCost] = useState(\"\");\n  const [address, setAddress] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n\n  // Add your Google Maps API key here\n  const GOOGLE_MAPS_API_KEY = \"AIzaSyBYjnS4jS4wvokqFuovLwp8kOJ_Aa1Qi-c\";\n  const handleFileDrop = acceptedFiles => {\n    setSelectedFile(acceptedFiles[0]);\n  };\n  const handleUpload = async () => {\n    if (selectedFile) {\n      const params = {\n        Bucket: \"pilli-storage-f68b2ca801743-dev\",\n        Key: selectedFile.name,\n        Body: selectedFile,\n        ACL: \"public-read\" // Set the desired access control level for the uploaded image\n      };\n\n      try {\n        const data = await s3.send(new PutObjectCommand(params));\n        console.log(\"Image uploaded successfully:\", data);\n        // Perform any further actions after successful image upload\n      } catch (err) {\n        console.log(\"Error:\", err);\n      }\n    }\n  };\n  const handleAddressSelect = selected => {\n    setAddress(selected.label);\n    geocodeByAddress(selected.label).then(results => getLatLng(results[0])).then(latLng => {\n      console.log(\"Latitude:\", latLng.lat);\n      console.log(\"Longitude:\", latLng.lng);\n    }).catch(error => console.error(\"Error:\", error));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      height: \"100vh\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Dropzone, {\n        onDrop: handleFileDrop,\n        children: _ref => {\n          let {\n            getRootProps,\n            getInputProps\n          } = _ref;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            ...getRootProps(),\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              ...getInputProps()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 15\n            }, this), selectedFile ? /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"Selected file: \", selectedFile.name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                children: \"Create a new listing\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(BsCloudUpload, {\n                size: 48\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: \"Drag and drop an image here or click to select\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Cost:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: cost,\n            onChange: e => setCost(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Address:\", /*#__PURE__*/_jsxDEV(PlacesAutocomplete, {\n            value: address,\n            onChange: value => setAddress(value),\n            onSelect: handleAddressSelect,\n            apiKey: GOOGLE_MAPS_API_KEY\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Email:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: email,\n            onChange: e => setEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleUpload,\n        children: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n_s(ImageUpload, \"GCO4KQ/RCLApKDGvYNMP94HzIV0=\");\n_c = ImageUpload;\nexport default ImageUpload;\nvar _c;\n$RefreshReg$(_c, \"ImageUpload\");","map":{"version":3,"names":["React","useState","Dropzone","S3Client","PutObjectCommand","BsCloudUpload","PlacesAutocomplete","geocodeByAddress","getLatLng","jsxDEV","_jsxDEV","s3","region","credentials","accessKeyId","secretAccessKey","ImageUpload","_s","selectedFile","setSelectedFile","cost","setCost","address","setAddress","email","setEmail","GOOGLE_MAPS_API_KEY","handleFileDrop","acceptedFiles","handleUpload","params","Bucket","Key","name","Body","ACL","data","send","console","log","err","handleAddressSelect","selected","label","then","results","latLng","lat","lng","catch","error","style","display","justifyContent","alignItems","height","children","onDrop","_ref","getRootProps","getInputProps","fileName","_jsxFileName","lineNumber","columnNumber","size","type","value","onChange","e","target","onSelect","apiKey","onClick","_c","$RefreshReg$"],"sources":["/Users/ericli/Desktop/pill2/src/components/Forms/ListingForm.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport Dropzone from \"react-dropzone\";\nimport { S3Client, PutObjectCommand } from \"@aws-sdk/client-s3\";\nimport { BsCloudUpload } from \"react-icons/bs\";\nimport PlacesAutocomplete, {\n  geocodeByAddress,\n  getLatLng,\n} from \"react-google-places-autocomplete\";\n\n// Configure the AWS SDK\nconst s3 = new S3Client({\n  region: \"us-east-1\", // Replace with your desired region\n  credentials: {\n    accessKeyId: \"AKIA2AJRN6P67CIV6TTD\",\n    secretAccessKey: \"ZA/r6XSUs2GdDq5Io3ryjJolRvp31WMvIMKj9pRp\",\n  },\n});\n\nconst ImageUpload = () => {\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [cost, setCost] = useState(\"\");\n  const [address, setAddress] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n\n  // Add your Google Maps API key here\n  const GOOGLE_MAPS_API_KEY = \"AIzaSyBYjnS4jS4wvokqFuovLwp8kOJ_Aa1Qi-c\";\n\n  const handleFileDrop = (acceptedFiles) => {\n    setSelectedFile(acceptedFiles[0]);\n  };\n\n  const handleUpload = async () => {\n    if (selectedFile) {\n      const params = {\n        Bucket: \"pilli-storage-f68b2ca801743-dev\",\n        Key: selectedFile.name,\n        Body: selectedFile,\n        ACL: \"public-read\", // Set the desired access control level for the uploaded image\n      };\n\n      try {\n        const data = await s3.send(new PutObjectCommand(params));\n        console.log(\"Image uploaded successfully:\", data);\n        // Perform any further actions after successful image upload\n      } catch (err) {\n        console.log(\"Error:\", err);\n      }\n    }\n  };\n\n  const handleAddressSelect = (selected) => {\n    setAddress(selected.label);\n    geocodeByAddress(selected.label)\n      .then((results) => getLatLng(results[0]))\n      .then((latLng) => {\n        console.log(\"Latitude:\", latLng.lat);\n        console.log(\"Longitude:\", latLng.lng);\n      })\n      .catch((error) => console.error(\"Error:\", error));\n  };\n\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        height: \"100vh\",\n      }}\n    >\n      <div>\n        <Dropzone onDrop={handleFileDrop}>\n          {({ getRootProps, getInputProps }) => (\n            <div {...getRootProps()}>\n              <input {...getInputProps()} />\n              {selectedFile ? (\n                <div>Selected file: {selectedFile.name}</div>\n              ) : (\n                <div>\n                  <h1>Create a new listing</h1>\n                  <BsCloudUpload size={48} />\n                  <div>Drag and drop an image here or click to select</div>\n                </div>\n              )}\n            </div>\n          )}\n        </Dropzone>\n        <form>\n          <label>\n            Cost:\n            <input\n              type=\"text\"\n              value={cost}\n              onChange={(e) => setCost(e.target.value)}\n            />\n          </label>\n          <label>\n            Address:\n            <PlacesAutocomplete\n              value={address}\n              onChange={(value) => setAddress(value)}\n              onSelect={handleAddressSelect}\n              apiKey={GOOGLE_MAPS_API_KEY}\n            />\n          </label>\n          <label>\n            Email:\n            <input\n              type=\"text\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n            />\n          </label>\n        </form>\n        <button onClick={handleUpload}>Upload</button>\n      </div>\n    </div>\n  );\n};\n\nexport default ImageUpload;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}