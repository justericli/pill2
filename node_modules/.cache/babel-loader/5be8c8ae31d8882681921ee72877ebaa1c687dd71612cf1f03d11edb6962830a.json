{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nvar _a;\nimport { InAppMessageInteractionEvent } from './types';\nvar onMessageActionListeners = (_a = {}, _a[InAppMessageInteractionEvent.MESSAGE_RECEIVED] = new Set(), _a[InAppMessageInteractionEvent.MESSAGE_DISPLAYED] = new Set(), _a[InAppMessageInteractionEvent.MESSAGE_DISMISSED] = new Set(), _a[InAppMessageInteractionEvent.MESSAGE_ACTION_TAKEN] = new Set(), _a);\nexport var notifyMessageInteractionEventListeners = function (message, event) {\n  onMessageActionListeners[event].forEach(function (listener) {\n    listener.handleEvent(message);\n  });\n};\nexport var addMessageInteractionEventListener = function (handler, event) {\n  var listener = {\n    handleEvent: handler,\n    remove: function () {\n      onMessageActionListeners[event].delete(listener);\n    }\n  };\n  onMessageActionListeners[event].add(listener);\n  return listener;\n};","map":{"version":3,"names":["InAppMessageInteractionEvent","onMessageActionListeners","_a","MESSAGE_RECEIVED","Set","MESSAGE_DISPLAYED","MESSAGE_DISMISSED","MESSAGE_ACTION_TAKEN","notifyMessageInteractionEventListeners","message","event","forEach","listener","handleEvent","addMessageInteractionEventListener","handler","remove","delete","add"],"sources":["/Users/ericli/node_modules/@aws-amplify/notifications/src/InAppMessaging/eventListeners.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport {\n\tInAppMessage,\n\tInAppMessageInteractionEvent,\n\tOnMessageInteractionEventHandler,\n\tOnMessageInteractionEventListener,\n} from './types';\n\nconst onMessageActionListeners: Record<\n\tInAppMessageInteractionEvent,\n\tSet<OnMessageInteractionEventListener>\n> = {\n\t[InAppMessageInteractionEvent.MESSAGE_RECEIVED]: new Set(),\n\t[InAppMessageInteractionEvent.MESSAGE_DISPLAYED]: new Set(),\n\t[InAppMessageInteractionEvent.MESSAGE_DISMISSED]: new Set(),\n\t[InAppMessageInteractionEvent.MESSAGE_ACTION_TAKEN]: new Set(),\n};\n\nexport const notifyMessageInteractionEventListeners = (\n\tmessage: InAppMessage,\n\tevent: InAppMessageInteractionEvent\n): void => {\n\tonMessageActionListeners[event].forEach(listener => {\n\t\tlistener.handleEvent(message);\n\t});\n};\n\nexport const addMessageInteractionEventListener = (\n\thandler: OnMessageInteractionEventHandler,\n\tevent: InAppMessageInteractionEvent\n): OnMessageInteractionEventListener => {\n\tconst listener = {\n\t\thandleEvent: handler,\n\t\tremove: () => {\n\t\t\tonMessageActionListeners[event].delete(listener);\n\t\t},\n\t};\n\tonMessageActionListeners[event].add(listener);\n\treturn listener;\n};\n"],"mappings":"AAAA;AACA;;AAEA,SAECA,4BAA4B,QAGtB,SAAS;AAEhB,IAAMC,wBAAwB,IAAAC,EAAA,OAI7BA,EAAA,CAACF,4BAA4B,CAACG,gBAAgB,IAAG,IAAIC,GAAG,EAAE,EAC1DF,EAAA,CAACF,4BAA4B,CAACK,iBAAiB,IAAG,IAAID,GAAG,EAAE,EAC3DF,EAAA,CAACF,4BAA4B,CAACM,iBAAiB,IAAG,IAAIF,GAAG,EAAE,EAC3DF,EAAA,CAACF,4BAA4B,CAACO,oBAAoB,IAAG,IAAIH,GAAG,EAAE,E,GAC9D;AAED,OAAO,IAAMI,sCAAsC,GAAG,SAAAA,CACrDC,OAAqB,EACrBC,KAAmC;EAEnCT,wBAAwB,CAACS,KAAK,CAAC,CAACC,OAAO,CAAC,UAAAC,QAAQ;IAC/CA,QAAQ,CAACC,WAAW,CAACJ,OAAO,CAAC;EAC9B,CAAC,CAAC;AACH,CAAC;AAED,OAAO,IAAMK,kCAAkC,GAAG,SAAAA,CACjDC,OAAyC,EACzCL,KAAmC;EAEnC,IAAME,QAAQ,GAAG;IAChBC,WAAW,EAAEE,OAAO;IACpBC,MAAM,EAAE,SAAAA,CAAA;MACPf,wBAAwB,CAACS,KAAK,CAAC,CAACO,MAAM,CAACL,QAAQ,CAAC;IACjD;GACA;EACDX,wBAAwB,CAACS,KAAK,CAAC,CAACQ,GAAG,CAACN,QAAQ,CAAC;EAC7C,OAAOA,QAAQ;AAChB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}