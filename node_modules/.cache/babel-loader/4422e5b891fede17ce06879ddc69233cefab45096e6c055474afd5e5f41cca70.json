{"ast":null,"code":"/*\n * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n      label: 0,\n      sent: function () {\n        if (t[0] & 1) throw t[1];\n        return t[1];\n      },\n      trys: [],\n      ops: []\n    },\n    f,\n    y,\n    t,\n    g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n        case 7:\n          op = _.ops.pop();\n          _.trys.pop();\n          continue;\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n            _.ops.push(op);\n            break;\n          }\n          if (t[2]) _.ops.pop();\n          _.trys.pop();\n          continue;\n      }\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n    r,\n    ar = [],\n    e;\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n  return ar;\n};\nimport { ConsoleLogger as Logger, Parser } from '@aws-amplify/core';\nimport { AWSS3Provider } from './providers';\nimport axios from 'axios';\nvar logger = new Logger('StorageClass');\nvar DEFAULT_PROVIDER = 'AWSS3';\n/**\n * Provide storage methods to use AWS S3\n */\nvar Storage = /** @class */function () {\n  /**\n   * Initialize Storage\n   * @param {Object} config - Configuration object for storage\n   */\n  function Storage() {\n    this._config = {};\n    this._pluggables = [];\n    this._cancelTokenSourceMap = new WeakMap();\n    logger.debug('Storage Options', this._config);\n    this.get = this.get.bind(this);\n    this.put = this.put.bind(this);\n    this.remove = this.remove.bind(this);\n    this.list = this.list.bind(this);\n  }\n  Storage.prototype.getModuleName = function () {\n    return 'Storage';\n  };\n  /**\n   * add plugin into Storage category\n   * @param {Object} pluggable - an instance of the plugin\n   */\n  Storage.prototype.addPluggable = function (pluggable) {\n    if (pluggable && pluggable.getCategory() === 'Storage') {\n      this._pluggables.push(pluggable);\n      var config = {};\n      config = pluggable.configure(this._config[pluggable.getProviderName()]);\n      return config;\n    }\n  };\n  /**\n   * Get the plugin object\n   * @param providerName - the name of the plugin\n   */\n  Storage.prototype.getPluggable = function (providerName) {\n    var pluggable = this._pluggables.find(function (pluggable) {\n      return pluggable.getProviderName() === providerName;\n    });\n    if (pluggable === undefined) {\n      logger.debug('No plugin found with providerName', providerName);\n      return null;\n    } else return pluggable;\n  };\n  /**\n   * Remove the plugin object\n   * @param providerName - the name of the plugin\n   */\n  Storage.prototype.removePluggable = function (providerName) {\n    this._pluggables = this._pluggables.filter(function (pluggable) {\n      return pluggable.getProviderName() !== providerName;\n    });\n    return;\n  };\n  /**\n   * Configure Storage\n   * @param {Object} config - Configuration object for storage\n   * @return {Object} - Current configuration\n   */\n  Storage.prototype.configure = function (config) {\n    var _this = this;\n    logger.debug('configure Storage');\n    if (!config) return this._config;\n    var amplifyConfig = Parser.parseMobilehubConfig(config);\n    var storageKeysFromConfig = Object.keys(amplifyConfig.Storage);\n    var storageArrayKeys = ['bucket', 'region', 'level', 'track', 'customPrefix', 'serverSideEncryption', 'SSECustomerAlgorithm', 'SSECustomerKey', 'SSECustomerKeyMD5', 'SSEKMSKeyId'];\n    var isInStorageArrayKeys = function (k) {\n      return storageArrayKeys.some(function (x) {\n        return x === k;\n      });\n    };\n    var checkConfigKeysFromArray = function (k) {\n      return k.find(function (k) {\n        return isInStorageArrayKeys(k);\n      });\n    };\n    if (storageKeysFromConfig && checkConfigKeysFromArray(storageKeysFromConfig) && !amplifyConfig.Storage[DEFAULT_PROVIDER]) {\n      amplifyConfig.Storage[DEFAULT_PROVIDER] = {};\n    }\n    Object.entries(amplifyConfig.Storage).map(function (_a) {\n      var _b = __read(_a, 2),\n        key = _b[0],\n        value = _b[1];\n      if (key && isInStorageArrayKeys(key) && value !== undefined) {\n        amplifyConfig.Storage[DEFAULT_PROVIDER][key] = value;\n        delete amplifyConfig.Storage[key];\n      }\n    });\n    // only update new values for each provider\n    Object.keys(amplifyConfig.Storage).forEach(function (providerName) {\n      if (typeof amplifyConfig.Storage[providerName] !== 'string') {\n        _this._config[providerName] = __assign(__assign({}, _this._config[providerName]), amplifyConfig.Storage[providerName]);\n      }\n    });\n    this._pluggables.forEach(function (pluggable) {\n      pluggable.configure(_this._config[pluggable.getProviderName()]);\n    });\n    if (this._pluggables.length === 0) {\n      this.addPluggable(new AWSS3Provider());\n    }\n    return this._config;\n  };\n  Storage.prototype.getCancellableTokenSource = function () {\n    return axios.CancelToken.source();\n  };\n  Storage.prototype.updateRequestToBeCancellable = function (request, cancelTokenSource) {\n    this._cancelTokenSourceMap.set(request, cancelTokenSource);\n  };\n  /**\n   * Cancels an inflight request\n   *\n   * @param {Promise<any>} request - The request to cancel\n   * @param {string} [message] - A message to include in the cancelation exception\n   */\n  Storage.prototype.cancel = function (request, message) {\n    var cancelTokenSource = this._cancelTokenSourceMap.get(request);\n    if (cancelTokenSource) {\n      cancelTokenSource.cancel(message);\n    } else {\n      logger.debug('The request does not map to any cancel token');\n    }\n  };\n  /**\n   * Get a presigned URL of the file or the object data when download:true\n   *\n   * @param {string} key - key of the object\n   * @param {Object} [config] - { level : private|protected|public, download: true|false }\n   * @return - A promise resolves to either a presigned url or the object\n   */\n  Storage.prototype.get = function (key, config) {\n    var _a = (config || {}).provider,\n      provider = _a === void 0 ? DEFAULT_PROVIDER : _a;\n    var prov = this._pluggables.find(function (pluggable) {\n      return pluggable.getProviderName() === provider;\n    });\n    if (prov === undefined) {\n      logger.debug('No plugin found with providerName', provider);\n      return Promise.reject('No plugin found in Storage for the provider');\n    }\n    var cancelTokenSource = this.getCancellableTokenSource();\n    var responsePromise = prov.get(key, __assign(__assign({}, config), {\n      cancelTokenSource: cancelTokenSource\n    }));\n    this.updateRequestToBeCancellable(responsePromise, cancelTokenSource);\n    return responsePromise;\n  };\n  Storage.prototype.isCancelError = function (error) {\n    return axios.isCancel(error);\n  };\n  /**\n   * Put a file in storage bucket specified to configure method\n   * @param {string} key - key of the object\n   * @param {Object} object - File to be put in bucket\n   * @param {Object} [config] - { level : private|protected|public, contentType: MIME Types,\n   *  progressCallback: function }\n   * @return - promise resolves to object on success\n   */\n  Storage.prototype.put = function (key, object, config) {\n    var _a = (config || {}).provider,\n      provider = _a === void 0 ? DEFAULT_PROVIDER : _a;\n    var prov = this._pluggables.find(function (pluggable) {\n      return pluggable.getProviderName() === provider;\n    });\n    if (prov === undefined) {\n      logger.debug('No plugin found with providerName', provider);\n      return Promise.reject('No plugin found in Storage for the provider');\n    }\n    var cancelTokenSource = this.getCancellableTokenSource();\n    var responsePromise = prov.put(key, object, __assign(__assign({}, config), {\n      cancelTokenSource: cancelTokenSource\n    }));\n    this.updateRequestToBeCancellable(responsePromise, cancelTokenSource);\n    return responsePromise;\n  };\n  /**\n   * Remove the object for specified key\n   * @param {string} key - key of the object\n   * @param {Object} [config] - { level : private|protected|public }\n   * @return - Promise resolves upon successful removal of the object\n   */\n  Storage.prototype.remove = function (key, config) {\n    return __awaiter(this, void 0, void 0, function () {\n      var _a, provider, prov;\n      return __generator(this, function (_b) {\n        _a = (config || {}).provider, provider = _a === void 0 ? DEFAULT_PROVIDER : _a;\n        prov = this._pluggables.find(function (pluggable) {\n          return pluggable.getProviderName() === provider;\n        });\n        if (prov === undefined) {\n          logger.debug('No plugin found with providerName', provider);\n          return [2 /*return*/, Promise.reject('No plugin found in Storage for the provider')];\n        }\n        return [2 /*return*/, prov.remove(key, config)];\n      });\n    });\n  };\n  /**\n   * List bucket objects relative to the level and prefix specified\n   * @param {String} path - the path that contains objects\n   * @param {Object} [config] - { level : private|protected|public, maxKeys: NUMBER }\n   * @return - Promise resolves to list of keys for all objects in path\n   */\n  Storage.prototype.list = function (path, config) {\n    return __awaiter(this, void 0, void 0, function () {\n      var _a, provider, prov;\n      return __generator(this, function (_b) {\n        _a = (config || {}).provider, provider = _a === void 0 ? DEFAULT_PROVIDER : _a;\n        prov = this._pluggables.find(function (pluggable) {\n          return pluggable.getProviderName() === provider;\n        });\n        if (prov === undefined) {\n          logger.debug('No plugin found with providerName', provider);\n          return [2 /*return*/, Promise.reject('No plugin found in Storage for the provider')];\n        }\n        return [2 /*return*/, prov.list(path, config)];\n      });\n    });\n  };\n  return Storage;\n}();\nexport { Storage };\n/**\n * @deprecated use named import\n */\nexport default Storage;","map":{"version":3,"names":["ConsoleLogger","Logger","Parser","AWSS3Provider","axios","logger","DEFAULT_PROVIDER","Storage","_config","_pluggables","_cancelTokenSourceMap","WeakMap","debug","get","bind","put","remove","list","prototype","getModuleName","addPluggable","pluggable","getCategory","push","config","configure","getProviderName","getPluggable","providerName","find","undefined","removePluggable","filter","_this","amplifyConfig","parseMobilehubConfig","storageKeysFromConfig","Object","keys","storageArrayKeys","isInStorageArrayKeys","k","some","x","checkConfigKeysFromArray","entries","map","_a","_b","__read","key","value","forEach","__assign","length","getCancellableTokenSource","CancelToken","source","updateRequestToBeCancellable","request","cancelTokenSource","set","cancel","message","provider","prov","Promise","reject","responsePromise","isCancelError","error","isCancel","object","path"],"sources":["/Users/ericli/node_modules/@aws-amplify/storage/src/Storage.ts"],"sourcesContent":["/*\n * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\n\nimport { ConsoleLogger as Logger, Parser } from '@aws-amplify/core';\nimport { AWSS3Provider } from './providers';\nimport { StorageProvider } from './types';\nimport axios, { CancelTokenSource } from 'axios';\n\nconst logger = new Logger('StorageClass');\n\nconst DEFAULT_PROVIDER = 'AWSS3';\n/**\n * Provide storage methods to use AWS S3\n */\nexport class Storage {\n\t/**\n\t * @private\n\t */\n\tprivate _config;\n\tprivate _pluggables: StorageProvider[];\n\n\t/**\n\t * Similar to the API module. This weak map allows users to cancel their in-flight request made using the Storage\n\t * module. For every get or put request, a unique cancel token will be generated and injected to it's underlying\n\t * AxiosHttpHandler. This map maintains a mapping of Request to CancelTokenSource. When .cancel is invoked, it will\n\t * attempt to retrieve it's corresponding cancelTokenSource and cancel the in-flight request.\n\t */\n\tprivate _cancelTokenSourceMap: WeakMap<Promise<any>, CancelTokenSource>;\n\n\t/**\n\t * @public\n\t */\n\tpublic vault: Storage;\n\n\t/**\n\t * Initialize Storage\n\t * @param {Object} config - Configuration object for storage\n\t */\n\tconstructor() {\n\t\tthis._config = {};\n\t\tthis._pluggables = [];\n\t\tthis._cancelTokenSourceMap = new WeakMap<Promise<any>, CancelTokenSource>();\n\t\tlogger.debug('Storage Options', this._config);\n\n\t\tthis.get = this.get.bind(this);\n\t\tthis.put = this.put.bind(this);\n\t\tthis.remove = this.remove.bind(this);\n\t\tthis.list = this.list.bind(this);\n\t}\n\n\tpublic getModuleName() {\n\t\treturn 'Storage';\n\t}\n\n\t/**\n\t * add plugin into Storage category\n\t * @param {Object} pluggable - an instance of the plugin\n\t */\n\tpublic addPluggable(pluggable: StorageProvider) {\n\t\tif (pluggable && pluggable.getCategory() === 'Storage') {\n\t\t\tthis._pluggables.push(pluggable);\n\t\t\tlet config = {};\n\n\t\t\tconfig = pluggable.configure(this._config[pluggable.getProviderName()]);\n\n\t\t\treturn config;\n\t\t}\n\t}\n\n\t/**\n\t * Get the plugin object\n\t * @param providerName - the name of the plugin\n\t */\n\tpublic getPluggable(providerName: string) {\n\t\tconst pluggable = this._pluggables.find(\n\t\t\tpluggable => pluggable.getProviderName() === providerName\n\t\t);\n\t\tif (pluggable === undefined) {\n\t\t\tlogger.debug('No plugin found with providerName', providerName);\n\t\t\treturn null;\n\t\t} else return pluggable;\n\t}\n\n\t/**\n\t * Remove the plugin object\n\t * @param providerName - the name of the plugin\n\t */\n\tpublic removePluggable(providerName: string) {\n\t\tthis._pluggables = this._pluggables.filter(\n\t\t\tpluggable => pluggable.getProviderName() !== providerName\n\t\t);\n\t\treturn;\n\t}\n\n\t/**\n\t * Configure Storage\n\t * @param {Object} config - Configuration object for storage\n\t * @return {Object} - Current configuration\n\t */\n\tconfigure(config?) {\n\t\tlogger.debug('configure Storage');\n\t\tif (!config) return this._config;\n\n\t\tconst amplifyConfig = Parser.parseMobilehubConfig(config);\n\n\t\tconst storageKeysFromConfig = Object.keys(amplifyConfig.Storage);\n\n\t\tconst storageArrayKeys = [\n\t\t\t'bucket',\n\t\t\t'region',\n\t\t\t'level',\n\t\t\t'track',\n\t\t\t'customPrefix',\n\t\t\t'serverSideEncryption',\n\t\t\t'SSECustomerAlgorithm',\n\t\t\t'SSECustomerKey',\n\t\t\t'SSECustomerKeyMD5',\n\t\t\t'SSEKMSKeyId',\n\t\t];\n\n\t\tconst isInStorageArrayKeys = (k: string) =>\n\t\t\tstorageArrayKeys.some(x => x === k);\n\t\tconst checkConfigKeysFromArray = (k: string[]) =>\n\t\t\tk.find(k => isInStorageArrayKeys(k));\n\n\t\tif (\n\t\t\tstorageKeysFromConfig &&\n\t\t\tcheckConfigKeysFromArray(storageKeysFromConfig) &&\n\t\t\t!amplifyConfig.Storage[DEFAULT_PROVIDER]\n\t\t) {\n\t\t\tamplifyConfig.Storage[DEFAULT_PROVIDER] = {};\n\t\t}\n\n\t\tObject.entries(amplifyConfig.Storage).map(([key, value]) => {\n\t\t\tif (key && isInStorageArrayKeys(key) && value !== undefined) {\n\t\t\t\tamplifyConfig.Storage[DEFAULT_PROVIDER][key] = value;\n\t\t\t\tdelete amplifyConfig.Storage[key];\n\t\t\t}\n\t\t});\n\n\t\t// only update new values for each provider\n\t\tObject.keys(amplifyConfig.Storage).forEach(providerName => {\n\t\t\tif (typeof amplifyConfig.Storage[providerName] !== 'string') {\n\t\t\t\tthis._config[providerName] = {\n\t\t\t\t\t...this._config[providerName],\n\t\t\t\t\t...amplifyConfig.Storage[providerName],\n\t\t\t\t};\n\t\t\t}\n\t\t});\n\n\t\tthis._pluggables.forEach(pluggable => {\n\t\t\tpluggable.configure(this._config[pluggable.getProviderName()]);\n\t\t});\n\n\t\tif (this._pluggables.length === 0) {\n\t\t\tthis.addPluggable(new AWSS3Provider());\n\t\t}\n\n\t\treturn this._config;\n\t}\n\n\tprivate getCancellableTokenSource(): CancelTokenSource {\n\t\treturn axios.CancelToken.source();\n\t}\n\n\tprivate updateRequestToBeCancellable(\n\t\trequest: Promise<any>,\n\t\tcancelTokenSource: CancelTokenSource\n\t) {\n\t\tthis._cancelTokenSourceMap.set(request, cancelTokenSource);\n\t}\n\n\t/**\n\t * Cancels an inflight request\n\t *\n\t * @param {Promise<any>} request - The request to cancel\n\t * @param {string} [message] - A message to include in the cancelation exception\n\t */\n\tpublic cancel(request: Promise<any>, message?: string) {\n\t\tconst cancelTokenSource = this._cancelTokenSourceMap.get(request);\n\t\tif (cancelTokenSource) {\n\t\t\tcancelTokenSource.cancel(message);\n\t\t} else {\n\t\t\tlogger.debug('The request does not map to any cancel token');\n\t\t}\n\t}\n\n\t/**\n\t * Get a presigned URL of the file or the object data when download:true\n\t *\n\t * @param {string} key - key of the object\n\t * @param {Object} [config] - { level : private|protected|public, download: true|false }\n\t * @return - A promise resolves to either a presigned url or the object\n\t */\n\tpublic get(key: string, config?): Promise<String | Object> {\n\t\tconst { provider = DEFAULT_PROVIDER } = config || {};\n\t\tconst prov = this._pluggables.find(\n\t\t\tpluggable => pluggable.getProviderName() === provider\n\t\t);\n\t\tif (prov === undefined) {\n\t\t\tlogger.debug('No plugin found with providerName', provider);\n\t\t\treturn Promise.reject('No plugin found in Storage for the provider');\n\t\t}\n\t\tconst cancelTokenSource = this.getCancellableTokenSource();\n\t\tconst responsePromise = prov.get(key, {\n\t\t\t...config,\n\t\t\tcancelTokenSource,\n\t\t});\n\t\tthis.updateRequestToBeCancellable(responsePromise, cancelTokenSource);\n\t\treturn responsePromise;\n\t}\n\n\tpublic isCancelError(error: any) {\n\t\treturn axios.isCancel(error);\n\t}\n\n\t/**\n\t * Put a file in storage bucket specified to configure method\n\t * @param {string} key - key of the object\n\t * @param {Object} object - File to be put in bucket\n\t * @param {Object} [config] - { level : private|protected|public, contentType: MIME Types,\n\t *  progressCallback: function }\n\t * @return - promise resolves to object on success\n\t */\n\tpublic put(key: string, object, config?): Promise<Object> {\n\t\tconst { provider = DEFAULT_PROVIDER } = config || {};\n\t\tconst prov = this._pluggables.find(\n\t\t\tpluggable => pluggable.getProviderName() === provider\n\t\t);\n\t\tif (prov === undefined) {\n\t\t\tlogger.debug('No plugin found with providerName', provider);\n\t\t\treturn Promise.reject('No plugin found in Storage for the provider');\n\t\t}\n\t\tconst cancelTokenSource = this.getCancellableTokenSource();\n\t\tconst responsePromise = prov.put(key, object, {\n\t\t\t...config,\n\t\t\tcancelTokenSource,\n\t\t});\n\t\tthis.updateRequestToBeCancellable(responsePromise, cancelTokenSource);\n\t\treturn responsePromise;\n\t}\n\n\t/**\n\t * Remove the object for specified key\n\t * @param {string} key - key of the object\n\t * @param {Object} [config] - { level : private|protected|public }\n\t * @return - Promise resolves upon successful removal of the object\n\t */\n\tpublic async remove(key: string, config?): Promise<any> {\n\t\tconst { provider = DEFAULT_PROVIDER } = config || {};\n\t\tconst prov = this._pluggables.find(\n\t\t\tpluggable => pluggable.getProviderName() === provider\n\t\t);\n\t\tif (prov === undefined) {\n\t\t\tlogger.debug('No plugin found with providerName', provider);\n\t\t\treturn Promise.reject('No plugin found in Storage for the provider');\n\t\t}\n\t\treturn prov.remove(key, config);\n\t}\n\n\t/**\n\t * List bucket objects relative to the level and prefix specified\n\t * @param {String} path - the path that contains objects\n\t * @param {Object} [config] - { level : private|protected|public, maxKeys: NUMBER }\n\t * @return - Promise resolves to list of keys for all objects in path\n\t */\n\tpublic async list(path, config?): Promise<any> {\n\t\tconst { provider = DEFAULT_PROVIDER } = config || {};\n\t\tconst prov = this._pluggables.find(\n\t\t\tpluggable => pluggable.getProviderName() === provider\n\t\t);\n\t\tif (prov === undefined) {\n\t\t\tlogger.debug('No plugin found with providerName', provider);\n\t\t\treturn Promise.reject('No plugin found in Storage for the provider');\n\t\t}\n\t\treturn prov.list(path, config);\n\t}\n}\n\n/**\n * @deprecated use named import\n */\nexport default Storage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}