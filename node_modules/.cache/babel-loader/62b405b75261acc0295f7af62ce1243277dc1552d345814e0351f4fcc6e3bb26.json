{"ast":null,"code":"import isEmpty from 'lodash/isEmpty';\nimport isEqual from 'lodash/isEqual';\nimport { v1 as uuid } from 'uuid';\nimport { ConsoleLogger as Logger, JS } from '@aws-amplify/core';\nimport Cache from '@aws-amplify/cache';\nvar PERSONALIZE_CACHE = '_awsct';\nvar PERSONALIZE_CACHE_USERID = '_awsct_uid';\nvar PERSONALIZE_CACHE_SESSIONID = '_awsct_sid';\nvar DEFAULT_CACHE_PREFIX = 'peronslize';\nvar TIMER_INTERVAL = 30 * 1000;\nvar DELIMITER = '.';\nvar CACHE_EXPIRY_IN_DAYS = 7;\nvar logger = new Logger('AmazonPersonalizeProvider');\nvar SessionInfoManager = /** @class */function () {\n  function SessionInfoManager(prefixKey) {\n    if (prefixKey === void 0) {\n      prefixKey = '';\n    }\n    this._isBrowser = JS.browserOrNode().isBrowser;\n    this._timerKey = uuid().substr(0, 15);\n    this._refreshTimer();\n  }\n  SessionInfoManager.prototype._refreshTimer = function () {\n    if (this._timer) {\n      clearInterval(this._timer);\n    }\n    var that = this;\n    this._timer = setInterval(function () {\n      that._timerKey = uuid().substr(0, 15);\n    }, TIMER_INTERVAL);\n  };\n  SessionInfoManager.prototype.storeValue = function (key, value) {\n    var today = new Date();\n    var expire = new Date();\n    expire.setTime(today.getTime() + 3600000 * 24 * CACHE_EXPIRY_IN_DAYS);\n    Cache.setItem(this._getCachePrefix(key), value, {\n      expires: expire.getTime()\n    });\n  };\n  SessionInfoManager.prototype.retrieveValue = function (key) {\n    return Cache.getItem(this._getCachePrefix(key));\n  };\n  SessionInfoManager.prototype._getCachePrefix = function (key) {\n    if (this._isBrowser) {\n      return key + DELIMITER + window.location.host;\n    }\n    return DEFAULT_CACHE_PREFIX;\n  };\n  SessionInfoManager.prototype.getTimerKey = function () {\n    return this._timerKey;\n  };\n  SessionInfoManager.prototype.updateSessionInfo = function (userId, sessionInfo) {\n    var existUserId = sessionInfo.userId;\n    var existSessionId = sessionInfo.sessionId;\n    if (this._isRequireNewSession(userId, existUserId, existSessionId)) {\n      var newSessionId = uuid();\n      this.storeValue(PERSONALIZE_CACHE_USERID, userId);\n      this.storeValue(PERSONALIZE_CACHE_SESSIONID, newSessionId);\n      sessionInfo.sessionId = newSessionId;\n    } else if (this._isRequireUpdateSessionInfo(userId, existUserId, existSessionId)) {\n      this.storeValue(PERSONALIZE_CACHE_USERID, userId);\n    }\n    sessionInfo.userId = userId;\n  };\n  SessionInfoManager.prototype._isRequireUpdateSessionInfo = function (userId, cachedSessionUserId, cachedSessionSessionId) {\n    // anonymouse => sign in : hasSession && s_userId == null && curr_userId !=null\n    var isNoCachedSession = isEmpty(cachedSessionSessionId);\n    return !isNoCachedSession && isEmpty(cachedSessionUserId) && !isEmpty(userId);\n  };\n  SessionInfoManager.prototype.retrieveSessionInfo = function (trackingId) {\n    var sessionInfo = {};\n    sessionInfo.trackingId = trackingId;\n    sessionInfo.sessionId = this.retrieveValue(PERSONALIZE_CACHE_SESSIONID);\n    sessionInfo.userId = this.retrieveValue(PERSONALIZE_CACHE_USERID);\n    if (isEmpty(sessionInfo.sessionId)) {\n      sessionInfo.sessionId = uuid();\n      this.storeValue(PERSONALIZE_CACHE_SESSIONID, sessionInfo.sessionId);\n    }\n    this.storeValue(PERSONALIZE_CACHE, trackingId);\n    return sessionInfo;\n  };\n  SessionInfoManager.prototype._isRequireNewSession = function (userId, cachedSessionUserId, cachedSessionSessionId) {\n    // new session => 1. no cached session info 2. signOut: s_userId !=null && curr_userId ==null\n    // 3. switch account: s_userId !=null && curr_userId !=null && s_userId != curr_userId\n    var isNoCachedSession = isEmpty(cachedSessionSessionId);\n    var isSignoutCase = isEmpty(userId) && !isEmpty(cachedSessionUserId);\n    var isSwitchUserCase = !isEmpty(userId) && !isEmpty(cachedSessionUserId) && !isEqual(userId, cachedSessionUserId);\n    return isNoCachedSession || isSignoutCase || isSwitchUserCase;\n  };\n  return SessionInfoManager;\n}();\nexport { SessionInfoManager };","map":{"version":3,"names":["isEmpty","isEqual","v1","uuid","ConsoleLogger","Logger","JS","Cache","PERSONALIZE_CACHE","PERSONALIZE_CACHE_USERID","PERSONALIZE_CACHE_SESSIONID","DEFAULT_CACHE_PREFIX","TIMER_INTERVAL","DELIMITER","CACHE_EXPIRY_IN_DAYS","logger","SessionInfoManager","prefixKey","_isBrowser","browserOrNode","isBrowser","_timerKey","substr","_refreshTimer","prototype","_timer","clearInterval","that","setInterval","storeValue","key","value","today","Date","expire","setTime","getTime","setItem","_getCachePrefix","expires","retrieveValue","getItem","window","location","host","getTimerKey","updateSessionInfo","userId","sessionInfo","existUserId","existSessionId","sessionId","_isRequireNewSession","newSessionId","_isRequireUpdateSessionInfo","cachedSessionUserId","cachedSessionSessionId","isNoCachedSession","retrieveSessionInfo","trackingId","isSignoutCase","isSwitchUserCase"],"sources":["/Users/ericli/node_modules/@aws-amplify/analytics/src/Providers/AmazonPersonalizeHelper/SessionInfoManager.ts"],"sourcesContent":["/*\n * Copyright 2019-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nimport { SessionInfo } from './DataType';\nimport isEmpty from 'lodash/isEmpty';\nimport isEqual from 'lodash/isEqual';\nimport { v1 as uuid } from 'uuid';\nimport { ConsoleLogger as Logger, JS } from '@aws-amplify/core';\n\nimport Cache from '@aws-amplify/cache';\n\nconst PERSONALIZE_CACHE = '_awsct';\nconst PERSONALIZE_CACHE_USERID = '_awsct_uid';\nconst PERSONALIZE_CACHE_SESSIONID = '_awsct_sid';\nconst DEFAULT_CACHE_PREFIX = 'peronslize';\nconst TIMER_INTERVAL = 30 * 1000;\nconst DELIMITER = '.';\nconst CACHE_EXPIRY_IN_DAYS = 7;\nconst logger = new Logger('AmazonPersonalizeProvider');\n\nexport class SessionInfoManager {\n\tprivate _isBrowser;\n\tprivate _cache;\n\tprivate _timer;\n\tprivate _timerKey;\n\n\tconstructor(prefixKey = '') {\n\t\tthis._isBrowser = JS.browserOrNode().isBrowser;\n\t\tthis._timerKey = uuid().substr(0, 15);\n\t\tthis._refreshTimer();\n\t}\n\n\tprivate _refreshTimer() {\n\t\tif (this._timer) {\n\t\t\tclearInterval(this._timer);\n\t\t}\n\t\tconst that = this;\n\t\tthis._timer = setInterval(() => {\n\t\t\tthat._timerKey = uuid().substr(0, 15);\n\t\t}, TIMER_INTERVAL);\n\t}\n\n\tprivate storeValue(key: string, value: any): void {\n\t\tconst today = new Date();\n\t\tconst expire = new Date();\n\t\texpire.setTime(today.getTime() + 3600000 * 24 * CACHE_EXPIRY_IN_DAYS);\n\t\tCache.setItem(this._getCachePrefix(key), value, {\n\t\t\texpires: expire.getTime(),\n\t\t});\n\t}\n\n\tprivate retrieveValue(key: string): any {\n\t\treturn Cache.getItem(this._getCachePrefix(key));\n\t}\n\n\tprivate _getCachePrefix(key): string {\n\t\tif (this._isBrowser) {\n\t\t\treturn key + DELIMITER + window.location.host;\n\t\t}\n\t\treturn DEFAULT_CACHE_PREFIX;\n\t}\n\n\tpublic getTimerKey() {\n\t\treturn this._timerKey;\n\t}\n\n\tpublic updateSessionInfo(userId: string, sessionInfo: SessionInfo) {\n\t\tconst existUserId = sessionInfo.userId;\n\t\tconst existSessionId = sessionInfo.sessionId;\n\t\tif (this._isRequireNewSession(userId, existUserId, existSessionId)) {\n\t\t\tconst newSessionId = uuid();\n\t\t\tthis.storeValue(PERSONALIZE_CACHE_USERID, userId);\n\t\t\tthis.storeValue(PERSONALIZE_CACHE_SESSIONID, newSessionId);\n\t\t\tsessionInfo.sessionId = newSessionId;\n\t\t} else if (\n\t\t\tthis._isRequireUpdateSessionInfo(userId, existUserId, existSessionId)\n\t\t) {\n\t\t\tthis.storeValue(PERSONALIZE_CACHE_USERID, userId);\n\t\t}\n\t\tsessionInfo.userId = userId;\n\t}\n\n\tprivate _isRequireUpdateSessionInfo(\n\t\tuserId: string,\n\t\tcachedSessionUserId: string,\n\t\tcachedSessionSessionId: string\n\t): boolean {\n\t\t// anonymouse => sign in : hasSession && s_userId == null && curr_userId !=null\n\t\tconst isNoCachedSession: boolean = isEmpty(cachedSessionSessionId);\n\t\treturn (\n\t\t\t!isNoCachedSession && isEmpty(cachedSessionUserId) && !isEmpty(userId)\n\t\t);\n\t}\n\n\tpublic retrieveSessionInfo(trackingId: string): SessionInfo {\n\t\tconst sessionInfo = <SessionInfo>{};\n\t\tsessionInfo.trackingId = trackingId;\n\t\tsessionInfo.sessionId = this.retrieveValue(PERSONALIZE_CACHE_SESSIONID);\n\t\tsessionInfo.userId = this.retrieveValue(PERSONALIZE_CACHE_USERID);\n\t\tif (isEmpty(sessionInfo.sessionId)) {\n\t\t\tsessionInfo.sessionId = uuid();\n\t\t\tthis.storeValue(PERSONALIZE_CACHE_SESSIONID, sessionInfo.sessionId);\n\t\t}\n\t\tthis.storeValue(PERSONALIZE_CACHE, trackingId);\n\t\treturn sessionInfo;\n\t}\n\n\tprivate _isRequireNewSession(\n\t\tuserId: string,\n\t\tcachedSessionUserId: string,\n\t\tcachedSessionSessionId: string\n\t): boolean {\n\t\t// new session => 1. no cached session info 2. signOut: s_userId !=null && curr_userId ==null\n\t\t// 3. switch account: s_userId !=null && curr_userId !=null && s_userId != curr_userId\n\t\tconst isNoCachedSession: boolean = isEmpty(cachedSessionSessionId);\n\t\tconst isSignoutCase: boolean =\n\t\t\tisEmpty(userId) && !isEmpty(cachedSessionUserId);\n\t\tconst isSwitchUserCase: boolean =\n\t\t\t!isEmpty(userId) &&\n\t\t\t!isEmpty(cachedSessionUserId) &&\n\t\t\t!isEqual(userId, cachedSessionUserId);\n\t\treturn isNoCachedSession || isSignoutCase || isSwitchUserCase;\n\t}\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}