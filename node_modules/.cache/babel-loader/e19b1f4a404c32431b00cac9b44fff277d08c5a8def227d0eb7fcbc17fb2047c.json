{"ast":null,"code":"var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n      label: 0,\n      sent: function () {\n        if (t[0] & 1) throw t[1];\n        return t[1];\n      },\n      trys: [],\n      ops: []\n    },\n    f,\n    y,\n    t,\n    g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n        case 7:\n          op = _.ops.pop();\n          _.trys.pop();\n          continue;\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n            _.ops.push(op);\n            break;\n          }\n          if (t[2]) _.ops.pop();\n          _.trys.pop();\n          continue;\n      }\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n/*\n * Copyright 2017-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\n// import '../Common/Polyfills';\nimport Observable from 'zen-observable-ts';\nimport { Amplify, browserOrNode, ConsoleLogger as Logger, INTERNAL_AWS_APPSYNC_PUBSUB_PROVIDER, INTERNAL_AWS_APPSYNC_REALTIME_PUBSUB_PROVIDER } from '@aws-amplify/core';\nimport { AWSAppSyncProvider, AWSAppSyncRealTimeProvider } from './Providers';\nvar isNode = browserOrNode().isNode;\nvar logger = new Logger('PubSub');\nvar PubSubClass = /** @class */function () {\n  /**\n   * Initialize PubSub with AWS configurations\n   *\n   * @param {PubSubOptions} options - Configuration object for PubSub\n   */\n  function PubSubClass(options) {\n    this._options = options;\n    logger.debug('PubSub Options', this._options);\n    this._pluggables = [];\n    this.subscribe = this.subscribe.bind(this);\n  }\n  Object.defineProperty(PubSubClass.prototype, \"awsAppSyncProvider\", {\n    /**\n     * Lazy instantiate AWSAppSyncProvider when it is required by the API category\n     */\n    get: function () {\n      if (!this._awsAppSyncProvider) {\n        this._awsAppSyncProvider = new AWSAppSyncProvider(this._options);\n      }\n      return this._awsAppSyncProvider;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PubSubClass.prototype, \"awsAppSyncRealTimeProvider\", {\n    /**\n     * Lazy instantiate AWSAppSyncRealTimeProvider when it is required by the API category\n     */\n    get: function () {\n      if (!this._awsAppSyncRealTimeProvider) {\n        this._awsAppSyncRealTimeProvider = new AWSAppSyncRealTimeProvider(this._options);\n      }\n      return this._awsAppSyncRealTimeProvider;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  PubSubClass.prototype.getModuleName = function () {\n    return 'PubSub';\n  };\n  /**\n   * Configure PubSub part with configurations\n   *\n   * @param {PubSubOptions} config - Configuration for PubSub\n   * @return {Object} - The current configuration\n   */\n  PubSubClass.prototype.configure = function (options) {\n    var _this = this;\n    var opt = options ? options.PubSub || options : {};\n    logger.debug('configure PubSub', {\n      opt: opt\n    });\n    this._options = Object.assign({}, this._options, opt);\n    this._pluggables.map(function (pluggable) {\n      return pluggable.configure(_this._options);\n    });\n    return this._options;\n  };\n  /**\n   * add plugin into Analytics category\n   * @param {Object} pluggable - an instance of the plugin\n   */\n  PubSubClass.prototype.addPluggable = function (pluggable) {\n    return __awaiter(this, void 0, void 0, function () {\n      var config;\n      return __generator(this, function (_a) {\n        if (pluggable && pluggable.getCategory() === 'PubSub') {\n          this._pluggables.push(pluggable);\n          config = pluggable.configure(this._options);\n          return [2 /*return*/, config];\n        }\n        return [2 /*return*/];\n      });\n    });\n  };\n\n  PubSubClass.prototype.getProviderByName = function (providerName) {\n    if (providerName === INTERNAL_AWS_APPSYNC_PUBSUB_PROVIDER) {\n      return this.awsAppSyncProvider;\n    }\n    if (providerName === INTERNAL_AWS_APPSYNC_REALTIME_PUBSUB_PROVIDER) {\n      return this.awsAppSyncRealTimeProvider;\n    }\n    return this._pluggables.find(function (pluggable) {\n      return pluggable.getProviderName() === providerName;\n    });\n  };\n  PubSubClass.prototype.getProviders = function (options) {\n    if (options === void 0) {\n      options = {};\n    }\n    var providerName = options.provider;\n    if (!providerName) {\n      return this._pluggables;\n    }\n    var provider = this.getProviderByName(providerName);\n    if (!provider) {\n      throw new Error(\"Could not find provider named \" + providerName);\n    }\n    return [provider];\n  };\n  PubSubClass.prototype.publish = function (topics, msg, options) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        return [2 /*return*/, Promise.all(this.getProviders(options).map(function (provider) {\n          return provider.publish(topics, msg, options);\n        }))];\n      });\n    });\n  };\n  PubSubClass.prototype.subscribe = function (topics, options) {\n    if (isNode && this._options && this._options.ssr) {\n      throw new Error('Subscriptions are not supported for Server-Side Rendering (SSR)');\n    }\n    logger.debug('subscribe options', options);\n    var providers = this.getProviders(options);\n    return new Observable(function (observer) {\n      var observables = providers.map(function (provider) {\n        return {\n          provider: provider,\n          observable: provider.subscribe(topics, options)\n        };\n      });\n      var subscriptions = observables.map(function (_a) {\n        var provider = _a.provider,\n          observable = _a.observable;\n        return observable.subscribe({\n          start: console.error,\n          next: function (value) {\n            return observer.next({\n              provider: provider,\n              value: value\n            });\n          },\n          error: function (error) {\n            return observer.error({\n              provider: provider,\n              error: error\n            });\n          }\n        });\n      });\n      return function () {\n        return subscriptions.forEach(function (subscription) {\n          return subscription.unsubscribe();\n        });\n      };\n    });\n  };\n  return PubSubClass;\n}();\nexport { PubSubClass };\nexport var PubSub = new PubSubClass(null);\nAmplify.register(PubSub);","map":{"version":3,"names":["Observable","Amplify","browserOrNode","ConsoleLogger","Logger","INTERNAL_AWS_APPSYNC_PUBSUB_PROVIDER","INTERNAL_AWS_APPSYNC_REALTIME_PUBSUB_PROVIDER","AWSAppSyncProvider","AWSAppSyncRealTimeProvider","isNode","logger","PubSubClass","options","_options","debug","_pluggables","subscribe","bind","Object","defineProperty","prototype","get","_awsAppSyncProvider","_awsAppSyncRealTimeProvider","getModuleName","configure","_this","opt","PubSub","assign","map","pluggable","addPluggable","getCategory","push","config","getProviderByName","providerName","awsAppSyncProvider","awsAppSyncRealTimeProvider","find","getProviderName","getProviders","provider","Error","publish","topics","msg","Promise","all","ssr","providers","observer","observables","observable","subscriptions","_a","start","console","error","next","value","forEach","subscription","unsubscribe","register"],"sources":["/Users/ericli/node_modules/@aws-amplify/api-graphql/node_modules/@aws-amplify/pubsub/src/PubSub.ts"],"sourcesContent":["/*\n * Copyright 2017-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\n// import '../Common/Polyfills';\nimport Observable from 'zen-observable-ts';\n\nimport {\n\tAmplify,\n\tbrowserOrNode,\n\tConsoleLogger as Logger,\n\tINTERNAL_AWS_APPSYNC_PUBSUB_PROVIDER,\n\tINTERNAL_AWS_APPSYNC_REALTIME_PUBSUB_PROVIDER,\n} from '@aws-amplify/core';\nimport { PubSubProvider, PubSubOptions, ProvidertOptions } from './types';\nimport { AWSAppSyncProvider, AWSAppSyncRealTimeProvider } from './Providers';\n\nconst { isNode } = browserOrNode();\nconst logger = new Logger('PubSub');\n\nexport class PubSubClass {\n\tprivate _options: PubSubOptions;\n\n\tprivate _pluggables: PubSubProvider[];\n\n\t/**\n\t * Internal instance of AWSAppSyncProvider used by the API category to subscribe to AppSync\n\t */\n\tprivate _awsAppSyncProvider: AWSAppSyncProvider;\n\n\t/**\n\t * Internal instance of AWSAppSyncRealTimeProvider used by the API category to subscribe to AppSync\n\t */\n\tprivate _awsAppSyncRealTimeProvider: AWSAppSyncRealTimeProvider;\n\n\t/**\n\t * Lazy instantiate AWSAppSyncProvider when it is required by the API category\n\t */\n\tprivate get awsAppSyncProvider() {\n\t\tif (!this._awsAppSyncProvider) {\n\t\t\tthis._awsAppSyncProvider = new AWSAppSyncProvider(this._options);\n\t\t}\n\t\treturn this._awsAppSyncProvider;\n\t}\n\n\t/**\n\t * Lazy instantiate AWSAppSyncRealTimeProvider when it is required by the API category\n\t */\n\tprivate get awsAppSyncRealTimeProvider() {\n\t\tif (!this._awsAppSyncRealTimeProvider) {\n\t\t\tthis._awsAppSyncRealTimeProvider = new AWSAppSyncRealTimeProvider(\n\t\t\t\tthis._options\n\t\t\t);\n\t\t}\n\t\treturn this._awsAppSyncRealTimeProvider;\n\t}\n\n\t/**\n\t * Initialize PubSub with AWS configurations\n\t *\n\t * @param {PubSubOptions} options - Configuration object for PubSub\n\t */\n\tconstructor(options: PubSubOptions) {\n\t\tthis._options = options;\n\t\tlogger.debug('PubSub Options', this._options);\n\t\tthis._pluggables = [];\n\t\tthis.subscribe = this.subscribe.bind(this);\n\t}\n\n\tpublic getModuleName() {\n\t\treturn 'PubSub';\n\t}\n\n\t/**\n\t * Configure PubSub part with configurations\n\t *\n\t * @param {PubSubOptions} config - Configuration for PubSub\n\t * @return {Object} - The current configuration\n\t */\n\tconfigure(options: PubSubOptions) {\n\t\tconst opt = options ? options.PubSub || options : {};\n\t\tlogger.debug('configure PubSub', { opt });\n\n\t\tthis._options = Object.assign({}, this._options, opt);\n\n\t\tthis._pluggables.map(pluggable => pluggable.configure(this._options));\n\n\t\treturn this._options;\n\t}\n\n\t/**\n\t * add plugin into Analytics category\n\t * @param {Object} pluggable - an instance of the plugin\n\t */\n\tpublic async addPluggable(pluggable: PubSubProvider) {\n\t\tif (pluggable && pluggable.getCategory() === 'PubSub') {\n\t\t\tthis._pluggables.push(pluggable);\n\n\t\t\tconst config = pluggable.configure(this._options);\n\n\t\t\treturn config;\n\t\t}\n\t}\n\n\tprivate getProviderByName(providerName) {\n\t\tif (providerName === INTERNAL_AWS_APPSYNC_PUBSUB_PROVIDER) {\n\t\t\treturn this.awsAppSyncProvider;\n\t\t}\n\t\tif (providerName === INTERNAL_AWS_APPSYNC_REALTIME_PUBSUB_PROVIDER) {\n\t\t\treturn this.awsAppSyncRealTimeProvider;\n\t\t}\n\n\t\treturn this._pluggables.find(\n\t\t\tpluggable => pluggable.getProviderName() === providerName\n\t\t);\n\t}\n\n\tprivate getProviders(options: ProvidertOptions = {}) {\n\t\tconst { provider: providerName } = options;\n\t\tif (!providerName) {\n\t\t\treturn this._pluggables;\n\t\t}\n\n\t\tconst provider = this.getProviderByName(providerName);\n\t\tif (!provider) {\n\t\t\tthrow new Error(`Could not find provider named ${providerName}`);\n\t\t}\n\n\t\treturn [provider];\n\t}\n\n\tasync publish(\n\t\ttopics: string[] | string,\n\t\tmsg: any,\n\t\toptions?: ProvidertOptions\n\t) {\n\t\treturn Promise.all(\n\t\t\tthis.getProviders(options).map(provider =>\n\t\t\t\tprovider.publish(topics, msg, options)\n\t\t\t)\n\t\t);\n\t}\n\n\tsubscribe(\n\t\ttopics: string[] | string,\n\t\toptions?: ProvidertOptions\n\t): Observable<any> {\n\t\tif (isNode && this._options && this._options.ssr) {\n\t\t\tthrow new Error(\n\t\t\t\t'Subscriptions are not supported for Server-Side Rendering (SSR)'\n\t\t\t);\n\t\t}\n\n\t\tlogger.debug('subscribe options', options);\n\n\t\tconst providers = this.getProviders(options);\n\n\t\treturn new Observable(observer => {\n\t\t\tconst observables = providers.map(provider => ({\n\t\t\t\tprovider,\n\t\t\t\tobservable: provider.subscribe(topics, options),\n\t\t\t}));\n\n\t\t\tconst subscriptions = observables.map(({ provider, observable }) =>\n\t\t\t\tobservable.subscribe({\n\t\t\t\t\tstart: console.error,\n\t\t\t\t\tnext: value => observer.next({ provider, value }),\n\t\t\t\t\terror: error => observer.error({ provider, error }),\n\t\t\t\t\t// complete: observer.complete, // TODO: when all completed, complete the outer one\n\t\t\t\t})\n\t\t\t);\n\n\t\t\treturn () =>\n\t\t\t\tsubscriptions.forEach(subscription => subscription.unsubscribe());\n\t\t});\n\t}\n}\n\nexport const PubSub = new PubSubClass(null);\nAmplify.register(PubSub);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}