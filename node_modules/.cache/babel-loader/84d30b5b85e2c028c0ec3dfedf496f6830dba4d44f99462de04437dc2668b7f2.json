{"ast":null,"code":"import _regeneratorRuntime from \"/Users/ericli/Desktop/pill2/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _objectSpread from \"/Users/ericli/Desktop/pill2/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _asyncToGenerator from \"/Users/ericli/Desktop/pill2/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { HttpRequest } from \"@aws-sdk/protocol-http\";\nvar CONTENT_LENGTH_HEADER = \"content-length\";\nexport function checkContentLengthHeader() {\n  return function (next, context) {\n    return /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(args) {\n        var request, _context$logger, message;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              request = args.request;\n              if (HttpRequest.isInstance(request)) {\n                if (!request.headers[CONTENT_LENGTH_HEADER]) {\n                  message = \"Are you using a Stream of unknown length as the Body of a PutObject request? Consider using Upload instead from @aws-sdk/lib-storage.\";\n                  if (typeof (context === null || context === void 0 ? void 0 : (_context$logger = context.logger) === null || _context$logger === void 0 ? void 0 : _context$logger.warn) === \"function\") {\n                    context.logger.warn(message);\n                  } else {\n                    console.warn(message);\n                  }\n                }\n              }\n              return _context.abrupt(\"return\", next(_objectSpread({}, args)));\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      }));\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n  };\n}\nexport var checkContentLengthHeaderMiddlewareOptions = {\n  step: \"finalizeRequest\",\n  tags: [\"CHECK_CONTENT_LENGTH_HEADER\"],\n  name: \"getCheckContentLengthHeaderPlugin\",\n  override: true\n};\nexport var getCheckContentLengthHeaderPlugin = function getCheckContentLengthHeaderPlugin(unused) {\n  return {\n    applyToStack: function applyToStack(clientStack) {\n      clientStack.add(checkContentLengthHeader(), checkContentLengthHeaderMiddlewareOptions);\n    }\n  };\n};","map":{"version":3,"names":["HttpRequest","CONTENT_LENGTH_HEADER","checkContentLengthHeader","next","context","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","args","request","_context$logger","message","wrap","_callee$","_context","prev","isInstance","headers","logger","warn","console","abrupt","_objectSpread","stop","_x","apply","arguments","checkContentLengthHeaderMiddlewareOptions","step","tags","name","override","getCheckContentLengthHeaderPlugin","unused","applyToStack","clientStack","add"],"sources":["/Users/ericli/Desktop/pill2/node_modules/@aws-sdk/middleware-sdk-s3/dist-es/check-content-length-header.js"],"sourcesContent":["import { HttpRequest } from \"@aws-sdk/protocol-http\";\nconst CONTENT_LENGTH_HEADER = \"content-length\";\nexport function checkContentLengthHeader() {\n    return (next, context) => async (args) => {\n        const { request } = args;\n        if (HttpRequest.isInstance(request)) {\n            if (!request.headers[CONTENT_LENGTH_HEADER]) {\n                const message = `Are you using a Stream of unknown length as the Body of a PutObject request? Consider using Upload instead from @aws-sdk/lib-storage.`;\n                if (typeof context?.logger?.warn === \"function\") {\n                    context.logger.warn(message);\n                }\n                else {\n                    console.warn(message);\n                }\n            }\n        }\n        return next({ ...args });\n    };\n}\nexport const checkContentLengthHeaderMiddlewareOptions = {\n    step: \"finalizeRequest\",\n    tags: [\"CHECK_CONTENT_LENGTH_HEADER\"],\n    name: \"getCheckContentLengthHeaderPlugin\",\n    override: true,\n};\nexport const getCheckContentLengthHeaderPlugin = (unused) => ({\n    applyToStack: (clientStack) => {\n        clientStack.add(checkContentLengthHeader(), checkContentLengthHeaderMiddlewareOptions);\n    },\n});\n"],"mappings":";;;AAAA,SAASA,WAAW,QAAQ,wBAAwB;AACpD,IAAMC,qBAAqB,GAAG,gBAAgB;AAC9C,OAAO,SAASC,wBAAwBA,CAAA,EAAG;EACvC,OAAO,UAACC,IAAI,EAAEC,OAAO;IAAA;MAAA,IAAAC,IAAA,GAAAC,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CAAK,SAAAC,QAAOC,IAAI;QAAA,IAAAC,OAAA,EAAAC,eAAA,EAAAC,OAAA;QAAA,OAAAN,mBAAA,GAAAO,IAAA,UAAAC,SAAAC,QAAA;UAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAb,IAAA;YAAA;cACzBQ,OAAO,GAAKD,IAAI,CAAhBC,OAAO;cACf,IAAIX,WAAW,CAACkB,UAAU,CAACP,OAAO,CAAC,EAAE;gBACjC,IAAI,CAACA,OAAO,CAACQ,OAAO,CAAClB,qBAAqB,CAAC,EAAE;kBACnCY,OAAO;kBACb,IAAI,QAAOT,OAAO,aAAPA,OAAO,wBAAAQ,eAAA,GAAPR,OAAO,CAAEgB,MAAM,cAAAR,eAAA,uBAAfA,eAAA,CAAiBS,IAAI,MAAK,UAAU,EAAE;oBAC7CjB,OAAO,CAACgB,MAAM,CAACC,IAAI,CAACR,OAAO,CAAC;kBAChC,CAAC,MACI;oBACDS,OAAO,CAACD,IAAI,CAACR,OAAO,CAAC;kBACzB;gBACJ;cACJ;cAAC,OAAAG,QAAA,CAAAO,MAAA,WACMpB,IAAI,CAAAqB,aAAA,KAAMd,IAAI,EAAG;YAAA;YAAA;cAAA,OAAAM,QAAA,CAAAS,IAAA;UAAA;QAAA,GAAAhB,OAAA;MAAA,CAC3B;MAAA,iBAAAiB,EAAA;QAAA,OAAArB,IAAA,CAAAsB,KAAA,OAAAC,SAAA;MAAA;IAAA;EAAA;AACL;AACA,OAAO,IAAMC,yCAAyC,GAAG;EACrDC,IAAI,EAAE,iBAAiB;EACvBC,IAAI,EAAE,CAAC,6BAA6B,CAAC;EACrCC,IAAI,EAAE,mCAAmC;EACzCC,QAAQ,EAAE;AACd,CAAC;AACD,OAAO,IAAMC,iCAAiC,GAAG,SAApCA,iCAAiCA,CAAIC,MAAM;EAAA,OAAM;IAC1DC,YAAY,EAAE,SAAAA,aAACC,WAAW,EAAK;MAC3BA,WAAW,CAACC,GAAG,CAACpC,wBAAwB,EAAE,EAAE2B,yCAAyC,CAAC;IAC1F;EACJ,CAAC;AAAA,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}