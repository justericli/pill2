{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { __assign } from \"tslib\";\nimport { Amplify, ConsoleLogger as Logger } from '@aws-amplify/core';\nimport InAppMessaging from './InAppMessaging';\nvar logger = new Logger('Notifications');\nvar NotificationsClass = /** @class */function () {\n  function NotificationsClass() {\n    var _this = this;\n    this.config = {};\n    /**\n     * Configure Notifications\n     * @param {Object} config - Notifications configuration object\n     */\n    this.configure = function (_a) {\n      var config = (_a === void 0 ? {} : _a).Notifications;\n      _this.config = __assign(__assign({}, _this.config), config);\n      logger.debug('configure Notifications', config);\n      // Configure sub-categories\n      _this.inAppMessaging.configure(_this.config.InAppMessaging);\n      return _this.config;\n    };\n    this.inAppMessaging = new InAppMessaging();\n  }\n  /**\n   * Get the name of the module category\n   * @returns {string} name of the module category\n   */\n  NotificationsClass.prototype.getModuleName = function () {\n    return 'Notifications';\n  };\n  Object.defineProperty(NotificationsClass.prototype, \"InAppMessaging\", {\n    get: function () {\n      return this.inAppMessaging;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return NotificationsClass;\n}();\nvar Notifications = new NotificationsClass();\nexport default Notifications;\nAmplify.register(Notifications);","map":{"version":3,"names":["Amplify","ConsoleLogger","Logger","InAppMessaging","logger","NotificationsClass","_this","config","configure","_a","Notifications","__assign","debug","inAppMessaging","prototype","getModuleName","Object","defineProperty","get","register"],"sources":["/Users/ericli/Desktop/pill2/node_modules/@aws-amplify/notifications/src/Notifications.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport { Amplify, ConsoleLogger as Logger } from '@aws-amplify/core';\nimport InAppMessaging from './InAppMessaging';\nimport { NotificationsCategory, NotificationsConfig } from './types';\n\nconst logger = new Logger('Notifications');\n\nclass NotificationsClass {\n\tprivate config: Record<string, any> = {};\n\tprivate inAppMessaging: InAppMessaging;\n\n\tconstructor() {\n\t\tthis.inAppMessaging = new InAppMessaging();\n\t}\n\n\t/**\n\t * Get the name of the module category\n\t * @returns {string} name of the module category\n\t */\n\tgetModuleName(): NotificationsCategory {\n\t\treturn 'Notifications';\n\t}\n\n\t/**\n\t * Configure Notifications\n\t * @param {Object} config - Notifications configuration object\n\t */\n\tconfigure = ({ Notifications: config }: NotificationsConfig = {}) => {\n\t\tthis.config = { ...this.config, ...config };\n\n\t\tlogger.debug('configure Notifications', config);\n\n\t\t// Configure sub-categories\n\t\tthis.inAppMessaging.configure(this.config.InAppMessaging);\n\n\t\treturn this.config;\n\t};\n\n\tget InAppMessaging() {\n\t\treturn this.inAppMessaging;\n\t}\n}\n\nconst Notifications = new NotificationsClass();\n\nexport default Notifications;\nAmplify.register(Notifications);\n"],"mappings":"AAAA;AACA;;AAEA,SAASA,OAAO,EAAEC,aAAa,IAAIC,MAAM,QAAQ,mBAAmB;AACpE,OAAOC,cAAc,MAAM,kBAAkB;AAG7C,IAAMC,MAAM,GAAG,IAAIF,MAAM,CAAC,eAAe,CAAC;AAE1C,IAAAG,kBAAA;EAIC,SAAAA,mBAAA;IAAA,IAAAC,KAAA;IAHQ,KAAAC,MAAM,GAAwB,EAAE;IAexC;;;;IAIA,KAAAC,SAAS,GAAG,UAACC,EAAmD;UAAjDF,MAAA,IAAAE,EAAA,mBAAAA,EAAA,EAAAC,aAAqB;MACnCJ,KAAI,CAACC,MAAM,GAAAI,QAAA,CAAAA,QAAA,KAAQL,KAAI,CAACC,MAAM,GAAKA,MAAM,CAAE;MAE3CH,MAAM,CAACQ,KAAK,CAAC,yBAAyB,EAAEL,MAAM,CAAC;MAE/C;MACAD,KAAI,CAACO,cAAc,CAACL,SAAS,CAACF,KAAI,CAACC,MAAM,CAACJ,cAAc,CAAC;MAEzD,OAAOG,KAAI,CAACC,MAAM;IACnB,CAAC;IAxBA,IAAI,CAACM,cAAc,GAAG,IAAIV,cAAc,EAAE;EAC3C;EAEA;;;;EAIAE,kBAAA,CAAAS,SAAA,CAAAC,aAAa,GAAb;IACC,OAAO,eAAe;EACvB,CAAC;EAiBDC,MAAA,CAAAC,cAAA,CAAIZ,kBAAA,CAAAS,SAAA,kBAAc;SAAlB,SAAAI,CAAA;MACC,OAAO,IAAI,CAACL,cAAc;IAC3B,CAAC;;;;EACF,OAAAR,kBAAC;AAAD,CAAC,EAlCD;AAoCA,IAAMK,aAAa,GAAG,IAAIL,kBAAkB,EAAE;AAE9C,eAAeK,aAAa;AAC5BV,OAAO,CAACmB,QAAQ,CAACT,aAAa,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}