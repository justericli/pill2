{"ast":null,"code":"var _jsxFileName = \"/Users/ericli/Desktop/pill2/src/components/Forms/ListingForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Dropzone from \"react-dropzone\";\nimport { S3Client, PutObjectCommand } from \"@aws-sdk/client-s3\";\nimport { BsCloudUpload } from \"react-icons/bs\"; // Import the desired icon\nimport Downshift from \"downshift\";\n\n// Configure the AWS SDK\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst s3 = new S3Client({\n  region: \"us-east-1\",\n  // Replace with your desired region\n  credentials: {\n    accessKeyId: \"AKIA2AJRN6P67CIV6TTD\",\n    secretAccessKey: \"ZA/r6XSUs2GdDq5Io3ryjJolRvp31WMvIMKj9pRp\"\n  }\n});\nconst ImageUpload = () => {\n  _s();\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [cost, setCost] = useState(\"\");\n  const [address, setAddress] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n\n  // Add your Google Maps API key here\n  const GOOGLE_MAPS_API_KEY = \"AIzaSyBYjnS4jS4wvokqFuovLwp8kOJ_Aa1Qi-c\";\n  const handleFileDrop = acceptedFiles => {\n    setSelectedFile(acceptedFiles[0]);\n  };\n  const handleUpload = async () => {\n    if (selectedFile) {\n      const params = {\n        Bucket: \"pilli-storage-f68b2ca801743-dev\",\n        Key: selectedFile.name,\n        Body: selectedFile,\n        ACL: \"public-read\" // Set the desired access control level for the uploaded image\n      };\n\n      try {\n        const data = await s3.send(new PutObjectCommand(params));\n        console.log(\"Image uploaded successfully:\", data);\n        // Perform any further actions after successful image upload\n      } catch (err) {\n        console.log(\"Error:\", err);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      height: \"100vh\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Dropzone, {\n        onDrop: handleFileDrop,\n        children: _ref => {\n          let {\n            getRootProps,\n            getInputProps\n          } = _ref;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            ...getRootProps(),\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              ...getInputProps()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 15\n            }, this), selectedFile ? /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"Selected file: \", selectedFile.name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                children: \"Create a new listing\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(BsCloudUpload, {\n                size: 48\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 19\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n                children: \"Drag and drop an image here or click to select\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Cost:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: cost,\n            onChange: e => setCost(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Address:\", /*#__PURE__*/_jsxDEV(Downshift, {\n            onChange: selection => setAddress(selection),\n            itemToString: item => item ? item : \"\",\n            children: _ref2 => {\n              let {\n                getInputProps,\n                getItemProps,\n                isOpen,\n                inputValue,\n                highlightedIndex\n              } = _ref2;\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  ...getInputProps()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 97,\n                  columnNumber: 19\n                }, this), isOpen ? /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: addresses.filter(item => !inputValue || item.includes(inputValue)).map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                    ...getItemProps({\n                      key: item,\n                      index,\n                      item\n                    }),\n                    style: {\n                      backgroundColor: highlightedIndex === index ? \"lightgray\" : \"white\",\n                      fontWeight: highlightedIndex === index ? \"bold\" : \"normal\"\n                    },\n                    children: item\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 105,\n                    columnNumber: 27\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 99,\n                  columnNumber: 21\n                }, this) : null]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 17\n              }, this);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Email:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: email,\n            onChange: e => setEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleUpload,\n        children: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(ImageUpload, \"GCO4KQ/RCLApKDGvYNMP94HzIV0=\");\n_c = ImageUpload;\nexport default ImageUpload;\nvar _c;\n$RefreshReg$(_c, \"ImageUpload\");","map":{"version":3,"names":["React","useState","Dropzone","S3Client","PutObjectCommand","BsCloudUpload","Downshift","jsxDEV","_jsxDEV","s3","region","credentials","accessKeyId","secretAccessKey","ImageUpload","_s","selectedFile","setSelectedFile","cost","setCost","address","setAddress","email","setEmail","GOOGLE_MAPS_API_KEY","handleFileDrop","acceptedFiles","handleUpload","params","Bucket","Key","name","Body","ACL","data","send","console","log","err","style","display","justifyContent","alignItems","height","children","onDrop","_ref","getRootProps","getInputProps","fileName","_jsxFileName","lineNumber","columnNumber","size","type","value","onChange","e","target","selection","itemToString","item","_ref2","getItemProps","isOpen","inputValue","highlightedIndex","addresses","filter","includes","map","index","key","backgroundColor","fontWeight","onClick","_c","$RefreshReg$"],"sources":["/Users/ericli/Desktop/pill2/src/components/Forms/ListingForm.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport Dropzone from \"react-dropzone\";\nimport { S3Client, PutObjectCommand } from \"@aws-sdk/client-s3\";\nimport { BsCloudUpload } from \"react-icons/bs\"; // Import the desired icon\nimport Downshift from \"downshift\";\n\n// Configure the AWS SDK\nconst s3 = new S3Client({\n  region: \"us-east-1\", // Replace with your desired region\n  credentials: {\n    accessKeyId: \"AKIA2AJRN6P67CIV6TTD\",\n    secretAccessKey: \"ZA/r6XSUs2GdDq5Io3ryjJolRvp31WMvIMKj9pRp\",\n  },\n});\n\nconst ImageUpload = () => {\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [cost, setCost] = useState(\"\");\n  const [address, setAddress] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n\n  // Add your Google Maps API key here\n  const GOOGLE_MAPS_API_KEY = \"AIzaSyBYjnS4jS4wvokqFuovLwp8kOJ_Aa1Qi-c\";\n\n  const handleFileDrop = (acceptedFiles) => {\n    setSelectedFile(acceptedFiles[0]);\n  };\n\n  const handleUpload = async () => {\n    if (selectedFile) {\n      const params = {\n        Bucket: \"pilli-storage-f68b2ca801743-dev\",\n        Key: selectedFile.name,\n        Body: selectedFile,\n        ACL: \"public-read\", // Set the desired access control level for the uploaded image\n      };\n\n      try {\n        const data = await s3.send(new PutObjectCommand(params));\n        console.log(\"Image uploaded successfully:\", data);\n        // Perform any further actions after successful image upload\n      } catch (err) {\n        console.log(\"Error:\", err);\n      }\n    }\n  };\n\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        height: \"100vh\",\n      }}\n    >\n      <div>\n        <Dropzone onDrop={handleFileDrop}>\n          {({ getRootProps, getInputProps }) => (\n            <div {...getRootProps()}>\n              <input {...getInputProps()} />\n              {selectedFile ? (\n                <div>Selected file: {selectedFile.name}</div>\n              ) : (\n                <div>\n                  <h1>Create a new listing</h1>\n                  <BsCloudUpload size={48} /> {/* Render the icon */}\n                  <div>Drag and drop an image here or click to select</div>\n                </div>\n              )}\n            </div>\n          )}\n        </Dropzone>\n        <form>\n          <label>\n            Cost:\n            <input\n              type=\"text\"\n              value={cost}\n              onChange={(e) => setCost(e.target.value)}\n            />\n          </label>\n          <label>\n            Address:\n            <Downshift\n              onChange={(selection) => setAddress(selection)}\n              itemToString={(item) => (item ? item : \"\")}\n            >\n              {({\n                getInputProps,\n                getItemProps,\n                isOpen,\n                inputValue,\n                highlightedIndex,\n              }) => (\n                <div>\n                  <input {...getInputProps()} />\n                  {isOpen ? (\n                    <div>\n                      {addresses\n                        .filter(\n                          (item) => !inputValue || item.includes(inputValue)\n                        )\n                        .map((item, index) => (\n                          <div\n                            {...getItemProps({ key: item, index, item })}\n                            style={{\n                              backgroundColor:\n                                highlightedIndex === index\n                                  ? \"lightgray\"\n                                  : \"white\",\n                              fontWeight:\n                                highlightedIndex === index ? \"bold\" : \"normal\",\n                            }}\n                          >\n                            {item}\n                          </div>\n                        ))}\n                    </div>\n                  ) : null}\n                </div>\n              )}\n            </Downshift>\n          </label>\n          <label>\n            Email:\n            <input\n              type=\"text\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n            />\n          </label>\n        </form>\n        <button onClick={handleUpload}>Upload</button>\n      </div>\n    </div>\n  );\n};\n\nexport default ImageUpload;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}