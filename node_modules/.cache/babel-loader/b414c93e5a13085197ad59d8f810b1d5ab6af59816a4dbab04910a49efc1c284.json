{"ast":null,"code":"import _regeneratorRuntime from \"/Users/ericli/Desktop/pill2/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/ericli/Desktop/pill2/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _classCallCheck from \"/Users/ericli/Desktop/pill2/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/ericli/Desktop/pill2/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { RETRY_MODES } from \"./config\";\nimport { DefaultRateLimiter } from \"./DefaultRateLimiter\";\nimport { StandardRetryStrategy } from \"./StandardRetryStrategy\";\nexport var AdaptiveRetryStrategy = /*#__PURE__*/function () {\n  function AdaptiveRetryStrategy(maxAttemptsProvider, options) {\n    _classCallCheck(this, AdaptiveRetryStrategy);\n    this.maxAttemptsProvider = maxAttemptsProvider;\n    this.mode = RETRY_MODES.ADAPTIVE;\n    var _ref = options !== null && options !== void 0 ? options : {},\n      rateLimiter = _ref.rateLimiter;\n    this.rateLimiter = rateLimiter !== null && rateLimiter !== void 0 ? rateLimiter : new DefaultRateLimiter();\n    this.standardRetryStrategy = new StandardRetryStrategy(maxAttemptsProvider);\n  }\n  _createClass(AdaptiveRetryStrategy, [{\n    key: \"acquireInitialRetryToken\",\n    value: function () {\n      var _acquireInitialRetryToken = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(retryTokenScope) {\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return this.rateLimiter.getSendToken();\n            case 2:\n              return _context.abrupt(\"return\", this.standardRetryStrategy.acquireInitialRetryToken(retryTokenScope));\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this);\n      }));\n      function acquireInitialRetryToken(_x) {\n        return _acquireInitialRetryToken.apply(this, arguments);\n      }\n      return acquireInitialRetryToken;\n    }()\n  }, {\n    key: \"refreshRetryTokenForRetry\",\n    value: function () {\n      var _refreshRetryTokenForRetry = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(tokenToRenew, errorInfo) {\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              this.rateLimiter.updateClientSendingRate(errorInfo);\n              return _context2.abrupt(\"return\", this.standardRetryStrategy.refreshRetryTokenForRetry(tokenToRenew, errorInfo));\n            case 2:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, this);\n      }));\n      function refreshRetryTokenForRetry(_x2, _x3) {\n        return _refreshRetryTokenForRetry.apply(this, arguments);\n      }\n      return refreshRetryTokenForRetry;\n    }()\n  }, {\n    key: \"recordSuccess\",\n    value: function recordSuccess(token) {\n      this.rateLimiter.updateClientSendingRate({});\n      this.standardRetryStrategy.recordSuccess(token);\n    }\n  }]);\n  return AdaptiveRetryStrategy;\n}();","map":{"version":3,"names":["RETRY_MODES","DefaultRateLimiter","StandardRetryStrategy","AdaptiveRetryStrategy","maxAttemptsProvider","options","_classCallCheck","mode","ADAPTIVE","_ref","rateLimiter","standardRetryStrategy","_createClass","key","value","_acquireInitialRetryToken","_asyncToGenerator","_regeneratorRuntime","mark","_callee","retryTokenScope","wrap","_callee$","_context","prev","next","getSendToken","abrupt","acquireInitialRetryToken","stop","_x","apply","arguments","_refreshRetryTokenForRetry","_callee2","tokenToRenew","errorInfo","_callee2$","_context2","updateClientSendingRate","refreshRetryTokenForRetry","_x2","_x3","recordSuccess","token"],"sources":["/Users/ericli/Desktop/pill2/node_modules/@aws-sdk/util-retry/dist-es/AdaptiveRetryStrategy.js"],"sourcesContent":["import { RETRY_MODES } from \"./config\";\nimport { DefaultRateLimiter } from \"./DefaultRateLimiter\";\nimport { StandardRetryStrategy } from \"./StandardRetryStrategy\";\nexport class AdaptiveRetryStrategy {\n    constructor(maxAttemptsProvider, options) {\n        this.maxAttemptsProvider = maxAttemptsProvider;\n        this.mode = RETRY_MODES.ADAPTIVE;\n        const { rateLimiter } = options ?? {};\n        this.rateLimiter = rateLimiter ?? new DefaultRateLimiter();\n        this.standardRetryStrategy = new StandardRetryStrategy(maxAttemptsProvider);\n    }\n    async acquireInitialRetryToken(retryTokenScope) {\n        await this.rateLimiter.getSendToken();\n        return this.standardRetryStrategy.acquireInitialRetryToken(retryTokenScope);\n    }\n    async refreshRetryTokenForRetry(tokenToRenew, errorInfo) {\n        this.rateLimiter.updateClientSendingRate(errorInfo);\n        return this.standardRetryStrategy.refreshRetryTokenForRetry(tokenToRenew, errorInfo);\n    }\n    recordSuccess(token) {\n        this.rateLimiter.updateClientSendingRate({});\n        this.standardRetryStrategy.recordSuccess(token);\n    }\n}\n"],"mappings":";;;;AAAA,SAASA,WAAW,QAAQ,UAAU;AACtC,SAASC,kBAAkB,QAAQ,sBAAsB;AACzD,SAASC,qBAAqB,QAAQ,yBAAyB;AAC/D,WAAaC,qBAAqB;EAC9B,SAAAA,sBAAYC,mBAAmB,EAAEC,OAAO,EAAE;IAAAC,eAAA,OAAAH,qBAAA;IACtC,IAAI,CAACC,mBAAmB,GAAGA,mBAAmB;IAC9C,IAAI,CAACG,IAAI,GAAGP,WAAW,CAACQ,QAAQ;IAChC,IAAAC,IAAA,GAAwBJ,OAAO,aAAPA,OAAO,cAAPA,OAAO,GAAI,CAAC,CAAC;MAA7BK,WAAW,GAAAD,IAAA,CAAXC,WAAW;IACnB,IAAI,CAACA,WAAW,GAAGA,WAAW,aAAXA,WAAW,cAAXA,WAAW,GAAI,IAAIT,kBAAkB,EAAE;IAC1D,IAAI,CAACU,qBAAqB,GAAG,IAAIT,qBAAqB,CAACE,mBAAmB,CAAC;EAC/E;EAACQ,YAAA,CAAAT,qBAAA;IAAAU,GAAA;IAAAC,KAAA;MAAA,IAAAC,yBAAA,GAAAC,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CACD,SAAAC,QAA+BC,eAAe;QAAA,OAAAH,mBAAA,GAAAI,IAAA,UAAAC,SAAAC,QAAA;UAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;YAAA;cAAAF,QAAA,CAAAE,IAAA;cAAA,OACpC,IAAI,CAACf,WAAW,CAACgB,YAAY,EAAE;YAAA;cAAA,OAAAH,QAAA,CAAAI,MAAA,WAC9B,IAAI,CAAChB,qBAAqB,CAACiB,wBAAwB,CAACR,eAAe,CAAC;YAAA;YAAA;cAAA,OAAAG,QAAA,CAAAM,IAAA;UAAA;QAAA,GAAAV,OAAA;MAAA,CAC9E;MAAA,SAAAS,yBAAAE,EAAA;QAAA,OAAAf,yBAAA,CAAAgB,KAAA,OAAAC,SAAA;MAAA;MAAA,OAAAJ,wBAAA;IAAA;EAAA;IAAAf,GAAA;IAAAC,KAAA;MAAA,IAAAmB,0BAAA,GAAAjB,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CACD,SAAAgB,SAAgCC,YAAY,EAAEC,SAAS;QAAA,OAAAnB,mBAAA,GAAAI,IAAA,UAAAgB,UAAAC,SAAA;UAAA,kBAAAA,SAAA,CAAAd,IAAA,GAAAc,SAAA,CAAAb,IAAA;YAAA;cACnD,IAAI,CAACf,WAAW,CAAC6B,uBAAuB,CAACH,SAAS,CAAC;cAAC,OAAAE,SAAA,CAAAX,MAAA,WAC7C,IAAI,CAAChB,qBAAqB,CAAC6B,yBAAyB,CAACL,YAAY,EAAEC,SAAS,CAAC;YAAA;YAAA;cAAA,OAAAE,SAAA,CAAAT,IAAA;UAAA;QAAA,GAAAK,QAAA;MAAA,CACvF;MAAA,SAAAM,0BAAAC,GAAA,EAAAC,GAAA;QAAA,OAAAT,0BAAA,CAAAF,KAAA,OAAAC,SAAA;MAAA;MAAA,OAAAQ,yBAAA;IAAA;EAAA;IAAA3B,GAAA;IAAAC,KAAA,EACD,SAAA6B,cAAcC,KAAK,EAAE;MACjB,IAAI,CAAClC,WAAW,CAAC6B,uBAAuB,CAAC,CAAC,CAAC,CAAC;MAC5C,IAAI,CAAC5B,qBAAqB,CAACgC,aAAa,CAACC,KAAK,CAAC;IACnD;EAAC;EAAA,OAAAzC,qBAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}