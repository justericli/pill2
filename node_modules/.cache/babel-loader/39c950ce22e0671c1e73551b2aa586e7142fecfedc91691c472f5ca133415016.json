{"ast":null,"code":"import _classCallCheck from \"/Users/ericli/Desktop/pill2/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/ericli/Desktop/pill2/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { Crc32 } from \"@aws-crypto/crc32\";\nimport { HeaderMarshaller } from \"./HeaderMarshaller\";\nimport { splitMessage } from \"./splitMessage\";\nexport var EventStreamCodec = /*#__PURE__*/function () {\n  function EventStreamCodec(toUtf8, fromUtf8) {\n    _classCallCheck(this, EventStreamCodec);\n    this.headerMarshaller = new HeaderMarshaller(toUtf8, fromUtf8);\n  }\n  _createClass(EventStreamCodec, [{\n    key: \"encode\",\n    value: function encode(_ref) {\n      var rawHeaders = _ref.headers,\n        body = _ref.body;\n      var headers = this.headerMarshaller.format(rawHeaders);\n      var length = headers.byteLength + body.byteLength + 16;\n      var out = new Uint8Array(length);\n      var view = new DataView(out.buffer, out.byteOffset, out.byteLength);\n      var checksum = new Crc32();\n      view.setUint32(0, length, false);\n      view.setUint32(4, headers.byteLength, false);\n      view.setUint32(8, checksum.update(out.subarray(0, 8)).digest(), false);\n      out.set(headers, 12);\n      out.set(body, headers.byteLength + 12);\n      view.setUint32(length - 4, checksum.update(out.subarray(8, length - 4)).digest(), false);\n      return out;\n    }\n  }, {\n    key: \"decode\",\n    value: function decode(message) {\n      var _splitMessage = splitMessage(message),\n        headers = _splitMessage.headers,\n        body = _splitMessage.body;\n      return {\n        headers: this.headerMarshaller.parse(headers),\n        body: body\n      };\n    }\n  }, {\n    key: \"formatHeaders\",\n    value: function formatHeaders(rawHeaders) {\n      return this.headerMarshaller.format(rawHeaders);\n    }\n  }]);\n  return EventStreamCodec;\n}();","map":{"version":3,"names":["Crc32","HeaderMarshaller","splitMessage","EventStreamCodec","toUtf8","fromUtf8","_classCallCheck","headerMarshaller","_createClass","key","value","encode","_ref","rawHeaders","headers","body","format","length","byteLength","out","Uint8Array","view","DataView","buffer","byteOffset","checksum","setUint32","update","subarray","digest","set","decode","message","_splitMessage","parse","formatHeaders"],"sources":["/Users/ericli/Desktop/pill2/node_modules/@aws-sdk/client-s3/node_modules/@aws-sdk/eventstream-codec/dist-es/EventStreamCodec.js"],"sourcesContent":["import { Crc32 } from \"@aws-crypto/crc32\";\nimport { HeaderMarshaller } from \"./HeaderMarshaller\";\nimport { splitMessage } from \"./splitMessage\";\nexport class EventStreamCodec {\n    constructor(toUtf8, fromUtf8) {\n        this.headerMarshaller = new HeaderMarshaller(toUtf8, fromUtf8);\n    }\n    encode({ headers: rawHeaders, body }) {\n        const headers = this.headerMarshaller.format(rawHeaders);\n        const length = headers.byteLength + body.byteLength + 16;\n        const out = new Uint8Array(length);\n        const view = new DataView(out.buffer, out.byteOffset, out.byteLength);\n        const checksum = new Crc32();\n        view.setUint32(0, length, false);\n        view.setUint32(4, headers.byteLength, false);\n        view.setUint32(8, checksum.update(out.subarray(0, 8)).digest(), false);\n        out.set(headers, 12);\n        out.set(body, headers.byteLength + 12);\n        view.setUint32(length - 4, checksum.update(out.subarray(8, length - 4)).digest(), false);\n        return out;\n    }\n    decode(message) {\n        const { headers, body } = splitMessage(message);\n        return { headers: this.headerMarshaller.parse(headers), body };\n    }\n    formatHeaders(rawHeaders) {\n        return this.headerMarshaller.format(rawHeaders);\n    }\n}\n"],"mappings":";;AAAA,SAASA,KAAK,QAAQ,mBAAmB;AACzC,SAASC,gBAAgB,QAAQ,oBAAoB;AACrD,SAASC,YAAY,QAAQ,gBAAgB;AAC7C,WAAaC,gBAAgB;EACzB,SAAAA,iBAAYC,MAAM,EAAEC,QAAQ,EAAE;IAAAC,eAAA,OAAAH,gBAAA;IAC1B,IAAI,CAACI,gBAAgB,GAAG,IAAIN,gBAAgB,CAACG,MAAM,EAAEC,QAAQ,CAAC;EAClE;EAACG,YAAA,CAAAL,gBAAA;IAAAM,GAAA;IAAAC,KAAA,EACD,SAAAC,OAAAC,IAAA,EAAsC;MAAA,IAApBC,UAAU,GAAAD,IAAA,CAAnBE,OAAO;QAAcC,IAAI,GAAAH,IAAA,CAAJG,IAAI;MAC9B,IAAMD,OAAO,GAAG,IAAI,CAACP,gBAAgB,CAACS,MAAM,CAACH,UAAU,CAAC;MACxD,IAAMI,MAAM,GAAGH,OAAO,CAACI,UAAU,GAAGH,IAAI,CAACG,UAAU,GAAG,EAAE;MACxD,IAAMC,GAAG,GAAG,IAAIC,UAAU,CAACH,MAAM,CAAC;MAClC,IAAMI,IAAI,GAAG,IAAIC,QAAQ,CAACH,GAAG,CAACI,MAAM,EAAEJ,GAAG,CAACK,UAAU,EAAEL,GAAG,CAACD,UAAU,CAAC;MACrE,IAAMO,QAAQ,GAAG,IAAIzB,KAAK,EAAE;MAC5BqB,IAAI,CAACK,SAAS,CAAC,CAAC,EAAET,MAAM,EAAE,KAAK,CAAC;MAChCI,IAAI,CAACK,SAAS,CAAC,CAAC,EAAEZ,OAAO,CAACI,UAAU,EAAE,KAAK,CAAC;MAC5CG,IAAI,CAACK,SAAS,CAAC,CAAC,EAAED,QAAQ,CAACE,MAAM,CAACR,GAAG,CAACS,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAACC,MAAM,EAAE,EAAE,KAAK,CAAC;MACtEV,GAAG,CAACW,GAAG,CAAChB,OAAO,EAAE,EAAE,CAAC;MACpBK,GAAG,CAACW,GAAG,CAACf,IAAI,EAAED,OAAO,CAACI,UAAU,GAAG,EAAE,CAAC;MACtCG,IAAI,CAACK,SAAS,CAACT,MAAM,GAAG,CAAC,EAAEQ,QAAQ,CAACE,MAAM,CAACR,GAAG,CAACS,QAAQ,CAAC,CAAC,EAAEX,MAAM,GAAG,CAAC,CAAC,CAAC,CAACY,MAAM,EAAE,EAAE,KAAK,CAAC;MACxF,OAAOV,GAAG;IACd;EAAC;IAAAV,GAAA;IAAAC,KAAA,EACD,SAAAqB,OAAOC,OAAO,EAAE;MACZ,IAAAC,aAAA,GAA0B/B,YAAY,CAAC8B,OAAO,CAAC;QAAvClB,OAAO,GAAAmB,aAAA,CAAPnB,OAAO;QAAEC,IAAI,GAAAkB,aAAA,CAAJlB,IAAI;MACrB,OAAO;QAAED,OAAO,EAAE,IAAI,CAACP,gBAAgB,CAAC2B,KAAK,CAACpB,OAAO,CAAC;QAAEC,IAAI,EAAJA;MAAK,CAAC;IAClE;EAAC;IAAAN,GAAA;IAAAC,KAAA,EACD,SAAAyB,cAActB,UAAU,EAAE;MACtB,OAAO,IAAI,CAACN,gBAAgB,CAACS,MAAM,CAACH,UAAU,CAAC;IACnD;EAAC;EAAA,OAAAV,gBAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}