{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { isa as __isa } from \"@aws-sdk/smithy-client\";\nexport var AddTagsToStreamInput;\n(function (AddTagsToStreamInput) {\n  AddTagsToStreamInput.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n  AddTagsToStreamInput.isa = function (o) {\n    return __isa(o, \"AddTagsToStreamInput\");\n  };\n})(AddTagsToStreamInput || (AddTagsToStreamInput = {}));\nexport var Consumer;\n(function (Consumer) {\n  Consumer.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n  Consumer.isa = function (o) {\n    return __isa(o, \"Consumer\");\n  };\n})(Consumer || (Consumer = {}));\nexport var ConsumerDescription;\n(function (ConsumerDescription) {\n  ConsumerDescription.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n  ConsumerDescription.isa = function (o) {\n    return __isa(o, \"ConsumerDescription\");\n  };\n})(ConsumerDescription || (ConsumerDescription = {}));\nexport var ConsumerStatus;\n(function (ConsumerStatus) {\n  ConsumerStatus[\"ACTIVE\"] = \"ACTIVE\";\n  ConsumerStatus[\"CREATING\"] = \"CREATING\";\n  ConsumerStatus[\"DELETING\"] = \"DELETING\";\n})(ConsumerStatus || (ConsumerStatus = {}));\nexport var CreateStreamInput;\n(function (CreateStreamInput) {\n  CreateStreamInput.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n  CreateStreamInput.isa = function (o) {\n    return __isa(o, \"CreateStreamInput\");\n  };\n})(CreateStreamInput || (CreateStreamInput = {}));\nexport var DecreaseStreamRetentionPeriodInput;\n(function (DecreaseStreamRetentionPeriodInput) {\n  DecreaseStreamRetentionPeriodInput.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n  DecreaseStreamRetentionPeriodInput.isa = function (o) {\n    return __isa(o, \"DecreaseStreamRetentionPeriodInput\");\n  };\n})(DecreaseStreamRetentionPeriodInput || (DecreaseStreamRetentionPeriodInput = {}));\nexport var DeleteStreamInput;\n(function (DeleteStreamInput) {\n  DeleteStreamInput.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n  DeleteStreamInput.isa = function (o) {\n    return __isa(o, \"DeleteStreamInput\");\n  };\n})(DeleteStreamInput || (DeleteStreamInput = {}));\nexport var DeregisterStreamConsumerInput;\n(function (DeregisterStreamConsumerInput) {\n  DeregisterStreamConsumerInput.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n  DeregisterStreamConsumerInput.isa = function (o) {\n    return __isa(o, \"DeregisterStreamConsumerInput\");\n  };\n})(DeregisterStreamConsumerInput || (DeregisterStreamConsumerInput = {}));\nexport var DescribeLimitsInput;\n(function (DescribeLimitsInput) {\n  DescribeLimitsInput.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n  DescribeLimitsInput.isa = function (o) {\n    return __isa(o, \"DescribeLimitsInput\");\n  };\n})(DescribeLimitsInput || (DescribeLimitsInput = {}));\nexport var DescribeLimitsOutput;\n(function (DescribeLimitsOutput) {\n  DescribeLimitsOutput.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n  DescribeLimitsOutput.isa = function (o) {\n    return __isa(o, \"DescribeLimitsOutput\");\n  };\n})(DescribeLimitsOutput || (DescribeLimitsOutput = {}));\nexport var DescribeStreamConsumerInput;\n(function (DescribeStreamConsumerInput) {\n  DescribeStreamConsumerInput.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n  DescribeStreamConsumerInput.isa = function (o) {\n    return __isa(o, \"DescribeStreamConsumerInput\");\n  };\n})(DescribeStreamConsumerInput || (DescribeStreamConsumerInput = {}));\nexport var DescribeStreamConsumerOutput;\n(function (DescribeStreamConsumerOutput) {\n  DescribeStreamConsumerOutput.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n  DescribeStreamConsumerOutput.isa = function (o) {\n    return __isa(o, \"DescribeStreamConsumerOutput\");\n  };\n})(DescribeStreamConsumerOutput || (DescribeStreamConsumerOutput = {}));\nexport var DescribeStreamInput;\n(function (DescribeStreamInput) {\n  DescribeStreamInput.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n  DescribeStreamInput.isa = function (o) {\n    return __isa(o, \"DescribeStreamInput\");\n  };\n})(DescribeStreamInput || (DescribeStreamInput = {}));\nexport var DescribeStreamOutput;\n(function (DescribeStreamOutput) {\n  DescribeStreamOutput.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n  DescribeStreamOutput.isa = function (o) {\n    return __isa(o, \"DescribeStreamOutput\");\n  };\n})(DescribeStreamOutput || (DescribeStreamOutput = {}));\nexport var DescribeStreamSummaryInput;\n(function (DescribeStreamSummaryInput) {\n  DescribeStreamSummaryInput.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n  DescribeStreamSummaryInput.isa = function (o) {\n    return __isa(o, \"DescribeStreamSummaryInput\");\n  };\n})(DescribeStreamSummaryInput || (DescribeStreamSummaryInput = {}));\nexport var DescribeStreamSummaryOutput;\n(function (DescribeStreamSummaryOutput) {\n  DescribeStreamSummaryOutput.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n  DescribeStreamSummaryOutput.isa = function (o) {\n    return __isa(o, \"DescribeStreamSummaryOutput\");\n  };\n})(DescribeStreamSummaryOutput || (DescribeStreamSummaryOutput = {}));\nexport var DisableEnhancedMonitoringInput;\n(function (DisableEnhancedMonitoringInput) {\n  DisableEnhancedMonitoringInput.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n  DisableEnhancedMonitoringInput.isa = function (o) {\n    return __isa(o, \"DisableEnhancedMonitoringInput\");\n  };\n})(DisableEnhancedMonitoringInput || (DisableEnhancedMonitoringInput = {}));\nexport var EnableEnhancedMonitoringInput;\n(function (EnableEnhancedMonitoringInput) {\n  EnableEnhancedMonitoringInput.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n  EnableEnhancedMonitoringInput.isa = function (o) {\n    return __isa(o, \"EnableEnhancedMonitoringInput\");\n  };\n})(EnableEnhancedMonitoringInput || (EnableEnhancedMonitoringInput = {}));\nexport var EncryptionType;\n(function (EncryptionType) {\n  EncryptionType[\"KMS\"] = \"KMS\";\n  EncryptionType[\"NONE\"] = \"NONE\";\n})(EncryptionType || (EncryptionType = {}));\nexport var EnhancedMetrics;\n(function (EnhancedMetrics) {\n  EnhancedMetrics.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n  EnhancedMetrics.isa = function (o) {\n    return __isa(o, \"EnhancedMetrics\");\n  };\n})(EnhancedMetrics || (EnhancedMetrics = {}));\nexport var EnhancedMonitoringOutput;\n(function (EnhancedMonitoringOutput) {\n  EnhancedMonitoringOutput.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n  EnhancedMonitoringOutput.isa = function (o) {\n    return __isa(o, \"EnhancedMonitoringOutput\");\n  };\n})(EnhancedMonitoringOutput || (EnhancedMonitoringOutput = {}));\nexport var ExpiredIteratorException;\n(function (ExpiredIteratorException) {\n  ExpiredIteratorException.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n  ExpiredIteratorException.isa = function (o) {\n    return __isa(o, \"ExpiredIteratorException\");\n  };\n})(ExpiredIteratorException || (ExpiredIteratorException = {}));\nexport var ExpiredNextTokenException;\n(function (ExpiredNextTokenException) {\n  ExpiredNextTokenException.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n  ExpiredNextTokenException.isa = function (o) {\n    return __isa(o, \"ExpiredNextTokenException\");\n  };\n})(ExpiredNextTokenException || (ExpiredNextTokenException = {}));\nexport var GetRecordsInput;\n(function (GetRecordsInput) {\n  GetRecordsInput.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n  GetRecordsInput.isa = function (o) {\n    return __isa(o, \"GetRecordsInput\");\n  };\n})(GetRecordsInput || (GetRecordsInput = {}));\nexport var GetRecordsOutput;\n(function (GetRecordsOutput) {\n  GetRecordsOutput.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n  GetRecordsOutput.isa = function (o) {\n    return __isa(o, \"GetRecordsOutput\");\n  };\n})(GetRecordsOutput || (GetRecordsOutput = {}));\nexport var GetShardIteratorInput;\n(function (GetShardIteratorInput) {\n  GetShardIteratorInput.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n  GetShardIteratorInput.isa = function (o) {\n    return __isa(o, \"GetShardIteratorInput\");\n  };\n})(GetShardIteratorInput || (GetShardIteratorInput = {}));\nexport var GetShardIteratorOutput;\n(function (GetShardIteratorOutput) {\n  GetShardIteratorOutput.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n  GetShardIteratorOutput.isa = function (o) {\n    return __isa(o, \"GetShardIteratorOutput\");\n  };\n})(GetShardIteratorOutput || (GetShardIteratorOutput = {}));\nexport var HashKeyRange;\n(function (HashKeyRange) {\n  HashKeyRange.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n  HashKeyRange.isa = function (o) {\n    return __isa(o, \"HashKeyRange\");\n  };\n})(HashKeyRange || (HashKeyRange = {}));\nexport var IncreaseStreamRetentionPeriodInput;\n(function (IncreaseStreamRetentionPeriodInput) {\n  IncreaseStreamRetentionPeriodInput.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n  IncreaseStreamRetentionPeriodInput.isa = function (o) {\n    return __isa(o, \"IncreaseStreamRetentionPeriodInput\");\n  };\n})(IncreaseStreamRetentionPeriodInput || (IncreaseStreamRetentionPeriodInput = {}));\nexport var InternalFailureException;\n(function (InternalFailureException) {\n  InternalFailureException.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n  InternalFailureException.isa = function (o) {\n    return __isa(o, \"InternalFailureException\");\n  };\n})(InternalFailureException || (InternalFailureException = {}));\nexport var InvalidArgumentException;\n(function (InvalidArgumentException) {\n  InvalidArgumentException.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n  InvalidArgumentException.isa = function (o) {\n    return __isa(o, \"InvalidArgumentException\");\n  };\n})(InvalidArgumentException || (InvalidArgumentException = {}));\nexport var KMSAccessDeniedException;\n(function (KMSAccessDeniedException) {\n  KMSAccessDeniedException.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n  KMSAccessDeniedException.isa = function (o) {\n    return __isa(o, \"KMSAccessDeniedException\");\n  };\n})(KMSAccessDeniedException || (KMSAccessDeniedException = {}));\nexport var KMSDisabledException;\n(function (KMSDisabledException) {\n  KMSDisabledException.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n  KMSDisabledException.isa = function (o) {\n    return __isa(o, \"KMSDisabledException\");\n  };\n})(KMSDisabledException || (KMSDisabledException = {}));\nexport var KMSInvalidStateException;\n(function (KMSInvalidStateException) {\n  KMSInvalidStateException.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n  KMSInvalidStateException.isa = function (o) {\n    return __isa(o, \"KMSInvalidStateException\");\n  };\n})(KMSInvalidStateException || (KMSInvalidStateException = {}));\nexport var KMSNotFoundException;\n(function (KMSNotFoundException) {\n  KMSNotFoundException.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n  KMSNotFoundException.isa = function (o) {\n    return __isa(o, \"KMSNotFoundException\");\n  };\n})(KMSNotFoundException || (KMSNotFoundException = {}));\nexport var KMSOptInRequired;\n(function (KMSOptInRequired) {\n  KMSOptInRequired.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n  KMSOptInRequired.isa = function (o) {\n    return __isa(o, \"KMSOptInRequired\");\n  };\n})(KMSOptInRequired || (KMSOptInRequired = {}));\nexport var KMSThrottlingException;\n(function (KMSThrottlingException) {\n  KMSThrottlingException.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n  KMSThrottlingException.isa = function (o) {\n    return __isa(o, \"KMSThrottlingException\");\n  };\n})(KMSThrottlingException || (KMSThrottlingException = {}));\nexport var LimitExceededException;\n(function (LimitExceededException) {\n  LimitExceededException.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n  LimitExceededException.isa = function (o) {\n    return __isa(o, \"LimitExceededException\");\n  };\n})(LimitExceededException || (LimitExceededException = {}));\nexport var ListShardsInput;\n(function (ListShardsInput) {\n  ListShardsInput.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n  ListShardsInput.isa = function (o) {\n    return __isa(o, \"ListShardsInput\");\n  };\n})(ListShardsInput || (ListShardsInput = {}));\nexport var ListShardsOutput;\n(function (ListShardsOutput) {\n  ListShardsOutput.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n  ListShardsOutput.isa = function (o) {\n    return __isa(o, \"ListShardsOutput\");\n  };\n})(ListShardsOutput || (ListShardsOutput = {}));\nexport var ListStreamConsumersInput;\n(function (ListStreamConsumersInput) {\n  ListStreamConsumersInput.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n  ListStreamConsumersInput.isa = function (o) {\n    return __isa(o, \"ListStreamConsumersInput\");\n  };\n})(ListStreamConsumersInput || (ListStreamConsumersInput = {}));\nexport var ListStreamConsumersOutput;\n(function (ListStreamConsumersOutput) {\n  ListStreamConsumersOutput.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n  ListStreamConsumersOutput.isa = function (o) {\n    return __isa(o, \"ListStreamConsumersOutput\");\n  };\n})(ListStreamConsumersOutput || (ListStreamConsumersOutput = {}));\nexport var ListStreamsInput;\n(function (ListStreamsInput) {\n  ListStreamsInput.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n  ListStreamsInput.isa = function (o) {\n    return __isa(o, \"ListStreamsInput\");\n  };\n})(ListStreamsInput || (ListStreamsInput = {}));\nexport var ListStreamsOutput;\n(function (ListStreamsOutput) {\n  ListStreamsOutput.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n  ListStreamsOutput.isa = function (o) {\n    return __isa(o, \"ListStreamsOutput\");\n  };\n})(ListStreamsOutput || (ListStreamsOutput = {}));\nexport var ListTagsForStreamInput;\n(function (ListTagsForStreamInput) {\n  ListTagsForStreamInput.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n  ListTagsForStreamInput.isa = function (o) {\n    return __isa(o, \"ListTagsForStreamInput\");\n  };\n})(ListTagsForStreamInput || (ListTagsForStreamInput = {}));\nexport var ListTagsForStreamOutput;\n(function (ListTagsForStreamOutput) {\n  ListTagsForStreamOutput.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n  ListTagsForStreamOutput.isa = function (o) {\n    return __isa(o, \"ListTagsForStreamOutput\");\n  };\n})(ListTagsForStreamOutput || (ListTagsForStreamOutput = {}));\nexport var MergeShardsInput;\n(function (MergeShardsInput) {\n  MergeShardsInput.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n  MergeShardsInput.isa = function (o) {\n    return __isa(o, \"MergeShardsInput\");\n  };\n})(MergeShardsInput || (MergeShardsInput = {}));\nexport var MetricsName;\n(function (MetricsName) {\n  MetricsName[\"ALL\"] = \"ALL\";\n  MetricsName[\"INCOMING_BYTES\"] = \"IncomingBytes\";\n  MetricsName[\"INCOMING_RECORDS\"] = \"IncomingRecords\";\n  MetricsName[\"ITERATOR_AGE_MILLISECONDS\"] = \"IteratorAgeMilliseconds\";\n  MetricsName[\"OUTGOING_BYTES\"] = \"OutgoingBytes\";\n  MetricsName[\"OUTGOING_RECORDS\"] = \"OutgoingRecords\";\n  MetricsName[\"READ_PROVISIONED_THROUGHPUT_EXCEEDED\"] = \"ReadProvisionedThroughputExceeded\";\n  MetricsName[\"WRITE_PROVISIONED_THROUGHPUT_EXCEEDED\"] = \"WriteProvisionedThroughputExceeded\";\n})(MetricsName || (MetricsName = {}));\nexport var ProvisionedThroughputExceededException;\n(function (ProvisionedThroughputExceededException) {\n  ProvisionedThroughputExceededException.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n  ProvisionedThroughputExceededException.isa = function (o) {\n    return __isa(o, \"ProvisionedThroughputExceededException\");\n  };\n})(ProvisionedThroughputExceededException || (ProvisionedThroughputExceededException = {}));\nexport var PutRecordInput;\n(function (PutRecordInput) {\n  PutRecordInput.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n  PutRecordInput.isa = function (o) {\n    return __isa(o, \"PutRecordInput\");\n  };\n})(PutRecordInput || (PutRecordInput = {}));\nexport var PutRecordOutput;\n(function (PutRecordOutput) {\n  PutRecordOutput.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n  PutRecordOutput.isa = function (o) {\n    return __isa(o, \"PutRecordOutput\");\n  };\n})(PutRecordOutput || (PutRecordOutput = {}));\nexport var PutRecordsInput;\n(function (PutRecordsInput) {\n  PutRecordsInput.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n  PutRecordsInput.isa = function (o) {\n    return __isa(o, \"PutRecordsInput\");\n  };\n})(PutRecordsInput || (PutRecordsInput = {}));\nexport var PutRecordsOutput;\n(function (PutRecordsOutput) {\n  PutRecordsOutput.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n  PutRecordsOutput.isa = function (o) {\n    return __isa(o, \"PutRecordsOutput\");\n  };\n})(PutRecordsOutput || (PutRecordsOutput = {}));\nexport var PutRecordsRequestEntry;\n(function (PutRecordsRequestEntry) {\n  PutRecordsRequestEntry.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n  PutRecordsRequestEntry.isa = function (o) {\n    return __isa(o, \"PutRecordsRequestEntry\");\n  };\n})(PutRecordsRequestEntry || (PutRecordsRequestEntry = {}));\nexport var PutRecordsResultEntry;\n(function (PutRecordsResultEntry) {\n  PutRecordsResultEntry.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n  PutRecordsResultEntry.isa = function (o) {\n    return __isa(o, \"PutRecordsResultEntry\");\n  };\n})(PutRecordsResultEntry || (PutRecordsResultEntry = {}));\nexport var _Record;\n(function (_Record) {\n  _Record.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n  _Record.isa = function (o) {\n    return __isa(o, \"Record\");\n  };\n})(_Record || (_Record = {}));\nexport var RegisterStreamConsumerInput;\n(function (RegisterStreamConsumerInput) {\n  RegisterStreamConsumerInput.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n  RegisterStreamConsumerInput.isa = function (o) {\n    return __isa(o, \"RegisterStreamConsumerInput\");\n  };\n})(RegisterStreamConsumerInput || (RegisterStreamConsumerInput = {}));\nexport var RegisterStreamConsumerOutput;\n(function (RegisterStreamConsumerOutput) {\n  RegisterStreamConsumerOutput.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n  RegisterStreamConsumerOutput.isa = function (o) {\n    return __isa(o, \"RegisterStreamConsumerOutput\");\n  };\n})(RegisterStreamConsumerOutput || (RegisterStreamConsumerOutput = {}));\nexport var RemoveTagsFromStreamInput;\n(function (RemoveTagsFromStreamInput) {\n  RemoveTagsFromStreamInput.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n  RemoveTagsFromStreamInput.isa = function (o) {\n    return __isa(o, \"RemoveTagsFromStreamInput\");\n  };\n})(RemoveTagsFromStreamInput || (RemoveTagsFromStreamInput = {}));\nexport var ResourceInUseException;\n(function (ResourceInUseException) {\n  ResourceInUseException.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n  ResourceInUseException.isa = function (o) {\n    return __isa(o, \"ResourceInUseException\");\n  };\n})(ResourceInUseException || (ResourceInUseException = {}));\nexport var ResourceNotFoundException;\n(function (ResourceNotFoundException) {\n  ResourceNotFoundException.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n  ResourceNotFoundException.isa = function (o) {\n    return __isa(o, \"ResourceNotFoundException\");\n  };\n})(ResourceNotFoundException || (ResourceNotFoundException = {}));\nexport var ScalingType;\n(function (ScalingType) {\n  ScalingType[\"UNIFORM_SCALING\"] = \"UNIFORM_SCALING\";\n})(ScalingType || (ScalingType = {}));\nexport var SequenceNumberRange;\n(function (SequenceNumberRange) {\n  SequenceNumberRange.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n  SequenceNumberRange.isa = function (o) {\n    return __isa(o, \"SequenceNumberRange\");\n  };\n})(SequenceNumberRange || (SequenceNumberRange = {}));\nexport var Shard;\n(function (Shard) {\n  Shard.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n  Shard.isa = function (o) {\n    return __isa(o, \"Shard\");\n  };\n})(Shard || (Shard = {}));\nexport var ShardIteratorType;\n(function (ShardIteratorType) {\n  ShardIteratorType[\"AFTER_SEQUENCE_NUMBER\"] = \"AFTER_SEQUENCE_NUMBER\";\n  ShardIteratorType[\"AT_SEQUENCE_NUMBER\"] = \"AT_SEQUENCE_NUMBER\";\n  ShardIteratorType[\"AT_TIMESTAMP\"] = \"AT_TIMESTAMP\";\n  ShardIteratorType[\"LATEST\"] = \"LATEST\";\n  ShardIteratorType[\"TRIM_HORIZON\"] = \"TRIM_HORIZON\";\n})(ShardIteratorType || (ShardIteratorType = {}));\nexport var SplitShardInput;\n(function (SplitShardInput) {\n  SplitShardInput.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n  SplitShardInput.isa = function (o) {\n    return __isa(o, \"SplitShardInput\");\n  };\n})(SplitShardInput || (SplitShardInput = {}));\nexport var StartingPosition;\n(function (StartingPosition) {\n  StartingPosition.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n  StartingPosition.isa = function (o) {\n    return __isa(o, \"StartingPosition\");\n  };\n})(StartingPosition || (StartingPosition = {}));\nexport var StartStreamEncryptionInput;\n(function (StartStreamEncryptionInput) {\n  StartStreamEncryptionInput.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n  StartStreamEncryptionInput.isa = function (o) {\n    return __isa(o, \"StartStreamEncryptionInput\");\n  };\n})(StartStreamEncryptionInput || (StartStreamEncryptionInput = {}));\nexport var StopStreamEncryptionInput;\n(function (StopStreamEncryptionInput) {\n  StopStreamEncryptionInput.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n  StopStreamEncryptionInput.isa = function (o) {\n    return __isa(o, \"StopStreamEncryptionInput\");\n  };\n})(StopStreamEncryptionInput || (StopStreamEncryptionInput = {}));\nexport var StreamDescription;\n(function (StreamDescription) {\n  StreamDescription.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n  StreamDescription.isa = function (o) {\n    return __isa(o, \"StreamDescription\");\n  };\n})(StreamDescription || (StreamDescription = {}));\nexport var StreamDescriptionSummary;\n(function (StreamDescriptionSummary) {\n  StreamDescriptionSummary.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n  StreamDescriptionSummary.isa = function (o) {\n    return __isa(o, \"StreamDescriptionSummary\");\n  };\n})(StreamDescriptionSummary || (StreamDescriptionSummary = {}));\nexport var StreamStatus;\n(function (StreamStatus) {\n  StreamStatus[\"ACTIVE\"] = \"ACTIVE\";\n  StreamStatus[\"CREATING\"] = \"CREATING\";\n  StreamStatus[\"DELETING\"] = \"DELETING\";\n  StreamStatus[\"UPDATING\"] = \"UPDATING\";\n})(StreamStatus || (StreamStatus = {}));\nexport var SubscribeToShardEvent;\n(function (SubscribeToShardEvent) {\n  SubscribeToShardEvent.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n  SubscribeToShardEvent.isa = function (o) {\n    return __isa(o, \"SubscribeToShardEvent\");\n  };\n})(SubscribeToShardEvent || (SubscribeToShardEvent = {}));\nexport var SubscribeToShardEventStream;\n(function (SubscribeToShardEventStream) {\n  SubscribeToShardEventStream.visit = function (value, visitor) {\n    if (value.KMSThrottlingException !== undefined) return visitor.KMSThrottlingException(value.KMSThrottlingException);\n    if (value.KMSDisabledException !== undefined) return visitor.KMSDisabledException(value.KMSDisabledException);\n    if (value.KMSAccessDeniedException !== undefined) return visitor.KMSAccessDeniedException(value.KMSAccessDeniedException);\n    if (value.KMSInvalidStateException !== undefined) return visitor.KMSInvalidStateException(value.KMSInvalidStateException);\n    if (value.KMSNotFoundException !== undefined) return visitor.KMSNotFoundException(value.KMSNotFoundException);\n    if (value.ResourceNotFoundException !== undefined) return visitor.ResourceNotFoundException(value.ResourceNotFoundException);\n    if (value.SubscribeToShardEvent !== undefined) return visitor.SubscribeToShardEvent(value.SubscribeToShardEvent);\n    if (value.ResourceInUseException !== undefined) return visitor.ResourceInUseException(value.ResourceInUseException);\n    if (value.InternalFailureException !== undefined) return visitor.InternalFailureException(value.InternalFailureException);\n    if (value.KMSOptInRequired !== undefined) return visitor.KMSOptInRequired(value.KMSOptInRequired);\n    return visitor._(value.$unknown[0], value.$unknown[1]);\n  };\n  SubscribeToShardEventStream.filterSensitiveLog = function (obj) {\n    var _a;\n    if (obj.KMSThrottlingException !== undefined) return {\n      KMSThrottlingException: KMSThrottlingException.filterSensitiveLog(obj.KMSThrottlingException)\n    };\n    if (obj.KMSDisabledException !== undefined) return {\n      KMSDisabledException: KMSDisabledException.filterSensitiveLog(obj.KMSDisabledException)\n    };\n    if (obj.KMSAccessDeniedException !== undefined) return {\n      KMSAccessDeniedException: KMSAccessDeniedException.filterSensitiveLog(obj.KMSAccessDeniedException)\n    };\n    if (obj.KMSInvalidStateException !== undefined) return {\n      KMSInvalidStateException: KMSInvalidStateException.filterSensitiveLog(obj.KMSInvalidStateException)\n    };\n    if (obj.KMSNotFoundException !== undefined) return {\n      KMSNotFoundException: KMSNotFoundException.filterSensitiveLog(obj.KMSNotFoundException)\n    };\n    if (obj.ResourceNotFoundException !== undefined) return {\n      ResourceNotFoundException: ResourceNotFoundException.filterSensitiveLog(obj.ResourceNotFoundException)\n    };\n    if (obj.SubscribeToShardEvent !== undefined) return {\n      SubscribeToShardEvent: SubscribeToShardEvent.filterSensitiveLog(obj.SubscribeToShardEvent)\n    };\n    if (obj.ResourceInUseException !== undefined) return {\n      ResourceInUseException: ResourceInUseException.filterSensitiveLog(obj.ResourceInUseException)\n    };\n    if (obj.InternalFailureException !== undefined) return {\n      InternalFailureException: InternalFailureException.filterSensitiveLog(obj.InternalFailureException)\n    };\n    if (obj.KMSOptInRequired !== undefined) return {\n      KMSOptInRequired: KMSOptInRequired.filterSensitiveLog(obj.KMSOptInRequired)\n    };\n    if (obj.$unknown !== undefined) return _a = {}, _a[obj.$unknown[0]] = \"UNKNOWN\", _a;\n  };\n})(SubscribeToShardEventStream || (SubscribeToShardEventStream = {}));\nexport var SubscribeToShardInput;\n(function (SubscribeToShardInput) {\n  SubscribeToShardInput.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n  SubscribeToShardInput.isa = function (o) {\n    return __isa(o, \"SubscribeToShardInput\");\n  };\n})(SubscribeToShardInput || (SubscribeToShardInput = {}));\nexport var SubscribeToShardOutput;\n(function (SubscribeToShardOutput) {\n  SubscribeToShardOutput.filterSensitiveLog = function (obj) {\n    return __assign(__assign({}, obj), obj.EventStream && {\n      EventStream: \"STREAMING_CONTENT\"\n    });\n  };\n  SubscribeToShardOutput.isa = function (o) {\n    return __isa(o, \"SubscribeToShardOutput\");\n  };\n})(SubscribeToShardOutput || (SubscribeToShardOutput = {}));\nexport var Tag;\n(function (Tag) {\n  Tag.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n  Tag.isa = function (o) {\n    return __isa(o, \"Tag\");\n  };\n})(Tag || (Tag = {}));\nexport var UpdateShardCountInput;\n(function (UpdateShardCountInput) {\n  UpdateShardCountInput.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n  UpdateShardCountInput.isa = function (o) {\n    return __isa(o, \"UpdateShardCountInput\");\n  };\n})(UpdateShardCountInput || (UpdateShardCountInput = {}));\nexport var UpdateShardCountOutput;\n(function (UpdateShardCountOutput) {\n  UpdateShardCountOutput.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n  UpdateShardCountOutput.isa = function (o) {\n    return __isa(o, \"UpdateShardCountOutput\");\n  };\n})(UpdateShardCountOutput || (UpdateShardCountOutput = {}));","map":{"version":3,"names":["isa","__isa","AddTagsToStreamInput","filterSensitiveLog","obj","__assign","o","Consumer","ConsumerDescription","ConsumerStatus","CreateStreamInput","DecreaseStreamRetentionPeriodInput","DeleteStreamInput","DeregisterStreamConsumerInput","DescribeLimitsInput","DescribeLimitsOutput","DescribeStreamConsumerInput","DescribeStreamConsumerOutput","DescribeStreamInput","DescribeStreamOutput","DescribeStreamSummaryInput","DescribeStreamSummaryOutput","DisableEnhancedMonitoringInput","EnableEnhancedMonitoringInput","EncryptionType","EnhancedMetrics","EnhancedMonitoringOutput","ExpiredIteratorException","ExpiredNextTokenException","GetRecordsInput","GetRecordsOutput","GetShardIteratorInput","GetShardIteratorOutput","HashKeyRange","IncreaseStreamRetentionPeriodInput","InternalFailureException","InvalidArgumentException","KMSAccessDeniedException","KMSDisabledException","KMSInvalidStateException","KMSNotFoundException","KMSOptInRequired","KMSThrottlingException","LimitExceededException","ListShardsInput","ListShardsOutput","ListStreamConsumersInput","ListStreamConsumersOutput","ListStreamsInput","ListStreamsOutput","ListTagsForStreamInput","ListTagsForStreamOutput","MergeShardsInput","MetricsName","ProvisionedThroughputExceededException","PutRecordInput","PutRecordOutput","PutRecordsInput","PutRecordsOutput","PutRecordsRequestEntry","PutRecordsResultEntry","_Record","RegisterStreamConsumerInput","RegisterStreamConsumerOutput","RemoveTagsFromStreamInput","ResourceInUseException","ResourceNotFoundException","ScalingType","SequenceNumberRange","Shard","ShardIteratorType","SplitShardInput","StartingPosition","StartStreamEncryptionInput","StopStreamEncryptionInput","StreamDescription","StreamDescriptionSummary","StreamStatus","SubscribeToShardEvent","SubscribeToShardEventStream","visit","value","visitor","undefined","_","$unknown","_a","SubscribeToShardInput","SubscribeToShardOutput","EventStream","Tag","UpdateShardCountInput","UpdateShardCountOutput"],"sources":["/Users/ericli/node_modules/@aws-sdk/client-kinesis/models/index.ts"],"sourcesContent":["import { SENSITIVE_STRING, SmithyException as __SmithyException, isa as __isa } from \"@aws-sdk/smithy-client\";\nimport { MetadataBearer as $MetadataBearer } from \"@aws-sdk/types\";\n\n/**\n * <p>Represents the input for <code>AddTagsToStream</code>.</p>\n */\nexport interface AddTagsToStreamInput {\n  __type?: \"AddTagsToStreamInput\";\n  /**\n   * <p>The name of the stream.</p>\n   */\n  StreamName: string | undefined;\n\n  /**\n   * <p>A set of up to 10 key-value pairs to use to create the tags.</p>\n   */\n  Tags: { [key: string]: string } | undefined;\n}\n\nexport namespace AddTagsToStreamInput {\n  export const filterSensitiveLog = (obj: AddTagsToStreamInput): any => ({\n    ...obj,\n  });\n  export const isa = (o: any): o is AddTagsToStreamInput => __isa(o, \"AddTagsToStreamInput\");\n}\n\n/**\n * <p>An object that represents the details of the consumer you registered.</p>\n */\nexport interface Consumer {\n  __type?: \"Consumer\";\n  /**\n   * <p>When you register a consumer, Kinesis Data Streams generates an ARN for it. You need\n   *             this ARN to be able to call <a>SubscribeToShard</a>.</p>\n   *         <p>If you delete a consumer and then create a new one with the same name, it won't have\n   *             the same ARN. That's because consumer ARNs contain the creation timestamp. This is\n   *             important to keep in mind if you have IAM policies that reference consumer ARNs.</p>\n   */\n  ConsumerARN: string | undefined;\n\n  /**\n   * <p>A consumer can't read data while in the <code>CREATING</code> or <code>DELETING</code> states.</p>\n   */\n  ConsumerStatus: ConsumerStatus | string | undefined;\n\n  /**\n   * <p>The name of the consumer is something you choose when you register the consumer.</p>\n   */\n  ConsumerName: string | undefined;\n\n  /**\n   * <p></p>\n   */\n  ConsumerCreationTimestamp: Date | undefined;\n}\n\nexport namespace Consumer {\n  export const filterSensitiveLog = (obj: Consumer): any => ({\n    ...obj,\n  });\n  export const isa = (o: any): o is Consumer => __isa(o, \"Consumer\");\n}\n\n/**\n * <p>An object that represents the details of a registered consumer.</p>\n */\nexport interface ConsumerDescription {\n  __type?: \"ConsumerDescription\";\n  /**\n   * <p></p>\n   */\n  ConsumerCreationTimestamp: Date | undefined;\n\n  /**\n   * <p>The ARN of the stream with which you registered the consumer.</p>\n   */\n  StreamARN: string | undefined;\n\n  /**\n   * <p>A consumer can't read data while in the <code>CREATING</code> or <code>DELETING</code>\n   *             states.</p>\n   */\n  ConsumerStatus: ConsumerStatus | string | undefined;\n\n  /**\n   * <p>When you register a consumer, Kinesis Data Streams generates an ARN for it. You need\n   *             this ARN to be able to call <a>SubscribeToShard</a>.</p>\n   *         <p>If you delete a consumer and then create a new one with the same name, it won't have\n   *             the same ARN. That's because consumer ARNs contain the creation timestamp. This is\n   *             important to keep in mind if you have IAM policies that reference consumer ARNs.</p>\n   */\n  ConsumerARN: string | undefined;\n\n  /**\n   * <p>The name of the consumer is something you choose when you register the consumer.</p>\n   */\n  ConsumerName: string | undefined;\n}\n\nexport namespace ConsumerDescription {\n  export const filterSensitiveLog = (obj: ConsumerDescription): any => ({\n    ...obj,\n  });\n  export const isa = (o: any): o is ConsumerDescription => __isa(o, \"ConsumerDescription\");\n}\n\nexport enum ConsumerStatus {\n  ACTIVE = \"ACTIVE\",\n  CREATING = \"CREATING\",\n  DELETING = \"DELETING\",\n}\n\n/**\n * <p>Represents the input for <code>CreateStream</code>.</p>\n */\nexport interface CreateStreamInput {\n  __type?: \"CreateStreamInput\";\n  /**\n   * <p>The number of shards that the stream will use. The throughput of the stream is a function of the number of shards; more shards are required for greater provisioned throughput.</p>\n   *         <p>DefaultShardLimit;</p>\n   */\n  ShardCount: number | undefined;\n\n  /**\n   * <p>A name to identify the stream. The stream name is scoped to the AWS account used by\n   *             the application that creates the stream. It is also scoped by AWS Region. That is, two\n   *             streams in two different AWS accounts can have the same name. Two streams in the same\n   *             AWS account but in two different Regions can also have the same name.</p>\n   */\n  StreamName: string | undefined;\n}\n\nexport namespace CreateStreamInput {\n  export const filterSensitiveLog = (obj: CreateStreamInput): any => ({\n    ...obj,\n  });\n  export const isa = (o: any): o is CreateStreamInput => __isa(o, \"CreateStreamInput\");\n}\n\n/**\n * <p>Represents the input for <a>DecreaseStreamRetentionPeriod</a>.</p>\n */\nexport interface DecreaseStreamRetentionPeriodInput {\n  __type?: \"DecreaseStreamRetentionPeriodInput\";\n  /**\n   * <p>The name of the stream to modify.</p>\n   */\n  StreamName: string | undefined;\n\n  /**\n   * <p>The new retention period of the stream, in hours. Must be less than the current retention period.</p>\n   */\n  RetentionPeriodHours: number | undefined;\n}\n\nexport namespace DecreaseStreamRetentionPeriodInput {\n  export const filterSensitiveLog = (obj: DecreaseStreamRetentionPeriodInput): any => ({\n    ...obj,\n  });\n  export const isa = (o: any): o is DecreaseStreamRetentionPeriodInput =>\n    __isa(o, \"DecreaseStreamRetentionPeriodInput\");\n}\n\n/**\n * <p>Represents the input for <a>DeleteStream</a>.</p>\n */\nexport interface DeleteStreamInput {\n  __type?: \"DeleteStreamInput\";\n  /**\n   * <p>The name of the stream to delete.</p>\n   */\n  StreamName: string | undefined;\n\n  /**\n   * <p>If this parameter is unset (<code>null</code>) or if you set it to <code>false</code>,\n   *             and the stream has registered consumers, the call to <code>DeleteStream</code> fails\n   *             with a <code>ResourceInUseException</code>. </p>\n   */\n  EnforceConsumerDeletion?: boolean;\n}\n\nexport namespace DeleteStreamInput {\n  export const filterSensitiveLog = (obj: DeleteStreamInput): any => ({\n    ...obj,\n  });\n  export const isa = (o: any): o is DeleteStreamInput => __isa(o, \"DeleteStreamInput\");\n}\n\nexport interface DeregisterStreamConsumerInput {\n  __type?: \"DeregisterStreamConsumerInput\";\n  /**\n   * <p>The ARN of the Kinesis data stream that the consumer is registered with. For more\n   *             information, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html#arn-syntax-kinesis-streams\">Amazon Resource Names (ARNs) and AWS Service Namespaces</a>.</p>\n   */\n  StreamARN?: string;\n\n  /**\n   * <p>The ARN returned by Kinesis Data Streams when you registered the consumer. If you\n   *             don't know the ARN of the consumer that you want to deregister, you can use the\n   *             ListStreamConsumers operation to get a list of the descriptions of all the consumers\n   *             that are currently registered with a given data stream. The description of a consumer\n   *             contains its ARN.</p>\n   */\n  ConsumerARN?: string;\n\n  /**\n   * <p>The name that you gave to the consumer.</p>\n   */\n  ConsumerName?: string;\n}\n\nexport namespace DeregisterStreamConsumerInput {\n  export const filterSensitiveLog = (obj: DeregisterStreamConsumerInput): any => ({\n    ...obj,\n  });\n  export const isa = (o: any): o is DeregisterStreamConsumerInput => __isa(o, \"DeregisterStreamConsumerInput\");\n}\n\nexport interface DescribeLimitsInput {\n  __type?: \"DescribeLimitsInput\";\n}\n\nexport namespace DescribeLimitsInput {\n  export const filterSensitiveLog = (obj: DescribeLimitsInput): any => ({\n    ...obj,\n  });\n  export const isa = (o: any): o is DescribeLimitsInput => __isa(o, \"DescribeLimitsInput\");\n}\n\nexport interface DescribeLimitsOutput {\n  __type?: \"DescribeLimitsOutput\";\n  /**\n   * <p>The number of open shards.</p>\n   */\n  OpenShardCount: number | undefined;\n\n  /**\n   * <p>The maximum number of shards.</p>\n   */\n  ShardLimit: number | undefined;\n}\n\nexport namespace DescribeLimitsOutput {\n  export const filterSensitiveLog = (obj: DescribeLimitsOutput): any => ({\n    ...obj,\n  });\n  export const isa = (o: any): o is DescribeLimitsOutput => __isa(o, \"DescribeLimitsOutput\");\n}\n\nexport interface DescribeStreamConsumerInput {\n  __type?: \"DescribeStreamConsumerInput\";\n  /**\n   * <p>The name that you gave to the consumer.</p>\n   */\n  ConsumerName?: string;\n\n  /**\n   * <p>The ARN of the Kinesis data stream that the consumer is registered with. For more\n   *             information, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html#arn-syntax-kinesis-streams\">Amazon Resource Names (ARNs) and AWS Service Namespaces</a>.</p>\n   */\n  StreamARN?: string;\n\n  /**\n   * <p>The ARN returned by Kinesis Data Streams when you registered the consumer.</p>\n   */\n  ConsumerARN?: string;\n}\n\nexport namespace DescribeStreamConsumerInput {\n  export const filterSensitiveLog = (obj: DescribeStreamConsumerInput): any => ({\n    ...obj,\n  });\n  export const isa = (o: any): o is DescribeStreamConsumerInput => __isa(o, \"DescribeStreamConsumerInput\");\n}\n\nexport interface DescribeStreamConsumerOutput {\n  __type?: \"DescribeStreamConsumerOutput\";\n  /**\n   * <p>An object that represents the details of the consumer.</p>\n   */\n  ConsumerDescription: ConsumerDescription | undefined;\n}\n\nexport namespace DescribeStreamConsumerOutput {\n  export const filterSensitiveLog = (obj: DescribeStreamConsumerOutput): any => ({\n    ...obj,\n  });\n  export const isa = (o: any): o is DescribeStreamConsumerOutput => __isa(o, \"DescribeStreamConsumerOutput\");\n}\n\n/**\n * <p>Represents the input for <code>DescribeStream</code>.</p>\n */\nexport interface DescribeStreamInput {\n  __type?: \"DescribeStreamInput\";\n  /**\n   * <p>The maximum number of shards to return in a single call. The default value is 100.\n   *             If you specify a value greater than 100, at most 100 shards are returned.</p>\n   */\n  Limit?: number;\n\n  /**\n   * <p>The shard ID of the shard to start with.</p>\n   */\n  ExclusiveStartShardId?: string;\n\n  /**\n   * <p>The name of the stream to describe.</p>\n   */\n  StreamName: string | undefined;\n}\n\nexport namespace DescribeStreamInput {\n  export const filterSensitiveLog = (obj: DescribeStreamInput): any => ({\n    ...obj,\n  });\n  export const isa = (o: any): o is DescribeStreamInput => __isa(o, \"DescribeStreamInput\");\n}\n\n/**\n * <p>Represents the output for <code>DescribeStream</code>.</p>\n */\nexport interface DescribeStreamOutput {\n  __type?: \"DescribeStreamOutput\";\n  /**\n   * <p>The current status of the stream, the stream Amazon Resource Name (ARN), an array\n   *             of shard objects that comprise the stream, and whether there are more shards\n   *             available.</p>\n   */\n  StreamDescription: StreamDescription | undefined;\n}\n\nexport namespace DescribeStreamOutput {\n  export const filterSensitiveLog = (obj: DescribeStreamOutput): any => ({\n    ...obj,\n  });\n  export const isa = (o: any): o is DescribeStreamOutput => __isa(o, \"DescribeStreamOutput\");\n}\n\nexport interface DescribeStreamSummaryInput {\n  __type?: \"DescribeStreamSummaryInput\";\n  /**\n   * <p>The name of the stream to describe.</p>\n   */\n  StreamName: string | undefined;\n}\n\nexport namespace DescribeStreamSummaryInput {\n  export const filterSensitiveLog = (obj: DescribeStreamSummaryInput): any => ({\n    ...obj,\n  });\n  export const isa = (o: any): o is DescribeStreamSummaryInput => __isa(o, \"DescribeStreamSummaryInput\");\n}\n\nexport interface DescribeStreamSummaryOutput {\n  __type?: \"DescribeStreamSummaryOutput\";\n  /**\n   * <p>A <a>StreamDescriptionSummary</a> containing information about the stream.</p>\n   */\n  StreamDescriptionSummary: StreamDescriptionSummary | undefined;\n}\n\nexport namespace DescribeStreamSummaryOutput {\n  export const filterSensitiveLog = (obj: DescribeStreamSummaryOutput): any => ({\n    ...obj,\n  });\n  export const isa = (o: any): o is DescribeStreamSummaryOutput => __isa(o, \"DescribeStreamSummaryOutput\");\n}\n\n/**\n * <p>Represents the input for <a>DisableEnhancedMonitoring</a>.</p>\n */\nexport interface DisableEnhancedMonitoringInput {\n  __type?: \"DisableEnhancedMonitoringInput\";\n  /**\n   * <p>The name of the Kinesis data stream for which to disable enhanced\n   *             monitoring.</p>\n   */\n  StreamName: string | undefined;\n\n  /**\n   * <p>List of shard-level metrics to disable.</p>\n   *         <p>The following are the valid shard-level metrics. The value \"<code>ALL</code>\" disables\n   *             every metric.</p>\n   *         <ul>\n   *             <li>\n   *                 <p>\n   *                   <code>IncomingBytes</code>\n   *                </p>\n   *             </li>\n   *             <li>\n   *                 <p>\n   *                   <code>IncomingRecords</code>\n   *                </p>\n   *             </li>\n   *             <li>\n   *                 <p>\n   *                   <code>OutgoingBytes</code>\n   *                </p>\n   *             </li>\n   *             <li>\n   *                 <p>\n   *                   <code>OutgoingRecords</code>\n   *                </p>\n   *             </li>\n   *             <li>\n   *                 <p>\n   *                   <code>WriteProvisionedThroughputExceeded</code>\n   *                </p>\n   *             </li>\n   *             <li>\n   *                 <p>\n   *                   <code>ReadProvisionedThroughputExceeded</code>\n   *                </p>\n   *             </li>\n   *             <li>\n   *                 <p>\n   *                   <code>IteratorAgeMilliseconds</code>\n   *                </p>\n   *             </li>\n   *             <li>\n   *                 <p>\n   *                   <code>ALL</code>\n   *                </p>\n   *             </li>\n   *          </ul>\n   *         <p>For more information, see <a href=\"https://docs.aws.amazon.com/kinesis/latest/dev/monitoring-with-cloudwatch.html\">Monitoring the Amazon\n   *                 Kinesis Data Streams Service with Amazon CloudWatch</a> in the <i>Amazon\n   *                 Kinesis Data Streams Developer Guide</i>.</p>\n   */\n  ShardLevelMetrics: (MetricsName | string)[] | undefined;\n}\n\nexport namespace DisableEnhancedMonitoringInput {\n  export const filterSensitiveLog = (obj: DisableEnhancedMonitoringInput): any => ({\n    ...obj,\n  });\n  export const isa = (o: any): o is DisableEnhancedMonitoringInput => __isa(o, \"DisableEnhancedMonitoringInput\");\n}\n\n/**\n * <p>Represents the input for <a>EnableEnhancedMonitoring</a>.</p>\n */\nexport interface EnableEnhancedMonitoringInput {\n  __type?: \"EnableEnhancedMonitoringInput\";\n  /**\n   * <p>The name of the stream for which to enable enhanced monitoring.</p>\n   */\n  StreamName: string | undefined;\n\n  /**\n   * <p>List of shard-level metrics to enable.</p>\n   *         <p>The following are the valid shard-level metrics. The value \"<code>ALL</code>\" enables\n   *             every metric.</p>\n   *         <ul>\n   *             <li>\n   *                 <p>\n   *                   <code>IncomingBytes</code>\n   *                </p>\n   *             </li>\n   *             <li>\n   *                 <p>\n   *                   <code>IncomingRecords</code>\n   *                </p>\n   *             </li>\n   *             <li>\n   *                 <p>\n   *                   <code>OutgoingBytes</code>\n   *                </p>\n   *             </li>\n   *             <li>\n   *                 <p>\n   *                   <code>OutgoingRecords</code>\n   *                </p>\n   *             </li>\n   *             <li>\n   *                 <p>\n   *                   <code>WriteProvisionedThroughputExceeded</code>\n   *                </p>\n   *             </li>\n   *             <li>\n   *                 <p>\n   *                   <code>ReadProvisionedThroughputExceeded</code>\n   *                </p>\n   *             </li>\n   *             <li>\n   *                 <p>\n   *                   <code>IteratorAgeMilliseconds</code>\n   *                </p>\n   *             </li>\n   *             <li>\n   *                 <p>\n   *                   <code>ALL</code>\n   *                </p>\n   *             </li>\n   *          </ul>\n   *         <p>For more information, see <a href=\"https://docs.aws.amazon.com/kinesis/latest/dev/monitoring-with-cloudwatch.html\">Monitoring the Amazon\n   *                 Kinesis Data Streams Service with Amazon CloudWatch</a> in the <i>Amazon\n   *                 Kinesis Data Streams Developer Guide</i>.</p>\n   */\n  ShardLevelMetrics: (MetricsName | string)[] | undefined;\n}\n\nexport namespace EnableEnhancedMonitoringInput {\n  export const filterSensitiveLog = (obj: EnableEnhancedMonitoringInput): any => ({\n    ...obj,\n  });\n  export const isa = (o: any): o is EnableEnhancedMonitoringInput => __isa(o, \"EnableEnhancedMonitoringInput\");\n}\n\nexport enum EncryptionType {\n  KMS = \"KMS\",\n  NONE = \"NONE\",\n}\n\n/**\n * <p>Represents enhanced metrics types.</p>\n */\nexport interface EnhancedMetrics {\n  __type?: \"EnhancedMetrics\";\n  /**\n   * <p>List of shard-level metrics.</p>\n   *         <p>The following are the valid shard-level metrics. The value \"<code>ALL</code>\" enhances\n   *             every metric.</p>\n   *         <ul>\n   *             <li>\n   *                 <p>\n   *                   <code>IncomingBytes</code>\n   *                </p>\n   *             </li>\n   *             <li>\n   *                 <p>\n   *                   <code>IncomingRecords</code>\n   *                </p>\n   *             </li>\n   *             <li>\n   *                 <p>\n   *                   <code>OutgoingBytes</code>\n   *                </p>\n   *             </li>\n   *             <li>\n   *                 <p>\n   *                   <code>OutgoingRecords</code>\n   *                </p>\n   *             </li>\n   *             <li>\n   *                 <p>\n   *                   <code>WriteProvisionedThroughputExceeded</code>\n   *                </p>\n   *             </li>\n   *             <li>\n   *                 <p>\n   *                   <code>ReadProvisionedThroughputExceeded</code>\n   *                </p>\n   *             </li>\n   *             <li>\n   *                 <p>\n   *                   <code>IteratorAgeMilliseconds</code>\n   *                </p>\n   *             </li>\n   *             <li>\n   *                 <p>\n   *                   <code>ALL</code>\n   *                </p>\n   *             </li>\n   *          </ul>\n   *         <p>For more information, see <a href=\"https://docs.aws.amazon.com/kinesis/latest/dev/monitoring-with-cloudwatch.html\">Monitoring the Amazon\n   *                 Kinesis Data Streams Service with Amazon CloudWatch</a> in the <i>Amazon\n   *                 Kinesis Data Streams Developer Guide</i>.</p>\n   */\n  ShardLevelMetrics?: (MetricsName | string)[];\n}\n\nexport namespace EnhancedMetrics {\n  export const filterSensitiveLog = (obj: EnhancedMetrics): any => ({\n    ...obj,\n  });\n  export const isa = (o: any): o is EnhancedMetrics => __isa(o, \"EnhancedMetrics\");\n}\n\n/**\n * <p>Represents the output for <a>EnableEnhancedMonitoring</a> and\n *                 <a>DisableEnhancedMonitoring</a>.</p>\n */\nexport interface EnhancedMonitoringOutput {\n  __type?: \"EnhancedMonitoringOutput\";\n  /**\n   * <p>The name of the Kinesis data stream.</p>\n   */\n  StreamName?: string;\n\n  /**\n   * <p>Represents the current state of the metrics that are in the enhanced state before the operation.</p>\n   */\n  CurrentShardLevelMetrics?: (MetricsName | string)[];\n\n  /**\n   * <p>Represents the list of all the metrics that would be in the enhanced state after the operation.</p>\n   */\n  DesiredShardLevelMetrics?: (MetricsName | string)[];\n}\n\nexport namespace EnhancedMonitoringOutput {\n  export const filterSensitiveLog = (obj: EnhancedMonitoringOutput): any => ({\n    ...obj,\n  });\n  export const isa = (o: any): o is EnhancedMonitoringOutput => __isa(o, \"EnhancedMonitoringOutput\");\n}\n\n/**\n * <p>The provided iterator exceeds the maximum age allowed.</p>\n */\nexport interface ExpiredIteratorException extends __SmithyException, $MetadataBearer {\n  name: \"ExpiredIteratorException\";\n  $fault: \"client\";\n  /**\n   * <p>A message that provides information about the error.</p>\n   */\n  message?: string;\n}\n\nexport namespace ExpiredIteratorException {\n  export const filterSensitiveLog = (obj: ExpiredIteratorException): any => ({\n    ...obj,\n  });\n  export const isa = (o: any): o is ExpiredIteratorException => __isa(o, \"ExpiredIteratorException\");\n}\n\n/**\n * <p>The pagination token passed to the operation is expired.</p>\n */\nexport interface ExpiredNextTokenException extends __SmithyException, $MetadataBearer {\n  name: \"ExpiredNextTokenException\";\n  $fault: \"client\";\n  message?: string;\n}\n\nexport namespace ExpiredNextTokenException {\n  export const filterSensitiveLog = (obj: ExpiredNextTokenException): any => ({\n    ...obj,\n  });\n  export const isa = (o: any): o is ExpiredNextTokenException => __isa(o, \"ExpiredNextTokenException\");\n}\n\n/**\n * <p>Represents the input for <a>GetRecords</a>.</p>\n */\nexport interface GetRecordsInput {\n  __type?: \"GetRecordsInput\";\n  /**\n   * <p>The maximum number of records to return. Specify a value of up to 10,000. If you specify\n   *             a value that is greater than 10,000, <a>GetRecords</a> throws\n   *             <code>InvalidArgumentException</code>.</p>\n   */\n  Limit?: number;\n\n  /**\n   * <p>The position in the shard from which you want to start sequentially reading data records. A shard iterator specifies this position using the sequence number of a data record in the shard.</p>\n   */\n  ShardIterator: string | undefined;\n}\n\nexport namespace GetRecordsInput {\n  export const filterSensitiveLog = (obj: GetRecordsInput): any => ({\n    ...obj,\n  });\n  export const isa = (o: any): o is GetRecordsInput => __isa(o, \"GetRecordsInput\");\n}\n\n/**\n * <p>Represents the output for <a>GetRecords</a>.</p>\n */\nexport interface GetRecordsOutput {\n  __type?: \"GetRecordsOutput\";\n  /**\n   * <p>The number of milliseconds the <a>GetRecords</a> response is from the\n   *             tip of the stream, indicating how far behind current time the consumer is. A value of\n   *             zero indicates that record processing is caught up, and there are no new records to\n   *             process at this moment.</p>\n   */\n  MillisBehindLatest?: number;\n\n  /**\n   * <p>The next position in the shard from which to start sequentially reading data\n   *             records. If set to <code>null</code>, the shard has been closed and the requested\n   *             iterator does not return any more data. </p>\n   */\n  NextShardIterator?: string;\n\n  /**\n   * <p>The data records retrieved from the shard.</p>\n   */\n  Records: _Record[] | undefined;\n}\n\nexport namespace GetRecordsOutput {\n  export const filterSensitiveLog = (obj: GetRecordsOutput): any => ({\n    ...obj,\n  });\n  export const isa = (o: any): o is GetRecordsOutput => __isa(o, \"GetRecordsOutput\");\n}\n\n/**\n * <p>Represents the input for <code>GetShardIterator</code>.</p>\n */\nexport interface GetShardIteratorInput {\n  __type?: \"GetShardIteratorInput\";\n  /**\n   * <p>The name of the Amazon Kinesis data stream.</p>\n   */\n  StreamName: string | undefined;\n\n  /**\n   * <p>Determines how the shard iterator is used to start reading data records from the shard.</p>\n   *         <p>The following are the valid Amazon Kinesis shard iterator types:</p>\n   *         <ul>\n   *             <li>\n   *                <p>AT_SEQUENCE_NUMBER - Start reading from the position denoted by a specific sequence\n   *                 number, provided in the value <code>StartingSequenceNumber</code>.</p>\n   *             </li>\n   *             <li>\n   *                <p>AFTER_SEQUENCE_NUMBER - Start reading right after the position denoted by a specific\n   *                 sequence number, provided in the value <code>StartingSequenceNumber</code>.</p>\n   *             </li>\n   *             <li>\n   *                <p>AT_TIMESTAMP - Start reading from the position denoted by a specific time stamp, provided\n   *                 in the value <code>Timestamp</code>.</p>\n   *             </li>\n   *             <li>\n   *                <p>TRIM_HORIZON - Start reading at the last untrimmed record in the shard in the system, which is the oldest data record in the shard.</p>\n   *             </li>\n   *             <li>\n   *                <p>LATEST - Start reading just after the most recent record in the shard, so that you always read the most recent data in the shard.</p>\n   *             </li>\n   *          </ul>\n   */\n  ShardIteratorType: ShardIteratorType | string | undefined;\n\n  /**\n   * <p>The time stamp of the data record from which to start reading. Used with shard\n   *             iterator type AT_TIMESTAMP. A time stamp is the Unix epoch date with precision in\n   *             milliseconds. For example, <code>2016-04-04T19:58:46.480-00:00</code> or\n   *             <code>1459799926.480</code>. If a record with this exact time stamp does not exist,\n   *             the iterator returned is for the next (later) record. If the time stamp is older than\n   *             the current trim horizon, the iterator returned is for the oldest untrimmed data record\n   *             (TRIM_HORIZON).</p>\n   */\n  Timestamp?: Date;\n\n  /**\n   * <p>The shard ID of the Kinesis Data Streams shard to get the iterator for.</p>\n   */\n  ShardId: string | undefined;\n\n  /**\n   * <p>The sequence number of the data record in the shard from which to start reading. Used with shard iterator type AT_SEQUENCE_NUMBER and AFTER_SEQUENCE_NUMBER.</p>\n   */\n  StartingSequenceNumber?: string;\n}\n\nexport namespace GetShardIteratorInput {\n  export const filterSensitiveLog = (obj: GetShardIteratorInput): any => ({\n    ...obj,\n  });\n  export const isa = (o: any): o is GetShardIteratorInput => __isa(o, \"GetShardIteratorInput\");\n}\n\n/**\n * <p>Represents the output for <code>GetShardIterator</code>.</p>\n */\nexport interface GetShardIteratorOutput {\n  __type?: \"GetShardIteratorOutput\";\n  /**\n   * <p>The position in the shard from which to start reading data records sequentially. A shard iterator specifies this position using the sequence number of a data record in a shard.</p>\n   */\n  ShardIterator?: string;\n}\n\nexport namespace GetShardIteratorOutput {\n  export const filterSensitiveLog = (obj: GetShardIteratorOutput): any => ({\n    ...obj,\n  });\n  export const isa = (o: any): o is GetShardIteratorOutput => __isa(o, \"GetShardIteratorOutput\");\n}\n\n/**\n * <p>The range of possible hash key values for the shard, which is a set of ordered contiguous positive integers.</p>\n */\nexport interface HashKeyRange {\n  __type?: \"HashKeyRange\";\n  /**\n   * <p>The ending hash key of the hash key range.</p>\n   */\n  EndingHashKey: string | undefined;\n\n  /**\n   * <p>The starting hash key of the hash key range.</p>\n   */\n  StartingHashKey: string | undefined;\n}\n\nexport namespace HashKeyRange {\n  export const filterSensitiveLog = (obj: HashKeyRange): any => ({\n    ...obj,\n  });\n  export const isa = (o: any): o is HashKeyRange => __isa(o, \"HashKeyRange\");\n}\n\n/**\n * <p>Represents the input for <a>IncreaseStreamRetentionPeriod</a>.</p>\n */\nexport interface IncreaseStreamRetentionPeriodInput {\n  __type?: \"IncreaseStreamRetentionPeriodInput\";\n  /**\n   * <p>The new retention period of the stream, in hours. Must be more than the current retention period.</p>\n   */\n  RetentionPeriodHours: number | undefined;\n\n  /**\n   * <p>The name of the stream to modify.</p>\n   */\n  StreamName: string | undefined;\n}\n\nexport namespace IncreaseStreamRetentionPeriodInput {\n  export const filterSensitiveLog = (obj: IncreaseStreamRetentionPeriodInput): any => ({\n    ...obj,\n  });\n  export const isa = (o: any): o is IncreaseStreamRetentionPeriodInput =>\n    __isa(o, \"IncreaseStreamRetentionPeriodInput\");\n}\n\nexport interface InternalFailureException extends __SmithyException {\n  name: \"InternalFailureException\";\n  $fault: \"server\";\n  message?: string;\n}\n\nexport namespace InternalFailureException {\n  export const filterSensitiveLog = (obj: InternalFailureException): any => ({\n    ...obj,\n  });\n  export const isa = (o: any): o is InternalFailureException => __isa(o, \"InternalFailureException\");\n}\n\n/**\n * <p>A specified parameter exceeds its restrictions, is not supported, or can't be used. For more information, see the returned message.</p>\n */\nexport interface InvalidArgumentException extends __SmithyException, $MetadataBearer {\n  name: \"InvalidArgumentException\";\n  $fault: \"client\";\n  /**\n   * <p>A message that provides information about the error.</p>\n   */\n  message?: string;\n}\n\nexport namespace InvalidArgumentException {\n  export const filterSensitiveLog = (obj: InvalidArgumentException): any => ({\n    ...obj,\n  });\n  export const isa = (o: any): o is InvalidArgumentException => __isa(o, \"InvalidArgumentException\");\n}\n\n/**\n * <p>The ciphertext references a key that doesn't exist or that you don't have access to.</p>\n */\nexport interface KMSAccessDeniedException extends __SmithyException, $MetadataBearer {\n  name: \"KMSAccessDeniedException\";\n  $fault: \"client\";\n  /**\n   * <p>A message that provides information about the error.</p>\n   */\n  message?: string;\n}\n\nexport namespace KMSAccessDeniedException {\n  export const filterSensitiveLog = (obj: KMSAccessDeniedException): any => ({\n    ...obj,\n  });\n  export const isa = (o: any): o is KMSAccessDeniedException => __isa(o, \"KMSAccessDeniedException\");\n}\n\n/**\n * <p>The request was rejected because the specified customer master key (CMK) isn't\n *             enabled.</p>\n */\nexport interface KMSDisabledException extends __SmithyException, $MetadataBearer {\n  name: \"KMSDisabledException\";\n  $fault: \"client\";\n  /**\n   * <p>A message that provides information about the error.</p>\n   */\n  message?: string;\n}\n\nexport namespace KMSDisabledException {\n  export const filterSensitiveLog = (obj: KMSDisabledException): any => ({\n    ...obj,\n  });\n  export const isa = (o: any): o is KMSDisabledException => __isa(o, \"KMSDisabledException\");\n}\n\n/**\n * <p>The request was rejected because the state of the specified resource isn't valid for this request. For more information, see\n *             <a href=\"https://docs.aws.amazon.com/kms/latest/developerguide/key-state.html\">How Key State Affects Use of a Customer Master Key</a> in the\n *             <i>AWS Key Management Service Developer Guide</i>.</p>\n */\nexport interface KMSInvalidStateException extends __SmithyException, $MetadataBearer {\n  name: \"KMSInvalidStateException\";\n  $fault: \"client\";\n  /**\n   * <p>A message that provides information about the error.</p>\n   */\n  message?: string;\n}\n\nexport namespace KMSInvalidStateException {\n  export const filterSensitiveLog = (obj: KMSInvalidStateException): any => ({\n    ...obj,\n  });\n  export const isa = (o: any): o is KMSInvalidStateException => __isa(o, \"KMSInvalidStateException\");\n}\n\n/**\n * <p>The request was rejected because the specified entity or resource can't be\n *             found.</p>\n */\nexport interface KMSNotFoundException extends __SmithyException, $MetadataBearer {\n  name: \"KMSNotFoundException\";\n  $fault: \"client\";\n  /**\n   * <p>A message that provides information about the error.</p>\n   */\n  message?: string;\n}\n\nexport namespace KMSNotFoundException {\n  export const filterSensitiveLog = (obj: KMSNotFoundException): any => ({\n    ...obj,\n  });\n  export const isa = (o: any): o is KMSNotFoundException => __isa(o, \"KMSNotFoundException\");\n}\n\n/**\n * <p>The AWS access key ID needs a subscription for the service.</p>\n */\nexport interface KMSOptInRequired extends __SmithyException, $MetadataBearer {\n  name: \"KMSOptInRequired\";\n  $fault: \"client\";\n  /**\n   * <p>A message that provides information about the error.</p>\n   */\n  message?: string;\n}\n\nexport namespace KMSOptInRequired {\n  export const filterSensitiveLog = (obj: KMSOptInRequired): any => ({\n    ...obj,\n  });\n  export const isa = (o: any): o is KMSOptInRequired => __isa(o, \"KMSOptInRequired\");\n}\n\n/**\n * <p>The request was denied due to request throttling. For more information about throttling, see <a href=\"https://docs.aws.amazon.com/kms/latest/developerguide/limits.html#requests-per-second\">Limits</a> in the\n *             <i>AWS Key Management Service Developer Guide</i>.</p>\n */\nexport interface KMSThrottlingException extends __SmithyException, $MetadataBearer {\n  name: \"KMSThrottlingException\";\n  $fault: \"client\";\n  /**\n   * <p>A message that provides information about the error.</p>\n   */\n  message?: string;\n}\n\nexport namespace KMSThrottlingException {\n  export const filterSensitiveLog = (obj: KMSThrottlingException): any => ({\n    ...obj,\n  });\n  export const isa = (o: any): o is KMSThrottlingException => __isa(o, \"KMSThrottlingException\");\n}\n\n/**\n * <p>The requested resource exceeds the maximum number allowed, or the number of concurrent stream requests exceeds the maximum number allowed. </p>\n */\nexport interface LimitExceededException extends __SmithyException, $MetadataBearer {\n  name: \"LimitExceededException\";\n  $fault: \"client\";\n  /**\n   * <p>A message that provides information about the error.</p>\n   */\n  message?: string;\n}\n\nexport namespace LimitExceededException {\n  export const filterSensitiveLog = (obj: LimitExceededException): any => ({\n    ...obj,\n  });\n  export const isa = (o: any): o is LimitExceededException => __isa(o, \"LimitExceededException\");\n}\n\nexport interface ListShardsInput {\n  __type?: \"ListShardsInput\";\n  /**\n   * <p>The maximum number of shards to return in a single call to <code>ListShards</code>.\n   *             The minimum value you can specify for this parameter is 1, and the maximum is 1,000,\n   *             which is also the default.</p>\n   *         <p>When the number of shards to be listed is greater than the value of\n   *                 <code>MaxResults</code>, the response contains a <code>NextToken</code> value that\n   *             you can use in a subsequent call to <code>ListShards</code> to list the next set of\n   *             shards.</p>\n   */\n  MaxResults?: number;\n\n  /**\n   * <p>When the number of shards in the data stream is greater than the default value for\n   *             the <code>MaxResults</code> parameter, or if you explicitly specify a value for\n   *                 <code>MaxResults</code> that is less than the number of shards in the data stream,\n   *             the response includes a pagination token named <code>NextToken</code>. You can specify\n   *             this <code>NextToken</code> value in a subsequent call to <code>ListShards</code> to\n   *             list the next set of shards.</p>\n   *         <p>Don't specify <code>StreamName</code> or <code>StreamCreationTimestamp</code> if\n   *             you specify <code>NextToken</code> because the latter unambiguously identifies the\n   *             stream.</p>\n   *         <p>You can optionally specify a value for the <code>MaxResults</code> parameter when\n   *             you specify <code>NextToken</code>. If you specify a <code>MaxResults</code> value that\n   *             is less than the number of shards that the operation returns if you don't specify\n   *                 <code>MaxResults</code>, the response will contain a new <code>NextToken</code>\n   *             value. You can use the new <code>NextToken</code> value in a subsequent call to the\n   *                 <code>ListShards</code> operation.</p>\n   *         <important>\n   *             <p>Tokens expire after 300 seconds. When you obtain a value for <code>NextToken</code> in the\n   *                 response to a call to <code>ListShards</code>, you have 300 seconds to use that\n   *                 value. If you specify an expired token in a call to <code>ListShards</code>, you get\n   *                     <code>ExpiredNextTokenException</code>.</p>\n   *          </important>\n   */\n  NextToken?: string;\n\n  /**\n   * <p>Specify this input parameter to distinguish data streams that have the same name.\n   *             For example, if you create a data stream and then delete it, and you later create\n   *             another data stream with the same name, you can use this input parameter to specify\n   *             which of the two streams you want to list the shards for.</p>\n   *         <p>You cannot specify this parameter if you specify the <code>NextToken</code>\n   *             parameter.</p>\n   */\n  StreamCreationTimestamp?: Date;\n\n  /**\n   * <p>Specify this parameter to indicate that you want to list the shards starting with\n   *             the shard whose ID immediately follows <code>ExclusiveStartShardId</code>.</p>\n   *         <p>If you don't specify this parameter, the default behavior is for <code>ListShards</code> to list the shards starting with the first one in the stream.</p>\n   *         <p>You cannot specify this parameter if you specify <code>NextToken</code>.</p>\n   */\n  ExclusiveStartShardId?: string;\n\n  /**\n   * <p>The name of the data stream whose shards you want to list. </p>\n   *         <p>You cannot specify this parameter if you specify the <code>NextToken</code>\n   *             parameter.</p>\n   */\n  StreamName?: string;\n}\n\nexport namespace ListShardsInput {\n  export const filterSensitiveLog = (obj: ListShardsInput): any => ({\n    ...obj,\n  });\n  export const isa = (o: any): o is ListShardsInput => __isa(o, \"ListShardsInput\");\n}\n\nexport interface ListShardsOutput {\n  __type?: \"ListShardsOutput\";\n  /**\n   * <p>When the number of shards in the data stream is greater than the default value for\n   *             the <code>MaxResults</code> parameter, or if you explicitly specify a value for\n   *                 <code>MaxResults</code> that is less than the number of shards in the data stream,\n   *             the response includes a pagination token named <code>NextToken</code>. You can specify\n   *             this <code>NextToken</code> value in a subsequent call to <code>ListShards</code> to\n   *             list the next set of shards. For more information about the use of this pagination token\n   *             when calling the <code>ListShards</code> operation, see <a>ListShardsInput$NextToken</a>.</p>\n   *         <important>\n   *             <p>Tokens expire after 300 seconds. When you obtain a value for <code>NextToken</code> in the\n   *                 response to a call to <code>ListShards</code>, you have 300 seconds to use that\n   *                 value. If you specify an expired token in a call to <code>ListShards</code>, you get\n   *                     <code>ExpiredNextTokenException</code>.</p>\n   *          </important>\n   */\n  NextToken?: string;\n\n  /**\n   * <p>An array of JSON objects. Each object represents one shard and specifies the IDs of the shard, the shard's parent,\n   *             and the shard that's adjacent to the shard's parent. Each object also contains the starting and ending hash keys and the starting and ending sequence numbers for the shard.</p>\n   */\n  Shards?: Shard[];\n}\n\nexport namespace ListShardsOutput {\n  export const filterSensitiveLog = (obj: ListShardsOutput): any => ({\n    ...obj,\n  });\n  export const isa = (o: any): o is ListShardsOutput => __isa(o, \"ListShardsOutput\");\n}\n\nexport interface ListStreamConsumersInput {\n  __type?: \"ListStreamConsumersInput\";\n  /**\n   * <p>Specify this input parameter to distinguish data streams that have the same name. For\n   *             example, if you create a data stream and then delete it, and you later create another\n   *             data stream with the same name, you can use this input parameter to specify which of the\n   *             two streams you want to list the consumers for. </p>\n   *         <p>You can't specify this parameter if you specify the NextToken parameter. </p>\n   */\n  StreamCreationTimestamp?: Date;\n\n  /**\n   * <p>When the number of consumers that are registered with the data stream is greater than the default value for\n   *             the <code>MaxResults</code> parameter, or if you explicitly specify a value for\n   *             <code>MaxResults</code> that is less than the number of consumers that are registered with the data stream,\n   *             the response includes a pagination token named <code>NextToken</code>. You can specify\n   *             this <code>NextToken</code> value in a subsequent call to <code>ListStreamConsumers</code> to\n   *             list the next set of registered consumers.</p>\n   *         <p>Don't specify <code>StreamName</code> or <code>StreamCreationTimestamp</code> if\n   *             you specify <code>NextToken</code> because the latter unambiguously identifies the\n   *             stream.</p>\n   *         <p>You can optionally specify a value for the <code>MaxResults</code> parameter when\n   *             you specify <code>NextToken</code>. If you specify a <code>MaxResults</code> value that\n   *             is less than the number of consumers that the operation returns if you don't specify\n   *             <code>MaxResults</code>, the response will contain a new <code>NextToken</code>\n   *             value. You can use the new <code>NextToken</code> value in a subsequent call to the\n   *             <code>ListStreamConsumers</code> operation to list the next set of consumers.</p>\n   *         <important>\n   *             <p>Tokens expire after 300 seconds. When you obtain a value for <code>NextToken</code> in the\n   *             response to a call to <code>ListStreamConsumers</code>, you have 300 seconds to use that\n   *             value. If you specify an expired token in a call to <code>ListStreamConsumers</code>, you get\n   *             <code>ExpiredNextTokenException</code>.</p>\n   *          </important>\n   */\n  NextToken?: string;\n\n  /**\n   * <p>The maximum number of consumers that you want a single call of\n   *                 <code>ListStreamConsumers</code> to return.</p>\n   */\n  MaxResults?: number;\n\n  /**\n   * <p>The ARN of the Kinesis data stream for which you want to list the registered\n   *             consumers. For more information, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html#arn-syntax-kinesis-streams\">Amazon Resource Names (ARNs) and AWS Service Namespaces</a>.</p>\n   */\n  StreamARN: string | undefined;\n}\n\nexport namespace ListStreamConsumersInput {\n  export const filterSensitiveLog = (obj: ListStreamConsumersInput): any => ({\n    ...obj,\n  });\n  export const isa = (o: any): o is ListStreamConsumersInput => __isa(o, \"ListStreamConsumersInput\");\n}\n\nexport interface ListStreamConsumersOutput {\n  __type?: \"ListStreamConsumersOutput\";\n  /**\n   * <p>When the number of consumers that are registered with the data stream is greater than the default value for\n   *             the <code>MaxResults</code> parameter, or if you explicitly specify a value for\n   *             <code>MaxResults</code> that is less than the number of registered consumers,\n   *             the response includes a pagination token named <code>NextToken</code>. You can specify\n   *             this <code>NextToken</code> value in a subsequent call to <code>ListStreamConsumers</code> to\n   *             list the next set of registered consumers. For more information about the use of this pagination token\n   *             when calling the <code>ListStreamConsumers</code> operation, see <a>ListStreamConsumersInput$NextToken</a>.</p>\n   *         <important>\n   *             <p>Tokens expire after 300 seconds. When you obtain a value for <code>NextToken</code> in the\n   *             response to a call to <code>ListStreamConsumers</code>, you have 300 seconds to use that\n   *             value. If you specify an expired token in a call to <code>ListStreamConsumers</code>, you get\n   *             <code>ExpiredNextTokenException</code>.</p>\n   *          </important>\n   */\n  NextToken?: string;\n\n  /**\n   * <p>An array of JSON objects. Each object represents one registered consumer.</p>\n   */\n  Consumers?: Consumer[];\n}\n\nexport namespace ListStreamConsumersOutput {\n  export const filterSensitiveLog = (obj: ListStreamConsumersOutput): any => ({\n    ...obj,\n  });\n  export const isa = (o: any): o is ListStreamConsumersOutput => __isa(o, \"ListStreamConsumersOutput\");\n}\n\n/**\n * <p>Represents the input for <code>ListStreams</code>.</p>\n */\nexport interface ListStreamsInput {\n  __type?: \"ListStreamsInput\";\n  /**\n   * <p>The name of the stream to start the list with.</p>\n   */\n  ExclusiveStartStreamName?: string;\n\n  /**\n   * <p>The maximum number of streams to list.</p>\n   */\n  Limit?: number;\n}\n\nexport namespace ListStreamsInput {\n  export const filterSensitiveLog = (obj: ListStreamsInput): any => ({\n    ...obj,\n  });\n  export const isa = (o: any): o is ListStreamsInput => __isa(o, \"ListStreamsInput\");\n}\n\n/**\n * <p>Represents the output for <code>ListStreams</code>.</p>\n */\nexport interface ListStreamsOutput {\n  __type?: \"ListStreamsOutput\";\n  /**\n   * <p>If set to <code>true</code>, there are more streams available to list.</p>\n   */\n  HasMoreStreams: boolean | undefined;\n\n  /**\n   * <p>The names of the streams that are associated with the AWS account making the\n   *                 <code>ListStreams</code> request.</p>\n   */\n  StreamNames: string[] | undefined;\n}\n\nexport namespace ListStreamsOutput {\n  export const filterSensitiveLog = (obj: ListStreamsOutput): any => ({\n    ...obj,\n  });\n  export const isa = (o: any): o is ListStreamsOutput => __isa(o, \"ListStreamsOutput\");\n}\n\n/**\n * <p>Represents the input for <code>ListTagsForStream</code>.</p>\n */\nexport interface ListTagsForStreamInput {\n  __type?: \"ListTagsForStreamInput\";\n  /**\n   * <p>The name of the stream.</p>\n   */\n  StreamName: string | undefined;\n\n  /**\n   * <p>The number of tags to return. If this number is less than the total number of tags\n   *             associated with the stream, <code>HasMoreTags</code> is set to <code>true</code>. To\n   *             list additional tags, set <code>ExclusiveStartTagKey</code> to the last key in the\n   *             response.</p>\n   */\n  Limit?: number;\n\n  /**\n   * <p>The key to use as the starting point for the list of tags. If this parameter is set,\n   *                 <code>ListTagsForStream</code> gets all tags that occur after\n   *                 <code>ExclusiveStartTagKey</code>. </p>\n   */\n  ExclusiveStartTagKey?: string;\n}\n\nexport namespace ListTagsForStreamInput {\n  export const filterSensitiveLog = (obj: ListTagsForStreamInput): any => ({\n    ...obj,\n  });\n  export const isa = (o: any): o is ListTagsForStreamInput => __isa(o, \"ListTagsForStreamInput\");\n}\n\n/**\n * <p>Represents the output for <code>ListTagsForStream</code>.</p>\n */\nexport interface ListTagsForStreamOutput {\n  __type?: \"ListTagsForStreamOutput\";\n  /**\n   * <p>If set to <code>true</code>, more tags are available. To request additional tags, set\n   *                 <code>ExclusiveStartTagKey</code> to the key of the last tag returned.</p>\n   */\n  HasMoreTags: boolean | undefined;\n\n  /**\n   * <p>A list of tags associated with <code>StreamName</code>, starting with the first tag after\n   *                 <code>ExclusiveStartTagKey</code> and up to the specified <code>Limit</code>. </p>\n   */\n  Tags: Tag[] | undefined;\n}\n\nexport namespace ListTagsForStreamOutput {\n  export const filterSensitiveLog = (obj: ListTagsForStreamOutput): any => ({\n    ...obj,\n  });\n  export const isa = (o: any): o is ListTagsForStreamOutput => __isa(o, \"ListTagsForStreamOutput\");\n}\n\n/**\n * <p>Represents the input for <code>MergeShards</code>.</p>\n */\nexport interface MergeShardsInput {\n  __type?: \"MergeShardsInput\";\n  /**\n   * <p>The shard ID of the adjacent shard for the merge.</p>\n   */\n  AdjacentShardToMerge: string | undefined;\n\n  /**\n   * <p>The shard ID of the shard to combine with the adjacent shard for the merge.</p>\n   */\n  ShardToMerge: string | undefined;\n\n  /**\n   * <p>The name of the stream for the merge.</p>\n   */\n  StreamName: string | undefined;\n}\n\nexport namespace MergeShardsInput {\n  export const filterSensitiveLog = (obj: MergeShardsInput): any => ({\n    ...obj,\n  });\n  export const isa = (o: any): o is MergeShardsInput => __isa(o, \"MergeShardsInput\");\n}\n\nexport enum MetricsName {\n  ALL = \"ALL\",\n  INCOMING_BYTES = \"IncomingBytes\",\n  INCOMING_RECORDS = \"IncomingRecords\",\n  ITERATOR_AGE_MILLISECONDS = \"IteratorAgeMilliseconds\",\n  OUTGOING_BYTES = \"OutgoingBytes\",\n  OUTGOING_RECORDS = \"OutgoingRecords\",\n  READ_PROVISIONED_THROUGHPUT_EXCEEDED = \"ReadProvisionedThroughputExceeded\",\n  WRITE_PROVISIONED_THROUGHPUT_EXCEEDED = \"WriteProvisionedThroughputExceeded\",\n}\n\n/**\n * <p>The request rate for the stream is too high, or the requested data is too large for\n *             the available throughput. Reduce the frequency or size of your requests. For more\n *             information, see <a href=\"https://docs.aws.amazon.com/kinesis/latest/dev/service-sizes-and-limits.html\">Streams Limits</a> in the\n *                 <i>Amazon Kinesis Data Streams Developer Guide</i>, and <a href=\"https://docs.aws.amazon.com/general/latest/gr/api-retries.html\">Error Retries and\n *                 Exponential Backoff in AWS</a> in the <i>AWS General\n *             Reference</i>.</p>\n */\nexport interface ProvisionedThroughputExceededException extends __SmithyException, $MetadataBearer {\n  name: \"ProvisionedThroughputExceededException\";\n  $fault: \"client\";\n  /**\n   * <p>A message that provides information about the error.</p>\n   */\n  message?: string;\n}\n\nexport namespace ProvisionedThroughputExceededException {\n  export const filterSensitiveLog = (obj: ProvisionedThroughputExceededException): any => ({\n    ...obj,\n  });\n  export const isa = (o: any): o is ProvisionedThroughputExceededException =>\n    __isa(o, \"ProvisionedThroughputExceededException\");\n}\n\n/**\n * <p>Represents the input for <code>PutRecord</code>.</p>\n */\nexport interface PutRecordInput {\n  __type?: \"PutRecordInput\";\n  /**\n   * <p>Guarantees strictly increasing sequence numbers, for puts from the same client and\n   *             to the same partition key. Usage: set the <code>SequenceNumberForOrdering</code> of\n   *             record <i>n</i> to the sequence number of record <i>n-1</i>\n   *             (as returned in the result when putting record <i>n-1</i>). If this\n   *             parameter is not set, records are coarsely ordered based on arrival time.</p>\n   */\n  SequenceNumberForOrdering?: string;\n\n  /**\n   * <p>The name of the stream to put the data record into.</p>\n   */\n  StreamName: string | undefined;\n\n  /**\n   * <p>The hash value used to explicitly determine the shard the data record is assigned to by overriding the partition key hash.</p>\n   */\n  ExplicitHashKey?: string;\n\n  /**\n   * <p>Determines which shard in the stream the data record is assigned to. Partition keys\n   *             are Unicode strings with a maximum length limit of 256 characters for each key. Amazon\n   *             Kinesis Data Streams uses the partition key as input to a hash function that maps the\n   *             partition key and associated data to a specific shard. Specifically, an MD5 hash\n   *             function is used to map partition keys to 128-bit integer values and to map associated\n   *             data records to shards. As a result of this hashing mechanism, all data records with the\n   *             same partition key map to the same shard within the stream.</p>\n   */\n  PartitionKey: string | undefined;\n\n  /**\n   * <p>The data blob to put into the record, which is base64-encoded when the blob is serialized. When the data blob (the payload before base64-encoding) is added to the partition key size, the total size must not exceed the maximum record size (1 MB).</p>\n   */\n  Data: Uint8Array | undefined;\n}\n\nexport namespace PutRecordInput {\n  export const filterSensitiveLog = (obj: PutRecordInput): any => ({\n    ...obj,\n  });\n  export const isa = (o: any): o is PutRecordInput => __isa(o, \"PutRecordInput\");\n}\n\n/**\n * <p>Represents the output for <code>PutRecord</code>.</p>\n */\nexport interface PutRecordOutput {\n  __type?: \"PutRecordOutput\";\n  /**\n   * <p>The encryption type to use on the record. This parameter can be one of the following values:</p>\n   *         <ul>\n   *             <li>\n   *                <p>\n   *                   <code>NONE</code>: Do not encrypt the records in the stream.</p>\n   *             </li>\n   *             <li>\n   *                <p>\n   *                   <code>KMS</code>: Use server-side encryption on the records in the stream using a\n   *                     customer-managed AWS KMS key.</p>\n   *             </li>\n   *          </ul>\n   */\n  EncryptionType?: EncryptionType | string;\n\n  /**\n   * <p>The shard ID of the shard where the data record was placed.</p>\n   */\n  ShardId: string | undefined;\n\n  /**\n   * <p>The sequence number identifier that was assigned to the put data record. The sequence number for the record is unique across all records in the stream. A sequence number is the identifier associated with every record put into the stream.</p>\n   */\n  SequenceNumber: string | undefined;\n}\n\nexport namespace PutRecordOutput {\n  export const filterSensitiveLog = (obj: PutRecordOutput): any => ({\n    ...obj,\n  });\n  export const isa = (o: any): o is PutRecordOutput => __isa(o, \"PutRecordOutput\");\n}\n\n/**\n * <p>A <code>PutRecords</code> request.</p>\n */\nexport interface PutRecordsInput {\n  __type?: \"PutRecordsInput\";\n  /**\n   * <p>The stream name associated with the request.</p>\n   */\n  StreamName: string | undefined;\n\n  /**\n   * <p>The records associated with the request.</p>\n   */\n  Records: PutRecordsRequestEntry[] | undefined;\n}\n\nexport namespace PutRecordsInput {\n  export const filterSensitiveLog = (obj: PutRecordsInput): any => ({\n    ...obj,\n  });\n  export const isa = (o: any): o is PutRecordsInput => __isa(o, \"PutRecordsInput\");\n}\n\n/**\n * <p>\n *             <code>PutRecords</code> results.</p>\n */\nexport interface PutRecordsOutput {\n  __type?: \"PutRecordsOutput\";\n  /**\n   * <p>The encryption type used on the records. This parameter can be one of the following values:</p>\n   *         <ul>\n   *             <li>\n   *                <p>\n   *                   <code>NONE</code>: Do not encrypt the records.</p>\n   *             </li>\n   *             <li>\n   *                <p>\n   *                   <code>KMS</code>: Use server-side encryption on the records using a customer-managed AWS\n   *                     KMS key.</p>\n   *             </li>\n   *          </ul>\n   */\n  EncryptionType?: EncryptionType | string;\n\n  /**\n   * <p>The number of unsuccessfully processed records in a <code>PutRecords</code> request.</p>\n   */\n  FailedRecordCount?: number;\n\n  /**\n   * <p>An array of successfully and unsuccessfully processed record results, correlated with the\n   *             request by natural ordering. A record that is successfully added to a stream includes\n   *                 <code>SequenceNumber</code> and <code>ShardId</code> in the result. A record that\n   *             fails to be added to a stream includes <code>ErrorCode</code> and\n   *                 <code>ErrorMessage</code> in the result.</p>\n   */\n  Records: PutRecordsResultEntry[] | undefined;\n}\n\nexport namespace PutRecordsOutput {\n  export const filterSensitiveLog = (obj: PutRecordsOutput): any => ({\n    ...obj,\n  });\n  export const isa = (o: any): o is PutRecordsOutput => __isa(o, \"PutRecordsOutput\");\n}\n\n/**\n * <p>Represents the output for <code>PutRecords</code>.</p>\n */\nexport interface PutRecordsRequestEntry {\n  __type?: \"PutRecordsRequestEntry\";\n  /**\n   * <p>Determines which shard in the stream the data record is assigned to. Partition keys\n   *             are Unicode strings with a maximum length limit of 256 characters for each key. Amazon\n   *             Kinesis Data Streams uses the partition key as input to a hash function that maps the\n   *             partition key and associated data to a specific shard. Specifically, an MD5 hash\n   *             function is used to map partition keys to 128-bit integer values and to map associated\n   *             data records to shards. As a result of this hashing mechanism, all data records with the\n   *             same partition key map to the same shard within the stream.</p>\n   */\n  PartitionKey: string | undefined;\n\n  /**\n   * <p>The data blob to put into the record, which is base64-encoded when the blob is serialized. When the data blob (the payload before base64-encoding) is added to the partition key size, the total size must not exceed the maximum record size (1 MB).</p>\n   */\n  Data: Uint8Array | undefined;\n\n  /**\n   * <p>The hash value used to determine explicitly the shard that the data record is assigned to by overriding the partition key hash.</p>\n   */\n  ExplicitHashKey?: string;\n}\n\nexport namespace PutRecordsRequestEntry {\n  export const filterSensitiveLog = (obj: PutRecordsRequestEntry): any => ({\n    ...obj,\n  });\n  export const isa = (o: any): o is PutRecordsRequestEntry => __isa(o, \"PutRecordsRequestEntry\");\n}\n\n/**\n * <p>Represents the result of an individual record from a <code>PutRecords</code> request. A\n *             record that is successfully added to a stream includes <code>SequenceNumber</code> and\n *                 <code>ShardId</code> in the result. A record that fails to be added to the stream\n *             includes <code>ErrorCode</code> and <code>ErrorMessage</code> in the result.</p>\n */\nexport interface PutRecordsResultEntry {\n  __type?: \"PutRecordsResultEntry\";\n  /**\n   * <p>The shard ID for an individual record result.</p>\n   */\n  ShardId?: string;\n\n  /**\n   * <p>The sequence number for an individual record result.</p>\n   */\n  SequenceNumber?: string;\n\n  /**\n   * <p>The error code for an individual record result. <code>ErrorCodes</code> can be either\n   *                 <code>ProvisionedThroughputExceededException</code> or\n   *             <code>InternalFailure</code>.</p>\n   */\n  ErrorCode?: string;\n\n  /**\n   * <p>The error message for an individual record result. An <code>ErrorCode</code> value of\n   *                 <code>ProvisionedThroughputExceededException</code> has an error message that\n   *             includes the account ID, stream name, and shard ID. An <code>ErrorCode</code> value of\n   *                 <code>InternalFailure</code> has the error message <code>\"Internal Service\n   *                 Failure\"</code>.</p>\n   */\n  ErrorMessage?: string;\n}\n\nexport namespace PutRecordsResultEntry {\n  export const filterSensitiveLog = (obj: PutRecordsResultEntry): any => ({\n    ...obj,\n  });\n  export const isa = (o: any): o is PutRecordsResultEntry => __isa(o, \"PutRecordsResultEntry\");\n}\n\n/**\n * <p>The unit of data of the Kinesis data stream, which is composed of a sequence\n *             number, a partition key, and a data blob.</p>\n */\nexport interface _Record {\n  __type?: \"Record\";\n  /**\n   * <p>Identifies which shard in the stream the data record is assigned to.</p>\n   */\n  PartitionKey: string | undefined;\n\n  /**\n   * <p>The data blob. The data in the blob is both opaque and immutable to Kinesis Data\n   *             Streams, which does not inspect, interpret, or change the data in the blob in any way.\n   *             When the data blob (the payload before base64-encoding) is added to the partition key\n   *             size, the total size must not exceed the maximum record size (1 MB).</p>\n   */\n  Data: Uint8Array | undefined;\n\n  /**\n   * <p>The unique identifier of the record within its shard.</p>\n   */\n  SequenceNumber: string | undefined;\n\n  /**\n   * <p>The encryption type used on the record. This parameter can be one of the following values:</p>\n   *         <ul>\n   *             <li>\n   *                <p>\n   *                   <code>NONE</code>: Do not encrypt the records in the stream.</p>\n   *             </li>\n   *             <li>\n   *                <p>\n   *                   <code>KMS</code>: Use server-side encryption on the records in the stream using a\n   *                     customer-managed AWS KMS key.</p>\n   *             </li>\n   *          </ul>\n   */\n  EncryptionType?: EncryptionType | string;\n\n  /**\n   * <p>The approximate time that the record was inserted into the stream.</p>\n   */\n  ApproximateArrivalTimestamp?: Date;\n}\n\nexport namespace _Record {\n  export const filterSensitiveLog = (obj: _Record): any => ({\n    ...obj,\n  });\n  export const isa = (o: any): o is _Record => __isa(o, \"Record\");\n}\n\nexport interface RegisterStreamConsumerInput {\n  __type?: \"RegisterStreamConsumerInput\";\n  /**\n   * <p>The ARN of the Kinesis data stream that you want to register the consumer with.\n   *             For more info, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html#arn-syntax-kinesis-streams\">Amazon Resource Names (ARNs) and AWS Service Namespaces</a>.</p>\n   */\n  StreamARN: string | undefined;\n\n  /**\n   * <p>For a given Kinesis data stream, each consumer must have a unique name. However, consumer names don't have to be unique across data streams.</p>\n   */\n  ConsumerName: string | undefined;\n}\n\nexport namespace RegisterStreamConsumerInput {\n  export const filterSensitiveLog = (obj: RegisterStreamConsumerInput): any => ({\n    ...obj,\n  });\n  export const isa = (o: any): o is RegisterStreamConsumerInput => __isa(o, \"RegisterStreamConsumerInput\");\n}\n\nexport interface RegisterStreamConsumerOutput {\n  __type?: \"RegisterStreamConsumerOutput\";\n  /**\n   * <p>An object that represents the details of the consumer you registered. When you\n   *             register a consumer, it gets an ARN that is generated by Kinesis Data Streams.</p>\n   */\n  Consumer: Consumer | undefined;\n}\n\nexport namespace RegisterStreamConsumerOutput {\n  export const filterSensitiveLog = (obj: RegisterStreamConsumerOutput): any => ({\n    ...obj,\n  });\n  export const isa = (o: any): o is RegisterStreamConsumerOutput => __isa(o, \"RegisterStreamConsumerOutput\");\n}\n\n/**\n * <p>Represents the input for <code>RemoveTagsFromStream</code>.</p>\n */\nexport interface RemoveTagsFromStreamInput {\n  __type?: \"RemoveTagsFromStreamInput\";\n  /**\n   * <p>A list of tag keys. Each corresponding tag is removed from the stream.</p>\n   */\n  TagKeys: string[] | undefined;\n\n  /**\n   * <p>The name of the stream.</p>\n   */\n  StreamName: string | undefined;\n}\n\nexport namespace RemoveTagsFromStreamInput {\n  export const filterSensitiveLog = (obj: RemoveTagsFromStreamInput): any => ({\n    ...obj,\n  });\n  export const isa = (o: any): o is RemoveTagsFromStreamInput => __isa(o, \"RemoveTagsFromStreamInput\");\n}\n\n/**\n * <p>The resource is not available for this operation. For successful operation, the\n *             resource must be in the <code>ACTIVE</code> state.</p>\n */\nexport interface ResourceInUseException extends __SmithyException, $MetadataBearer {\n  name: \"ResourceInUseException\";\n  $fault: \"client\";\n  /**\n   * <p>A message that provides information about the error.</p>\n   */\n  message?: string;\n}\n\nexport namespace ResourceInUseException {\n  export const filterSensitiveLog = (obj: ResourceInUseException): any => ({\n    ...obj,\n  });\n  export const isa = (o: any): o is ResourceInUseException => __isa(o, \"ResourceInUseException\");\n}\n\n/**\n * <p>The requested resource could not be found. The stream might not be specified correctly.</p>\n */\nexport interface ResourceNotFoundException extends __SmithyException, $MetadataBearer {\n  name: \"ResourceNotFoundException\";\n  $fault: \"client\";\n  /**\n   * <p>A message that provides information about the error.</p>\n   */\n  message?: string;\n}\n\nexport namespace ResourceNotFoundException {\n  export const filterSensitiveLog = (obj: ResourceNotFoundException): any => ({\n    ...obj,\n  });\n  export const isa = (o: any): o is ResourceNotFoundException => __isa(o, \"ResourceNotFoundException\");\n}\n\nexport enum ScalingType {\n  UNIFORM_SCALING = \"UNIFORM_SCALING\",\n}\n\n/**\n * <p>The range of possible sequence numbers for the shard.</p>\n */\nexport interface SequenceNumberRange {\n  __type?: \"SequenceNumberRange\";\n  /**\n   * <p>The ending sequence number for the range. Shards that are in the OPEN state have an\n   *             ending sequence number of <code>null</code>.</p>\n   */\n  EndingSequenceNumber?: string;\n\n  /**\n   * <p>The starting sequence number for the range.</p>\n   */\n  StartingSequenceNumber: string | undefined;\n}\n\nexport namespace SequenceNumberRange {\n  export const filterSensitiveLog = (obj: SequenceNumberRange): any => ({\n    ...obj,\n  });\n  export const isa = (o: any): o is SequenceNumberRange => __isa(o, \"SequenceNumberRange\");\n}\n\n/**\n * <p>A uniquely identified group of data records in a Kinesis data stream.</p>\n */\nexport interface Shard {\n  __type?: \"Shard\";\n  /**\n   * <p>The shard ID of the shard's parent.</p>\n   */\n  ParentShardId?: string;\n\n  /**\n   * <p>The shard ID of the shard adjacent to the shard's parent.</p>\n   */\n  AdjacentParentShardId?: string;\n\n  /**\n   * <p>The range of possible sequence numbers for the shard.</p>\n   */\n  SequenceNumberRange: SequenceNumberRange | undefined;\n\n  /**\n   * <p>The range of possible hash key values for the shard, which is a set of ordered contiguous positive integers.</p>\n   */\n  HashKeyRange: HashKeyRange | undefined;\n\n  /**\n   * <p>The unique identifier of the shard within the stream.</p>\n   */\n  ShardId: string | undefined;\n}\n\nexport namespace Shard {\n  export const filterSensitiveLog = (obj: Shard): any => ({\n    ...obj,\n  });\n  export const isa = (o: any): o is Shard => __isa(o, \"Shard\");\n}\n\nexport enum ShardIteratorType {\n  AFTER_SEQUENCE_NUMBER = \"AFTER_SEQUENCE_NUMBER\",\n  AT_SEQUENCE_NUMBER = \"AT_SEQUENCE_NUMBER\",\n  AT_TIMESTAMP = \"AT_TIMESTAMP\",\n  LATEST = \"LATEST\",\n  TRIM_HORIZON = \"TRIM_HORIZON\",\n}\n\n/**\n * <p>Represents the input for <code>SplitShard</code>.</p>\n */\nexport interface SplitShardInput {\n  __type?: \"SplitShardInput\";\n  /**\n   * <p>A hash key value for the starting hash key of one of the child shards created by the\n   *             split. The hash key range for a given shard constitutes a set of ordered contiguous\n   *             positive integers. The value for <code>NewStartingHashKey</code> must be in the range of\n   *             hash keys being mapped into the shard. The <code>NewStartingHashKey</code> hash key\n   *             value and all higher hash key values in hash key range are distributed to one of the\n   *             child shards. All the lower hash key values in the range are distributed to the other\n   *             child shard.</p>\n   */\n  NewStartingHashKey: string | undefined;\n\n  /**\n   * <p>The shard ID of the shard to split.</p>\n   */\n  ShardToSplit: string | undefined;\n\n  /**\n   * <p>The name of the stream for the shard split.</p>\n   */\n  StreamName: string | undefined;\n}\n\nexport namespace SplitShardInput {\n  export const filterSensitiveLog = (obj: SplitShardInput): any => ({\n    ...obj,\n  });\n  export const isa = (o: any): o is SplitShardInput => __isa(o, \"SplitShardInput\");\n}\n\nexport interface StartingPosition {\n  __type?: \"StartingPosition\";\n  SequenceNumber?: string;\n  Type: ShardIteratorType | string | undefined;\n  Timestamp?: Date;\n}\n\nexport namespace StartingPosition {\n  export const filterSensitiveLog = (obj: StartingPosition): any => ({\n    ...obj,\n  });\n  export const isa = (o: any): o is StartingPosition => __isa(o, \"StartingPosition\");\n}\n\nexport interface StartStreamEncryptionInput {\n  __type?: \"StartStreamEncryptionInput\";\n  /**\n   * <p>The GUID for the customer-managed AWS KMS key to use for encryption. This value can\n   *             be a globally unique identifier, a fully specified Amazon Resource Name (ARN) to either\n   *             an alias or a key, or an alias name prefixed by \"alias/\".You can also use a master key\n   *             owned by Kinesis Data Streams by specifying the alias\n   *             <code>aws/kinesis</code>.</p>\n   *         <ul>\n   *             <li>\n   *                <p>Key ARN example:\n   *                         <code>arn:aws:kms:us-east-1:123456789012:key/12345678-1234-1234-1234-123456789012</code>\n   *                </p>\n   *             </li>\n   *             <li>\n   *                <p>Alias ARN example:\n   *                     <code>arn:aws:kms:us-east-1:123456789012:alias/MyAliasName</code>\n   *                </p>\n   *             </li>\n   *             <li>\n   *                <p>Globally unique key ID example: <code>12345678-1234-1234-1234-123456789012</code>\n   *                </p>\n   *             </li>\n   *             <li>\n   *                <p>Alias name example: <code>alias/MyAliasName</code>\n   *                </p>\n   *             </li>\n   *             <li>\n   *                <p>Master key owned by Kinesis Data Streams: <code>alias/aws/kinesis</code>\n   *                </p>\n   *             </li>\n   *          </ul>\n   */\n  KeyId: string | undefined;\n\n  /**\n   * <p>The encryption type to use. The only valid value is <code>KMS</code>.</p>\n   */\n  EncryptionType: EncryptionType | string | undefined;\n\n  /**\n   * <p>The name of the stream for which to start encrypting records.</p>\n   */\n  StreamName: string | undefined;\n}\n\nexport namespace StartStreamEncryptionInput {\n  export const filterSensitiveLog = (obj: StartStreamEncryptionInput): any => ({\n    ...obj,\n  });\n  export const isa = (o: any): o is StartStreamEncryptionInput => __isa(o, \"StartStreamEncryptionInput\");\n}\n\nexport interface StopStreamEncryptionInput {\n  __type?: \"StopStreamEncryptionInput\";\n  /**\n   * <p>The GUID for the customer-managed AWS KMS key to use for encryption. This value can\n   *             be a globally unique identifier, a fully specified Amazon Resource Name (ARN) to either\n   *             an alias or a key, or an alias name prefixed by \"alias/\".You can also use a master key\n   *             owned by Kinesis Data Streams by specifying the alias\n   *             <code>aws/kinesis</code>.</p>\n   *         <ul>\n   *             <li>\n   *                <p>Key ARN example:\n   *                         <code>arn:aws:kms:us-east-1:123456789012:key/12345678-1234-1234-1234-123456789012</code>\n   *                </p>\n   *             </li>\n   *             <li>\n   *                <p>Alias ARN example:\n   *                     <code>arn:aws:kms:us-east-1:123456789012:alias/MyAliasName</code>\n   *                </p>\n   *             </li>\n   *             <li>\n   *                <p>Globally unique key ID example: <code>12345678-1234-1234-1234-123456789012</code>\n   *                </p>\n   *             </li>\n   *             <li>\n   *                <p>Alias name example: <code>alias/MyAliasName</code>\n   *                </p>\n   *             </li>\n   *             <li>\n   *                <p>Master key owned by Kinesis Data Streams: <code>alias/aws/kinesis</code>\n   *                </p>\n   *             </li>\n   *          </ul>\n   */\n  KeyId: string | undefined;\n\n  /**\n   * <p>The name of the stream on which to stop encrypting records.</p>\n   */\n  StreamName: string | undefined;\n\n  /**\n   * <p>The encryption type. The only valid value is <code>KMS</code>.</p>\n   */\n  EncryptionType: EncryptionType | string | undefined;\n}\n\nexport namespace StopStreamEncryptionInput {\n  export const filterSensitiveLog = (obj: StopStreamEncryptionInput): any => ({\n    ...obj,\n  });\n  export const isa = (o: any): o is StopStreamEncryptionInput => __isa(o, \"StopStreamEncryptionInput\");\n}\n\n/**\n * <p>Represents the output for <a>DescribeStream</a>.</p>\n */\nexport interface StreamDescription {\n  __type?: \"StreamDescription\";\n  /**\n   * <p>The server-side encryption type used on the stream. This parameter can be one of the following values:</p>\n   *         <ul>\n   *             <li>\n   *                <p>\n   *                   <code>NONE</code>: Do not encrypt the records in the stream.</p>\n   *             </li>\n   *             <li>\n   *                <p>\n   *                   <code>KMS</code>: Use server-side encryption on the records in the stream using a\n   *                     customer-managed AWS KMS key.</p>\n   *             </li>\n   *          </ul>\n   */\n  EncryptionType?: EncryptionType | string;\n\n  /**\n   * <p>The name of the stream being described.</p>\n   */\n  StreamName: string | undefined;\n\n  /**\n   * <p>The approximate time that the stream was created.</p>\n   */\n  StreamCreationTimestamp: Date | undefined;\n\n  /**\n   * <p>If set to <code>true</code>, more shards in the stream are available to describe.</p>\n   */\n  HasMoreShards: boolean | undefined;\n\n  /**\n   * <p>The GUID for the customer-managed AWS KMS key to use for encryption. This value can\n   *             be a globally unique identifier, a fully specified ARN to either an alias or a key, or\n   *             an alias name prefixed by \"alias/\".You can also use a master key owned by Kinesis Data\n   *             Streams by specifying the alias <code>aws/kinesis</code>.</p>\n   *         <ul>\n   *             <li>\n   *                <p>Key ARN example:\n   *                         <code>arn:aws:kms:us-east-1:123456789012:key/12345678-1234-1234-1234-123456789012</code>\n   *                </p>\n   *             </li>\n   *             <li>\n   *                <p>Alias ARN example:\n   *                     <code>arn:aws:kms:us-east-1:123456789012:alias/MyAliasName</code>\n   *                </p>\n   *             </li>\n   *             <li>\n   *                <p>Globally unique key ID example: <code>12345678-1234-1234-1234-123456789012</code>\n   *                </p>\n   *             </li>\n   *             <li>\n   *                <p>Alias name example: <code>alias/MyAliasName</code>\n   *                </p>\n   *             </li>\n   *             <li>\n   *                <p>Master key owned by Kinesis Data Streams: <code>alias/aws/kinesis</code>\n   *                </p>\n   *             </li>\n   *          </ul>\n   */\n  KeyId?: string;\n\n  /**\n   * <p>The current status of the stream being described. The stream status is one of the following states:</p>\n   *         <ul>\n   *             <li>\n   *                <p>\n   *                     <code>CREATING</code> - The stream is being created. Kinesis Data Streams\n   *                     immediately returns and sets <code>StreamStatus</code> to\n   *                     <code>CREATING</code>.</p>\n   *             </li>\n   *             <li>\n   *                <p>\n   *                     <code>DELETING</code> - The stream is being deleted. The specified stream is in\n   *                     the <code>DELETING</code> state until Kinesis Data Streams completes the\n   *                     deletion.</p>\n   *             </li>\n   *             <li>\n   *                <p>\n   *                   <code>ACTIVE</code> - The stream exists and is ready for read and write\n   *                     operations or deletion. You should perform read and write operations only on an\n   *                         <code>ACTIVE</code> stream.</p>\n   *             </li>\n   *             <li>\n   *                <p>\n   *                   <code>UPDATING</code> - Shards in the stream are being merged or split. Read and\n   *                     write operations continue to work while the stream is in the\n   *                         <code>UPDATING</code> state.</p>\n   *             </li>\n   *          </ul>\n   */\n  StreamStatus: StreamStatus | string | undefined;\n\n  /**\n   * <p>The shards that comprise the stream.</p>\n   */\n  Shards: Shard[] | undefined;\n\n  /**\n   * <p>The Amazon Resource Name (ARN) for the stream being described.</p>\n   */\n  StreamARN: string | undefined;\n\n  /**\n   * <p>The current retention period, in hours.</p>\n   */\n  RetentionPeriodHours: number | undefined;\n\n  /**\n   * <p>Represents the current enhanced monitoring settings of the stream.</p>\n   */\n  EnhancedMonitoring: EnhancedMetrics[] | undefined;\n}\n\nexport namespace StreamDescription {\n  export const filterSensitiveLog = (obj: StreamDescription): any => ({\n    ...obj,\n  });\n  export const isa = (o: any): o is StreamDescription => __isa(o, \"StreamDescription\");\n}\n\n/**\n * <p>Represents the output for <a>DescribeStreamSummary</a>\n *          </p>\n */\nexport interface StreamDescriptionSummary {\n  __type?: \"StreamDescriptionSummary\";\n  /**\n   * <p>The GUID for the customer-managed AWS KMS key to use for encryption. This value can\n   *             be a globally unique identifier, a fully specified ARN to either an alias or a key, or\n   *             an alias name prefixed by \"alias/\".You can also use a master key owned by Kinesis Data\n   *             Streams by specifying the alias <code>aws/kinesis</code>.</p>\n   *         <ul>\n   *             <li>\n   *                <p>Key ARN example:\n   *                         <code>arn:aws:kms:us-east-1:123456789012:key/12345678-1234-1234-1234-123456789012</code>\n   *                </p>\n   *             </li>\n   *             <li>\n   *                <p>Alias ARN example: <code>\n   *                     arn:aws:kms:us-east-1:123456789012:alias/MyAliasName</code>\n   *                </p>\n   *             </li>\n   *             <li>\n   *                <p>Globally unique key ID example: <code>12345678-1234-1234-1234-123456789012</code>\n   *                </p>\n   *             </li>\n   *             <li>\n   *                <p>Alias name example: <code>alias/MyAliasName</code>\n   *                </p>\n   *             </li>\n   *             <li>\n   *                <p>Master key owned by Kinesis Data Streams: <code>alias/aws/kinesis</code>\n   *                </p>\n   *             </li>\n   *          </ul>\n   */\n  KeyId?: string;\n\n  /**\n   * <p>The current status of the stream being described. The stream status is one of the following states:</p>\n   *             <ul>\n   *             <li>\n   *                     <p>\n   *                     <code>CREATING</code> - The stream is being created. Kinesis Data Streams\n   *                     immediately returns and sets <code>StreamStatus</code> to\n   *                     <code>CREATING</code>.</p>\n   *                 </li>\n   *             <li>\n   *                     <p>\n   *                     <code>DELETING</code> - The stream is being deleted. The specified stream is in\n   *                     the <code>DELETING</code> state until Kinesis Data Streams completes the\n   *                     deletion.</p>\n   *                 </li>\n   *             <li>\n   *                     <p>\n   *                         <code>ACTIVE</code> - The stream exists and is ready for read and write\n   *                         operations or deletion. You should perform read and write operations only on an\n   *                         <code>ACTIVE</code> stream.</p>\n   *                 </li>\n   *             <li>\n   *                     <p>\n   *                         <code>UPDATING</code> - Shards in the stream are being merged or split. Read and\n   *                         write operations continue to work while the stream is in the\n   *                         <code>UPDATING</code> state.</p>\n   *                 </li>\n   *          </ul>\n   */\n  StreamStatus: StreamStatus | string | undefined;\n\n  /**\n   * <p>The Amazon Resource Name (ARN) for the stream being described.</p>\n   */\n  StreamARN: string | undefined;\n\n  /**\n   * <p>The current retention period, in hours.</p>\n   */\n  RetentionPeriodHours: number | undefined;\n\n  /**\n   * <p>Represents the current enhanced monitoring settings of the stream.</p>\n   */\n  EnhancedMonitoring: EnhancedMetrics[] | undefined;\n\n  /**\n   * <p>The encryption type used. This value is one of the following:</p>\n   *         <ul>\n   *             <li>\n   *                <p>\n   *                   <code>KMS</code>\n   *                </p>\n   *             </li>\n   *             <li>\n   *                <p>\n   *                   <code>NONE</code>\n   *                </p>\n   *             </li>\n   *          </ul>\n   */\n  EncryptionType?: EncryptionType | string;\n\n  /**\n   * <p>The name of the stream being described.</p>\n   */\n  StreamName: string | undefined;\n\n  /**\n   * <p>The approximate time that the stream was created.</p>\n   */\n  StreamCreationTimestamp: Date | undefined;\n\n  /**\n   * <p>The number of enhanced fan-out consumers registered with the stream.</p>\n   */\n  ConsumerCount?: number;\n\n  /**\n   * <p>The number of open shards in the stream.</p>\n   */\n  OpenShardCount: number | undefined;\n}\n\nexport namespace StreamDescriptionSummary {\n  export const filterSensitiveLog = (obj: StreamDescriptionSummary): any => ({\n    ...obj,\n  });\n  export const isa = (o: any): o is StreamDescriptionSummary => __isa(o, \"StreamDescriptionSummary\");\n}\n\nexport enum StreamStatus {\n  ACTIVE = \"ACTIVE\",\n  CREATING = \"CREATING\",\n  DELETING = \"DELETING\",\n  UPDATING = \"UPDATING\",\n}\n\n/**\n * <p>After you call <a>SubscribeToShard</a>, Kinesis Data Streams sends events of this type to your consumer. </p>\n */\nexport interface SubscribeToShardEvent {\n  __type?: \"SubscribeToShardEvent\";\n  /**\n   * <p>The number of milliseconds the read records are from the tip of the stream, indicating how far behind current time the consumer is.\n   *             A value of zero indicates that record processing is caught up, and there are no new records to process at this moment.</p>\n   */\n  MillisBehindLatest: number | undefined;\n\n  /**\n   * <p></p>\n   */\n  Records: _Record[] | undefined;\n\n  /**\n   * <p>Use this as <code>StartingSequenceNumber</code> in the next call to <a>SubscribeToShard</a>.</p>\n   */\n  ContinuationSequenceNumber: string | undefined;\n}\n\nexport namespace SubscribeToShardEvent {\n  export const filterSensitiveLog = (obj: SubscribeToShardEvent): any => ({\n    ...obj,\n  });\n  export const isa = (o: any): o is SubscribeToShardEvent => __isa(o, \"SubscribeToShardEvent\");\n}\n\nexport type SubscribeToShardEventStream =\n  | SubscribeToShardEventStream.InternalFailureExceptionMember\n  | SubscribeToShardEventStream.KMSAccessDeniedExceptionMember\n  | SubscribeToShardEventStream.KMSDisabledExceptionMember\n  | SubscribeToShardEventStream.KMSInvalidStateExceptionMember\n  | SubscribeToShardEventStream.KMSNotFoundExceptionMember\n  | SubscribeToShardEventStream.KMSOptInRequiredMember\n  | SubscribeToShardEventStream.KMSThrottlingExceptionMember\n  | SubscribeToShardEventStream.ResourceInUseExceptionMember\n  | SubscribeToShardEventStream.ResourceNotFoundExceptionMember\n  | SubscribeToShardEventStream.SubscribeToShardEventMember\n  | SubscribeToShardEventStream.$UnknownMember;\n\nexport namespace SubscribeToShardEventStream {\n  interface $Base {\n    __type?: \"SubscribeToShardEventStream\";\n  }\n\n  /**\n   * <p>The request was denied due to request throttling. For more information about throttling, see <a href=\"https://docs.aws.amazon.com/kms/latest/developerguide/limits.html#requests-per-second\">Limits</a> in the\n   *             <i>AWS Key Management Service Developer Guide</i>.</p>\n   */\n  export interface KMSThrottlingExceptionMember extends $Base {\n    KMSThrottlingException: KMSThrottlingException;\n    KMSDisabledException?: never;\n    KMSAccessDeniedException?: never;\n    KMSInvalidStateException?: never;\n    KMSNotFoundException?: never;\n    ResourceNotFoundException?: never;\n    SubscribeToShardEvent?: never;\n    ResourceInUseException?: never;\n    InternalFailureException?: never;\n    KMSOptInRequired?: never;\n    $unknown?: never;\n  }\n\n  /**\n   * <p>The request was rejected because the specified customer master key (CMK) isn't\n   *             enabled.</p>\n   */\n  export interface KMSDisabledExceptionMember extends $Base {\n    KMSThrottlingException?: never;\n    KMSDisabledException: KMSDisabledException;\n    KMSAccessDeniedException?: never;\n    KMSInvalidStateException?: never;\n    KMSNotFoundException?: never;\n    ResourceNotFoundException?: never;\n    SubscribeToShardEvent?: never;\n    ResourceInUseException?: never;\n    InternalFailureException?: never;\n    KMSOptInRequired?: never;\n    $unknown?: never;\n  }\n\n  /**\n   * <p>The ciphertext references a key that doesn't exist or that you don't have access to.</p>\n   */\n  export interface KMSAccessDeniedExceptionMember extends $Base {\n    KMSThrottlingException?: never;\n    KMSDisabledException?: never;\n    KMSAccessDeniedException: KMSAccessDeniedException;\n    KMSInvalidStateException?: never;\n    KMSNotFoundException?: never;\n    ResourceNotFoundException?: never;\n    SubscribeToShardEvent?: never;\n    ResourceInUseException?: never;\n    InternalFailureException?: never;\n    KMSOptInRequired?: never;\n    $unknown?: never;\n  }\n\n  /**\n   * <p>The request was rejected because the state of the specified resource isn't valid for this request. For more information, see\n   *             <a href=\"https://docs.aws.amazon.com/kms/latest/developerguide/key-state.html\">How Key State Affects Use of a Customer Master Key</a> in the\n   *             <i>AWS Key Management Service Developer Guide</i>.</p>\n   */\n  export interface KMSInvalidStateExceptionMember extends $Base {\n    KMSThrottlingException?: never;\n    KMSDisabledException?: never;\n    KMSAccessDeniedException?: never;\n    KMSInvalidStateException: KMSInvalidStateException;\n    KMSNotFoundException?: never;\n    ResourceNotFoundException?: never;\n    SubscribeToShardEvent?: never;\n    ResourceInUseException?: never;\n    InternalFailureException?: never;\n    KMSOptInRequired?: never;\n    $unknown?: never;\n  }\n\n  /**\n   * <p>The request was rejected because the specified entity or resource can't be\n   *             found.</p>\n   */\n  export interface KMSNotFoundExceptionMember extends $Base {\n    KMSThrottlingException?: never;\n    KMSDisabledException?: never;\n    KMSAccessDeniedException?: never;\n    KMSInvalidStateException?: never;\n    KMSNotFoundException: KMSNotFoundException;\n    ResourceNotFoundException?: never;\n    SubscribeToShardEvent?: never;\n    ResourceInUseException?: never;\n    InternalFailureException?: never;\n    KMSOptInRequired?: never;\n    $unknown?: never;\n  }\n\n  /**\n   * <p>The requested resource could not be found. The stream might not be specified correctly.</p>\n   */\n  export interface ResourceNotFoundExceptionMember extends $Base {\n    KMSThrottlingException?: never;\n    KMSDisabledException?: never;\n    KMSAccessDeniedException?: never;\n    KMSInvalidStateException?: never;\n    KMSNotFoundException?: never;\n    ResourceNotFoundException: ResourceNotFoundException;\n    SubscribeToShardEvent?: never;\n    ResourceInUseException?: never;\n    InternalFailureException?: never;\n    KMSOptInRequired?: never;\n    $unknown?: never;\n  }\n\n  /**\n   * <p>After you call <a>SubscribeToShard</a>, Kinesis Data Streams sends events of this type to your consumer. </p>\n   */\n  export interface SubscribeToShardEventMember extends $Base {\n    KMSThrottlingException?: never;\n    KMSDisabledException?: never;\n    KMSAccessDeniedException?: never;\n    KMSInvalidStateException?: never;\n    KMSNotFoundException?: never;\n    ResourceNotFoundException?: never;\n    SubscribeToShardEvent: SubscribeToShardEvent;\n    ResourceInUseException?: never;\n    InternalFailureException?: never;\n    KMSOptInRequired?: never;\n    $unknown?: never;\n  }\n\n  /**\n   * <p>The resource is not available for this operation. For successful operation, the\n   *             resource must be in the <code>ACTIVE</code> state.</p>\n   */\n  export interface ResourceInUseExceptionMember extends $Base {\n    KMSThrottlingException?: never;\n    KMSDisabledException?: never;\n    KMSAccessDeniedException?: never;\n    KMSInvalidStateException?: never;\n    KMSNotFoundException?: never;\n    ResourceNotFoundException?: never;\n    SubscribeToShardEvent?: never;\n    ResourceInUseException: ResourceInUseException;\n    InternalFailureException?: never;\n    KMSOptInRequired?: never;\n    $unknown?: never;\n  }\n\n  export interface InternalFailureExceptionMember extends $Base {\n    KMSThrottlingException?: never;\n    KMSDisabledException?: never;\n    KMSAccessDeniedException?: never;\n    KMSInvalidStateException?: never;\n    KMSNotFoundException?: never;\n    ResourceNotFoundException?: never;\n    SubscribeToShardEvent?: never;\n    ResourceInUseException?: never;\n    InternalFailureException: InternalFailureException;\n    KMSOptInRequired?: never;\n    $unknown?: never;\n  }\n\n  /**\n   * <p>The AWS access key ID needs a subscription for the service.</p>\n   */\n  export interface KMSOptInRequiredMember extends $Base {\n    KMSThrottlingException?: never;\n    KMSDisabledException?: never;\n    KMSAccessDeniedException?: never;\n    KMSInvalidStateException?: never;\n    KMSNotFoundException?: never;\n    ResourceNotFoundException?: never;\n    SubscribeToShardEvent?: never;\n    ResourceInUseException?: never;\n    InternalFailureException?: never;\n    KMSOptInRequired: KMSOptInRequired;\n    $unknown?: never;\n  }\n\n  export interface $UnknownMember extends $Base {\n    KMSThrottlingException?: never;\n    KMSDisabledException?: never;\n    KMSAccessDeniedException?: never;\n    KMSInvalidStateException?: never;\n    KMSNotFoundException?: never;\n    ResourceNotFoundException?: never;\n    SubscribeToShardEvent?: never;\n    ResourceInUseException?: never;\n    InternalFailureException?: never;\n    KMSOptInRequired?: never;\n    $unknown: [string, any];\n  }\n\n  export interface Visitor<T> {\n    KMSThrottlingException: (value: KMSThrottlingException) => T;\n    KMSDisabledException: (value: KMSDisabledException) => T;\n    KMSAccessDeniedException: (value: KMSAccessDeniedException) => T;\n    KMSInvalidStateException: (value: KMSInvalidStateException) => T;\n    KMSNotFoundException: (value: KMSNotFoundException) => T;\n    ResourceNotFoundException: (value: ResourceNotFoundException) => T;\n    SubscribeToShardEvent: (value: SubscribeToShardEvent) => T;\n    ResourceInUseException: (value: ResourceInUseException) => T;\n    InternalFailureException: (value: InternalFailureException) => T;\n    KMSOptInRequired: (value: KMSOptInRequired) => T;\n    _: (name: string, value: any) => T;\n  }\n\n  export const visit = <T>(value: SubscribeToShardEventStream, visitor: Visitor<T>): T => {\n    if (value.KMSThrottlingException !== undefined) return visitor.KMSThrottlingException(value.KMSThrottlingException);\n    if (value.KMSDisabledException !== undefined) return visitor.KMSDisabledException(value.KMSDisabledException);\n    if (value.KMSAccessDeniedException !== undefined)\n      return visitor.KMSAccessDeniedException(value.KMSAccessDeniedException);\n    if (value.KMSInvalidStateException !== undefined)\n      return visitor.KMSInvalidStateException(value.KMSInvalidStateException);\n    if (value.KMSNotFoundException !== undefined) return visitor.KMSNotFoundException(value.KMSNotFoundException);\n    if (value.ResourceNotFoundException !== undefined)\n      return visitor.ResourceNotFoundException(value.ResourceNotFoundException);\n    if (value.SubscribeToShardEvent !== undefined) return visitor.SubscribeToShardEvent(value.SubscribeToShardEvent);\n    if (value.ResourceInUseException !== undefined) return visitor.ResourceInUseException(value.ResourceInUseException);\n    if (value.InternalFailureException !== undefined)\n      return visitor.InternalFailureException(value.InternalFailureException);\n    if (value.KMSOptInRequired !== undefined) return visitor.KMSOptInRequired(value.KMSOptInRequired);\n    return visitor._(value.$unknown[0], value.$unknown[1]);\n  };\n\n  export const filterSensitiveLog = (obj: SubscribeToShardEventStream): any => {\n    if (obj.KMSThrottlingException !== undefined)\n      return { KMSThrottlingException: KMSThrottlingException.filterSensitiveLog(obj.KMSThrottlingException) };\n    if (obj.KMSDisabledException !== undefined)\n      return { KMSDisabledException: KMSDisabledException.filterSensitiveLog(obj.KMSDisabledException) };\n    if (obj.KMSAccessDeniedException !== undefined)\n      return { KMSAccessDeniedException: KMSAccessDeniedException.filterSensitiveLog(obj.KMSAccessDeniedException) };\n    if (obj.KMSInvalidStateException !== undefined)\n      return { KMSInvalidStateException: KMSInvalidStateException.filterSensitiveLog(obj.KMSInvalidStateException) };\n    if (obj.KMSNotFoundException !== undefined)\n      return { KMSNotFoundException: KMSNotFoundException.filterSensitiveLog(obj.KMSNotFoundException) };\n    if (obj.ResourceNotFoundException !== undefined)\n      return { ResourceNotFoundException: ResourceNotFoundException.filterSensitiveLog(obj.ResourceNotFoundException) };\n    if (obj.SubscribeToShardEvent !== undefined)\n      return { SubscribeToShardEvent: SubscribeToShardEvent.filterSensitiveLog(obj.SubscribeToShardEvent) };\n    if (obj.ResourceInUseException !== undefined)\n      return { ResourceInUseException: ResourceInUseException.filterSensitiveLog(obj.ResourceInUseException) };\n    if (obj.InternalFailureException !== undefined)\n      return { InternalFailureException: InternalFailureException.filterSensitiveLog(obj.InternalFailureException) };\n    if (obj.KMSOptInRequired !== undefined)\n      return { KMSOptInRequired: KMSOptInRequired.filterSensitiveLog(obj.KMSOptInRequired) };\n    if (obj.$unknown !== undefined) return { [obj.$unknown[0]]: \"UNKNOWN\" };\n  };\n}\n\nexport interface SubscribeToShardInput {\n  __type?: \"SubscribeToShardInput\";\n  /**\n   * <p>For this parameter, use the value you obtained when you called <a>RegisterStreamConsumer</a>.</p>\n   */\n  ConsumerARN: string | undefined;\n\n  /**\n   * <p>The ID of the shard you want to subscribe to. To see a list of all the shards for a\n   *             given stream, use <a>ListShards</a>.</p>\n   */\n  ShardId: string | undefined;\n\n  StartingPosition: StartingPosition | undefined;\n}\n\nexport namespace SubscribeToShardInput {\n  export const filterSensitiveLog = (obj: SubscribeToShardInput): any => ({\n    ...obj,\n  });\n  export const isa = (o: any): o is SubscribeToShardInput => __isa(o, \"SubscribeToShardInput\");\n}\n\nexport interface SubscribeToShardOutput {\n  __type?: \"SubscribeToShardOutput\";\n  /**\n   * <p>The event stream that your consumer can use to read records from the shard.</p>\n   */\n  EventStream: AsyncIterable<SubscribeToShardEventStream> | undefined;\n}\n\nexport namespace SubscribeToShardOutput {\n  export const filterSensitiveLog = (obj: SubscribeToShardOutput): any => ({\n    ...obj,\n    ...(obj.EventStream && { EventStream: \"STREAMING_CONTENT\" }),\n  });\n  export const isa = (o: any): o is SubscribeToShardOutput => __isa(o, \"SubscribeToShardOutput\");\n}\n\n/**\n * <p>Metadata assigned to the stream, consisting of a key-value pair.</p>\n */\nexport interface Tag {\n  __type?: \"Tag\";\n  /**\n   * <p>A unique identifier for the tag. Maximum length: 128 characters. Valid characters: Unicode letters, digits, white space, _ . / = + - % @</p>\n   */\n  Key: string | undefined;\n\n  /**\n   * <p>An optional string, typically used to describe or define the tag. Maximum length: 256 characters. Valid characters: Unicode letters, digits, white space, _ . / = + - % @</p>\n   */\n  Value?: string;\n}\n\nexport namespace Tag {\n  export const filterSensitiveLog = (obj: Tag): any => ({\n    ...obj,\n  });\n  export const isa = (o: any): o is Tag => __isa(o, \"Tag\");\n}\n\nexport interface UpdateShardCountInput {\n  __type?: \"UpdateShardCountInput\";\n  /**\n   * <p>The name of the stream.</p>\n   */\n  StreamName: string | undefined;\n\n  /**\n   * <p>The new number of shards.</p>\n   */\n  TargetShardCount: number | undefined;\n\n  /**\n   * <p>The scaling type. Uniform scaling creates shards of equal size.</p>\n   */\n  ScalingType: ScalingType | string | undefined;\n}\n\nexport namespace UpdateShardCountInput {\n  export const filterSensitiveLog = (obj: UpdateShardCountInput): any => ({\n    ...obj,\n  });\n  export const isa = (o: any): o is UpdateShardCountInput => __isa(o, \"UpdateShardCountInput\");\n}\n\nexport interface UpdateShardCountOutput {\n  __type?: \"UpdateShardCountOutput\";\n  /**\n   * <p>The current number of shards.</p>\n   */\n  CurrentShardCount?: number;\n\n  /**\n   * <p>The name of the stream.</p>\n   */\n  StreamName?: string;\n\n  /**\n   * <p>The updated number of shards.</p>\n   */\n  TargetShardCount?: number;\n}\n\nexport namespace UpdateShardCountOutput {\n  export const filterSensitiveLog = (obj: UpdateShardCountOutput): any => ({\n    ...obj,\n  });\n  export const isa = (o: any): o is UpdateShardCountOutput => __isa(o, \"UpdateShardCountOutput\");\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}