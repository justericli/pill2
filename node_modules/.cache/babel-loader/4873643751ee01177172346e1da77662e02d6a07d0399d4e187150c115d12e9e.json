{"ast":null,"code":"import _createForOfIteratorHelper from \"/Users/ericli/Desktop/pill2/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport { isIpAddress } from \"../isIpAddress\";\nimport { isValidHostLabel } from \"../isValidHostLabel\";\nexport var isVirtualHostableS3Bucket = function isVirtualHostableS3Bucket(value) {\n  var allowSubDomains = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  if (allowSubDomains) {\n    var _iterator = _createForOfIteratorHelper(value.split(\".\")),\n      _step;\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var label = _step.value;\n        if (!isVirtualHostableS3Bucket(label)) {\n          return false;\n        }\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n    return true;\n  }\n  if (!isValidHostLabel(value)) {\n    return false;\n  }\n  if (value.length < 3 || value.length > 63) {\n    return false;\n  }\n  if (value !== value.toLowerCase()) {\n    return false;\n  }\n  if (isIpAddress(value)) {\n    return false;\n  }\n  return true;\n};","map":{"version":3,"names":["isIpAddress","isValidHostLabel","isVirtualHostableS3Bucket","value","allowSubDomains","arguments","length","undefined","_iterator","_createForOfIteratorHelper","split","_step","s","n","done","label","err","e","f","toLowerCase"],"sources":["/Users/ericli/Desktop/pill2/node_modules/@aws-sdk/util-endpoints/dist-es/lib/aws/isVirtualHostableS3Bucket.js"],"sourcesContent":["import { isIpAddress } from \"../isIpAddress\";\nimport { isValidHostLabel } from \"../isValidHostLabel\";\nexport const isVirtualHostableS3Bucket = (value, allowSubDomains = false) => {\n    if (allowSubDomains) {\n        for (const label of value.split(\".\")) {\n            if (!isVirtualHostableS3Bucket(label)) {\n                return false;\n            }\n        }\n        return true;\n    }\n    if (!isValidHostLabel(value)) {\n        return false;\n    }\n    if (value.length < 3 || value.length > 63) {\n        return false;\n    }\n    if (value !== value.toLowerCase()) {\n        return false;\n    }\n    if (isIpAddress(value)) {\n        return false;\n    }\n    return true;\n};\n"],"mappings":";AAAA,SAASA,WAAW,QAAQ,gBAAgB;AAC5C,SAASC,gBAAgB,QAAQ,qBAAqB;AACtD,OAAO,IAAMC,yBAAyB,GAAG,SAA5BA,yBAAyBA,CAAIC,KAAK,EAA8B;EAAA,IAA5BC,eAAe,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,KAAK;EACpE,IAAID,eAAe,EAAE;IAAA,IAAAI,SAAA,GAAAC,0BAAA,CACGN,KAAK,CAACO,KAAK,CAAC,GAAG,CAAC;MAAAC,KAAA;IAAA;MAApC,KAAAH,SAAA,CAAAI,CAAA,MAAAD,KAAA,GAAAH,SAAA,CAAAK,CAAA,IAAAC,IAAA,GAAsC;QAAA,IAA3BC,KAAK,GAAAJ,KAAA,CAAAR,KAAA;QACZ,IAAI,CAACD,yBAAyB,CAACa,KAAK,CAAC,EAAE;UACnC,OAAO,KAAK;QAChB;MACJ;IAAC,SAAAC,GAAA;MAAAR,SAAA,CAAAS,CAAA,CAAAD,GAAA;IAAA;MAAAR,SAAA,CAAAU,CAAA;IAAA;IACD,OAAO,IAAI;EACf;EACA,IAAI,CAACjB,gBAAgB,CAACE,KAAK,CAAC,EAAE;IAC1B,OAAO,KAAK;EAChB;EACA,IAAIA,KAAK,CAACG,MAAM,GAAG,CAAC,IAAIH,KAAK,CAACG,MAAM,GAAG,EAAE,EAAE;IACvC,OAAO,KAAK;EAChB;EACA,IAAIH,KAAK,KAAKA,KAAK,CAACgB,WAAW,EAAE,EAAE;IAC/B,OAAO,KAAK;EAChB;EACA,IAAInB,WAAW,CAACG,KAAK,CAAC,EAAE;IACpB,OAAO,KAAK;EAChB;EACA,OAAO,IAAI;AACf,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}