{"ast":null,"code":"import _regeneratorRuntime from \"/Users/ericli/Desktop/pill2/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/ericli/Desktop/pill2/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nexport var getAwsChunkedEncodingStream = function getAwsChunkedEncodingStream(readableStream, options) {\n  var base64Encoder = options.base64Encoder,\n    bodyLengthChecker = options.bodyLengthChecker,\n    checksumAlgorithmFn = options.checksumAlgorithmFn,\n    checksumLocationName = options.checksumLocationName,\n    streamHasher = options.streamHasher;\n  var checksumRequired = base64Encoder !== undefined && bodyLengthChecker !== undefined && checksumAlgorithmFn !== undefined && checksumLocationName !== undefined && streamHasher !== undefined;\n  var digest = checksumRequired ? streamHasher(checksumAlgorithmFn, readableStream) : undefined;\n  var reader = readableStream.getReader();\n  return new ReadableStream({\n    pull: function pull(controller) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var _yield$reader$read, value, done, checksum;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return reader.read();\n            case 2:\n              _yield$reader$read = _context.sent;\n              value = _yield$reader$read.value;\n              done = _yield$reader$read.done;\n              if (!done) {\n                _context.next = 18;\n                break;\n              }\n              controller.enqueue(\"0\\r\\n\");\n              if (!checksumRequired) {\n                _context.next = 15;\n                break;\n              }\n              _context.t0 = base64Encoder;\n              _context.next = 11;\n              return digest;\n            case 11:\n              _context.t1 = _context.sent;\n              checksum = (0, _context.t0)(_context.t1);\n              controller.enqueue(\"\".concat(checksumLocationName, \":\").concat(checksum, \"\\r\\n\"));\n              controller.enqueue(\"\\r\\n\");\n            case 15:\n              controller.close();\n              _context.next = 19;\n              break;\n            case 18:\n              controller.enqueue(\"\".concat((bodyLengthChecker(value) || 0).toString(16), \"\\r\\n\").concat(value, \"\\r\\n\"));\n            case 19:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      }))();\n    }\n  });\n};","map":{"version":3,"names":["getAwsChunkedEncodingStream","readableStream","options","base64Encoder","bodyLengthChecker","checksumAlgorithmFn","checksumLocationName","streamHasher","checksumRequired","undefined","digest","reader","getReader","ReadableStream","pull","controller","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_yield$reader$read","value","done","checksum","wrap","_callee$","_context","prev","next","read","sent","enqueue","t0","t1","concat","close","toString","stop"],"sources":["/Users/ericli/Desktop/pill2/node_modules/@aws-sdk/util-stream-browser/dist-es/getAwsChunkedEncodingStream.js"],"sourcesContent":["export const getAwsChunkedEncodingStream = (readableStream, options) => {\n    const { base64Encoder, bodyLengthChecker, checksumAlgorithmFn, checksumLocationName, streamHasher } = options;\n    const checksumRequired = base64Encoder !== undefined &&\n        bodyLengthChecker !== undefined &&\n        checksumAlgorithmFn !== undefined &&\n        checksumLocationName !== undefined &&\n        streamHasher !== undefined;\n    const digest = checksumRequired ? streamHasher(checksumAlgorithmFn, readableStream) : undefined;\n    const reader = readableStream.getReader();\n    return new ReadableStream({\n        async pull(controller) {\n            const { value, done } = await reader.read();\n            if (done) {\n                controller.enqueue(`0\\r\\n`);\n                if (checksumRequired) {\n                    const checksum = base64Encoder(await digest);\n                    controller.enqueue(`${checksumLocationName}:${checksum}\\r\\n`);\n                    controller.enqueue(`\\r\\n`);\n                }\n                controller.close();\n            }\n            else {\n                controller.enqueue(`${(bodyLengthChecker(value) || 0).toString(16)}\\r\\n${value}\\r\\n`);\n            }\n        },\n    });\n};\n"],"mappings":";;AAAA,OAAO,IAAMA,2BAA2B,GAAG,SAA9BA,2BAA2BA,CAAIC,cAAc,EAAEC,OAAO,EAAK;EACpE,IAAQC,aAAa,GAAiFD,OAAO,CAArGC,aAAa;IAAEC,iBAAiB,GAA8DF,OAAO,CAAtFE,iBAAiB;IAAEC,mBAAmB,GAAyCH,OAAO,CAAnEG,mBAAmB;IAAEC,oBAAoB,GAAmBJ,OAAO,CAA9CI,oBAAoB;IAAEC,YAAY,GAAKL,OAAO,CAAxBK,YAAY;EACjG,IAAMC,gBAAgB,GAAGL,aAAa,KAAKM,SAAS,IAChDL,iBAAiB,KAAKK,SAAS,IAC/BJ,mBAAmB,KAAKI,SAAS,IACjCH,oBAAoB,KAAKG,SAAS,IAClCF,YAAY,KAAKE,SAAS;EAC9B,IAAMC,MAAM,GAAGF,gBAAgB,GAAGD,YAAY,CAACF,mBAAmB,EAAEJ,cAAc,CAAC,GAAGQ,SAAS;EAC/F,IAAME,MAAM,GAAGV,cAAc,CAACW,SAAS,EAAE;EACzC,OAAO,IAAIC,cAAc,CAAC;IAChBC,IAAI,WAAAA,KAACC,UAAU,EAAE;MAAA,OAAAC,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,UAAAC,QAAA;QAAA,IAAAC,kBAAA,EAAAC,KAAA,EAAAC,IAAA,EAAAC,QAAA;QAAA,OAAAN,mBAAA,GAAAO,IAAA,UAAAC,SAAAC,QAAA;UAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;YAAA;cAAAF,QAAA,CAAAE,IAAA;cAAA,OACWjB,MAAM,CAACkB,IAAI,EAAE;YAAA;cAAAT,kBAAA,GAAAM,QAAA,CAAAI,IAAA;cAAnCT,KAAK,GAAAD,kBAAA,CAALC,KAAK;cAAEC,IAAI,GAAAF,kBAAA,CAAJE,IAAI;cAAA,KACfA,IAAI;gBAAAI,QAAA,CAAAE,IAAA;gBAAA;cAAA;cACJb,UAAU,CAACgB,OAAO,SAAS;cAAC,KACxBvB,gBAAgB;gBAAAkB,QAAA,CAAAE,IAAA;gBAAA;cAAA;cAAAF,QAAA,CAAAM,EAAA,GACC7B,aAAa;cAAAuB,QAAA,CAAAE,IAAA;cAAA,OAAOlB,MAAM;YAAA;cAAAgB,QAAA,CAAAO,EAAA,GAAAP,QAAA,CAAAI,IAAA;cAArCP,QAAQ,OAAAG,QAAA,CAAAM,EAAA,EAAAN,QAAA,CAAAO,EAAA;cACdlB,UAAU,CAACgB,OAAO,IAAAG,MAAA,CAAI5B,oBAAoB,OAAA4B,MAAA,CAAIX,QAAQ,UAAO;cAC7DR,UAAU,CAACgB,OAAO,QAAQ;YAAC;cAE/BhB,UAAU,CAACoB,KAAK,EAAE;cAACT,QAAA,CAAAE,IAAA;cAAA;YAAA;cAGnBb,UAAU,CAACgB,OAAO,IAAAG,MAAA,CAAI,CAAC9B,iBAAiB,CAACiB,KAAK,CAAC,IAAI,CAAC,EAAEe,QAAQ,CAAC,EAAE,CAAC,UAAAF,MAAA,CAAOb,KAAK,UAAO;YAAC;YAAA;cAAA,OAAAK,QAAA,CAAAW,IAAA;UAAA;QAAA,GAAAlB,OAAA;MAAA;IAE9F;EACJ,CAAC,CAAC;AACN,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}