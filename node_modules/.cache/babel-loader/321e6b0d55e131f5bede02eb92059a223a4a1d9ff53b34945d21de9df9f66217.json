{"ast":null,"code":"import _regeneratorRuntime from \"/Users/ericli/Desktop/pill2/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/ericli/Desktop/pill2/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { HttpResponse } from \"@aws-sdk/protocol-http\";\nexport var throw200ExceptionsMiddleware = function throw200ExceptionsMiddleware(config) {\n  return function (next) {\n    return /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(args) {\n        var result, response, statusCode, body, bodyBytes, bodyString, err;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return next(args);\n            case 2:\n              result = _context.sent;\n              response = result.response;\n              if (HttpResponse.isInstance(response)) {\n                _context.next = 6;\n                break;\n              }\n              return _context.abrupt(\"return\", result);\n            case 6:\n              statusCode = response.statusCode, body = response.body;\n              if (!(statusCode < 200 || statusCode >= 300)) {\n                _context.next = 9;\n                break;\n              }\n              return _context.abrupt(\"return\", result);\n            case 9:\n              _context.next = 11;\n              return collectBody(body, config);\n            case 11:\n              bodyBytes = _context.sent;\n              _context.next = 14;\n              return collectBodyString(bodyBytes, config);\n            case 14:\n              bodyString = _context.sent;\n              if (!(bodyBytes.length === 0)) {\n                _context.next = 19;\n                break;\n              }\n              err = new Error(\"S3 aborted request\");\n              err.name = \"InternalError\";\n              throw err;\n            case 19:\n              if (bodyString && bodyString.match(\"<Error>\")) {\n                response.statusCode = 400;\n              }\n              response.body = bodyBytes;\n              return _context.abrupt(\"return\", result);\n            case 22:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      }));\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n  };\n};\nvar collectBody = function collectBody() {\n  var streamBody = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new Uint8Array();\n  var context = arguments.length > 1 ? arguments[1] : undefined;\n  if (streamBody instanceof Uint8Array) {\n    return Promise.resolve(streamBody);\n  }\n  return context.streamCollector(streamBody) || Promise.resolve(new Uint8Array());\n};\nvar collectBodyString = function collectBodyString(streamBody, context) {\n  return collectBody(streamBody, context).then(function (body) {\n    return context.utf8Encoder(body);\n  });\n};\nexport var throw200ExceptionsMiddlewareOptions = {\n  relation: \"after\",\n  toMiddleware: \"deserializerMiddleware\",\n  tags: [\"THROW_200_EXCEPTIONS\", \"S3\"],\n  name: \"throw200ExceptionsMiddleware\",\n  override: true\n};\nexport var getThrow200ExceptionsPlugin = function getThrow200ExceptionsPlugin(config) {\n  return {\n    applyToStack: function applyToStack(clientStack) {\n      clientStack.addRelativeTo(throw200ExceptionsMiddleware(config), throw200ExceptionsMiddlewareOptions);\n    }\n  };\n};","map":{"version":3,"names":["HttpResponse","throw200ExceptionsMiddleware","config","next","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","args","result","response","statusCode","body","bodyBytes","bodyString","err","wrap","_callee$","_context","prev","sent","isInstance","abrupt","collectBody","collectBodyString","length","Error","name","match","stop","_x","apply","arguments","streamBody","undefined","Uint8Array","context","Promise","resolve","streamCollector","then","utf8Encoder","throw200ExceptionsMiddlewareOptions","relation","toMiddleware","tags","override","getThrow200ExceptionsPlugin","applyToStack","clientStack","addRelativeTo"],"sources":["/Users/ericli/Desktop/pill2/node_modules/@aws-sdk/middleware-sdk-s3/dist-es/throw-200-exceptions.js"],"sourcesContent":["import { HttpResponse } from \"@aws-sdk/protocol-http\";\nexport const throw200ExceptionsMiddleware = (config) => (next) => async (args) => {\n    const result = await next(args);\n    const { response } = result;\n    if (!HttpResponse.isInstance(response))\n        return result;\n    const { statusCode, body } = response;\n    if (statusCode < 200 || statusCode >= 300)\n        return result;\n    const bodyBytes = await collectBody(body, config);\n    const bodyString = await collectBodyString(bodyBytes, config);\n    if (bodyBytes.length === 0) {\n        const err = new Error(\"S3 aborted request\");\n        err.name = \"InternalError\";\n        throw err;\n    }\n    if (bodyString && bodyString.match(\"<Error>\")) {\n        response.statusCode = 400;\n    }\n    response.body = bodyBytes;\n    return result;\n};\nconst collectBody = (streamBody = new Uint8Array(), context) => {\n    if (streamBody instanceof Uint8Array) {\n        return Promise.resolve(streamBody);\n    }\n    return context.streamCollector(streamBody) || Promise.resolve(new Uint8Array());\n};\nconst collectBodyString = (streamBody, context) => collectBody(streamBody, context).then((body) => context.utf8Encoder(body));\nexport const throw200ExceptionsMiddlewareOptions = {\n    relation: \"after\",\n    toMiddleware: \"deserializerMiddleware\",\n    tags: [\"THROW_200_EXCEPTIONS\", \"S3\"],\n    name: \"throw200ExceptionsMiddleware\",\n    override: true,\n};\nexport const getThrow200ExceptionsPlugin = (config) => ({\n    applyToStack: (clientStack) => {\n        clientStack.addRelativeTo(throw200ExceptionsMiddleware(config), throw200ExceptionsMiddlewareOptions);\n    },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}