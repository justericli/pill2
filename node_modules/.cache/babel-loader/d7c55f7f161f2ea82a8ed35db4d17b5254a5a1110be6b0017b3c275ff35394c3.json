{"ast":null,"code":"import _regeneratorRuntime from \"/Users/ericli/Desktop/pill2/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _defineProperty from \"/Users/ericli/Desktop/pill2/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _objectSpread from \"/Users/ericli/Desktop/pill2/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _asyncToGenerator from \"/Users/ericli/Desktop/pill2/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nexport function ssecMiddleware(options) {\n  return function (next) {\n    return /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(args) {\n        var input, properties, _i, _properties, prop, value, _objectSpread2, valueView, encoded, hash;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              input = _objectSpread({}, args.input);\n              properties = [{\n                target: \"SSECustomerKey\",\n                hash: \"SSECustomerKeyMD5\"\n              }, {\n                target: \"CopySourceSSECustomerKey\",\n                hash: \"CopySourceSSECustomerKeyMD5\"\n              }];\n              _i = 0, _properties = properties;\n            case 3:\n              if (!(_i < _properties.length)) {\n                _context.next = 30;\n                break;\n              }\n              prop = _properties[_i];\n              value = input[prop.target];\n              if (!value) {\n                _context.next = 27;\n                break;\n              }\n              valueView = ArrayBuffer.isView(value) ? new Uint8Array(value.buffer, value.byteOffset, value.byteLength) : typeof value === \"string\" ? options.utf8Decoder(value) : new Uint8Array(value);\n              encoded = options.base64Encoder(valueView);\n              hash = new options.md5();\n              hash.update(valueView);\n              _context.t0 = _objectSpread;\n              _context.t1 = _objectSpread({}, input);\n              _context.t2 = {};\n              _objectSpread2 = {};\n              _defineProperty(_objectSpread2, prop.target, encoded);\n              _context.t3 = _defineProperty;\n              _context.t4 = _objectSpread2;\n              _context.t5 = prop.hash;\n              _context.t6 = options;\n              _context.next = 22;\n              return hash.digest();\n            case 22:\n              _context.t7 = _context.sent;\n              _context.t8 = _context.t6.base64Encoder.call(_context.t6, _context.t7);\n              (0, _context.t3)(_context.t4, _context.t5, _context.t8);\n              _context.t9 = _objectSpread2;\n              input = (0, _context.t0)(_context.t1, _context.t2, _context.t9);\n            case 27:\n              _i++;\n              _context.next = 3;\n              break;\n            case 30:\n              return _context.abrupt(\"return\", next(_objectSpread(_objectSpread({}, args), {}, {\n                input: input\n              })));\n            case 31:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      }));\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n  };\n}\nexport var ssecMiddlewareOptions = {\n  name: \"ssecMiddleware\",\n  step: \"initialize\",\n  tags: [\"SSE\"],\n  override: true\n};\nexport var getSsecPlugin = function getSsecPlugin(config) {\n  return {\n    applyToStack: function applyToStack(clientStack) {\n      clientStack.add(ssecMiddleware(config), ssecMiddlewareOptions);\n    }\n  };\n};","map":{"version":3,"names":["ssecMiddleware","options","next","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","args","input","properties","_i","_properties","prop","value","_objectSpread2","valueView","encoded","hash","wrap","_callee$","_context","prev","_objectSpread","target","length","ArrayBuffer","isView","Uint8Array","buffer","byteOffset","byteLength","utf8Decoder","base64Encoder","md5","update","t0","t1","t2","_defineProperty","t3","t4","t5","t6","digest","t7","sent","t8","call","t9","abrupt","stop","_x","apply","arguments","ssecMiddlewareOptions","name","step","tags","override","getSsecPlugin","config","applyToStack","clientStack","add"],"sources":["/Users/ericli/Desktop/pill2/node_modules/@aws-sdk/middleware-ssec/dist-es/index.js"],"sourcesContent":["export function ssecMiddleware(options) {\n    return (next) => async (args) => {\n        let input = { ...args.input };\n        const properties = [\n            {\n                target: \"SSECustomerKey\",\n                hash: \"SSECustomerKeyMD5\",\n            },\n            {\n                target: \"CopySourceSSECustomerKey\",\n                hash: \"CopySourceSSECustomerKeyMD5\",\n            },\n        ];\n        for (const prop of properties) {\n            const value = input[prop.target];\n            if (value) {\n                const valueView = ArrayBuffer.isView(value)\n                    ? new Uint8Array(value.buffer, value.byteOffset, value.byteLength)\n                    : typeof value === \"string\"\n                        ? options.utf8Decoder(value)\n                        : new Uint8Array(value);\n                const encoded = options.base64Encoder(valueView);\n                const hash = new options.md5();\n                hash.update(valueView);\n                input = {\n                    ...input,\n                    [prop.target]: encoded,\n                    [prop.hash]: options.base64Encoder(await hash.digest()),\n                };\n            }\n        }\n        return next({\n            ...args,\n            input,\n        });\n    };\n}\nexport const ssecMiddlewareOptions = {\n    name: \"ssecMiddleware\",\n    step: \"initialize\",\n    tags: [\"SSE\"],\n    override: true,\n};\nexport const getSsecPlugin = (config) => ({\n    applyToStack: (clientStack) => {\n        clientStack.add(ssecMiddleware(config), ssecMiddlewareOptions);\n    },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}