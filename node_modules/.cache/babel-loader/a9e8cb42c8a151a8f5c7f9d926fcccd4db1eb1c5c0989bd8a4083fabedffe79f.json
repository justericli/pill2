{"ast":null,"code":"var _jsxFileName = \"/Users/ericli/Desktop/pill2/src/components/Forms/ListingForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Dropzone from \"react-dropzone\";\nimport { S3Client, PutObjectCommand } from \"@aws-sdk/client-s3\";\nimport { BsCloudUpload } from \"react-icons/bs\"; // Import the desired icon\n\n// Configure the AWS SDK\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst s3 = new S3Client({\n  region: \"us-east-1\",\n  // Replace with your desired region\n  credentials: {\n    accessKeyId: \"AKIA2AJRN6P67CIV6TTD\",\n    secretAccessKey: \"ZA/r6XSUs2GdDq5Io3ryjJolRvp31WMvIMKj9pRp\"\n  }\n});\nconst ImageUpload = () => {\n  _s();\n  const [selectedFile, setSelectedFile] = useState(null);\n  const handleFileDrop = acceptedFiles => {\n    setSelectedFile(acceptedFiles[0]);\n  };\n  const handleUpload = async () => {\n    if (selectedFile) {\n      const params = {\n        Bucket: \"pilli-storage-f68b2ca801743-dev\",\n        Key: selectedFile.name,\n        Body: selectedFile,\n        ACL: \"public-read\" // Set the desired access control level for the uploaded image\n      };\n\n      try {\n        const data = await s3.send(new PutObjectCommand(params));\n        console.log(\"Image uploaded successfully:\", data);\n        // Perform any further actions after successful image upload\n      } catch (err) {\n        console.log(\"Error:\", err);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      height: \"100vh\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Dropzone, {\n        onDrop: handleFileDrop,\n        children: _ref => {\n          let {\n            getRootProps,\n            getInputProps\n          } = _ref;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            ...getRootProps(),\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              ...getInputProps()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 15\n            }, this), selectedFile ? /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"Selected file: \", selectedFile.name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                children: \"Create a new listing\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(BsCloudUpload, {\n                size: 48\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 19\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n                children: \"Drag and drop an image here or click to select\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleUpload,\n        children: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(ImageUpload, \"cz3B5sQOxlrekAnUFUPeMaA2gqY=\");\n_c = ImageUpload;\nexport default ImageUpload;\nvar _c;\n$RefreshReg$(_c, \"ImageUpload\");","map":{"version":3,"names":["React","useState","Dropzone","S3Client","PutObjectCommand","BsCloudUpload","jsxDEV","_jsxDEV","s3","region","credentials","accessKeyId","secretAccessKey","ImageUpload","_s","selectedFile","setSelectedFile","handleFileDrop","acceptedFiles","handleUpload","params","Bucket","Key","name","Body","ACL","data","send","console","log","err","style","display","justifyContent","alignItems","height","children","onDrop","_ref","getRootProps","getInputProps","fileName","_jsxFileName","lineNumber","columnNumber","size","onClick","_c","$RefreshReg$"],"sources":["/Users/ericli/Desktop/pill2/src/components/Forms/ListingForm.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport Dropzone from \"react-dropzone\";\nimport { S3Client, PutObjectCommand } from \"@aws-sdk/client-s3\";\nimport { BsCloudUpload } from \"react-icons/bs\"; // Import the desired icon\n\n// Configure the AWS SDK\nconst s3 = new S3Client({\n  region: \"us-east-1\", // Replace with your desired region\n  credentials: {\n    accessKeyId: \"AKIA2AJRN6P67CIV6TTD\",\n    secretAccessKey: \"ZA/r6XSUs2GdDq5Io3ryjJolRvp31WMvIMKj9pRp\",\n  },\n});\n\nconst ImageUpload = () => {\n  const [selectedFile, setSelectedFile] = useState(null);\n\n  const handleFileDrop = (acceptedFiles) => {\n    setSelectedFile(acceptedFiles[0]);\n  };\n\n  const handleUpload = async () => {\n    if (selectedFile) {\n      const params = {\n        Bucket: \"pilli-storage-f68b2ca801743-dev\",\n        Key: selectedFile.name,\n        Body: selectedFile,\n        ACL: \"public-read\", // Set the desired access control level for the uploaded image\n      };\n\n      try {\n        const data = await s3.send(new PutObjectCommand(params));\n        console.log(\"Image uploaded successfully:\", data);\n        // Perform any further actions after successful image upload\n      } catch (err) {\n        console.log(\"Error:\", err);\n      }\n    }\n  };\n\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        height: \"100vh\",\n      }}\n    >\n      <div>\n        <Dropzone onDrop={handleFileDrop}>\n          {({ getRootProps, getInputProps }) => (\n            <div {...getRootProps()}>\n              <input {...getInputProps()} />\n              {selectedFile ? (\n                <div>Selected file: {selectedFile.name}</div>\n              ) : (\n                <div>\n                  <h1>Create a new listing</h1>\n                  <BsCloudUpload size={48} /> {/* Render the icon */}\n                  <div>Drag and drop an image here or click to select</div>\n                </div>\n              )}\n            </div>\n          )}\n        </Dropzone>\n        <button onClick={handleUpload}>Upload</button>\n      </div>\n    </div>\n  );\n};\n\nexport default ImageUpload;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}