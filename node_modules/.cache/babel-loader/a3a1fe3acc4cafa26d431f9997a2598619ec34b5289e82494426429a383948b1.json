{"ast":null,"code":"import _objectSpread from \"/Users/ericli/Desktop/pill2/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport { evaluateConditions } from \"./evaluateConditions\";\nimport { evaluateRules } from \"./evaluateRules\";\nexport var evaluateTreeRule = function evaluateTreeRule(treeRule, options) {\n  var conditions = treeRule.conditions,\n    rules = treeRule.rules;\n  var _evaluateConditions = evaluateConditions(conditions, options),\n    result = _evaluateConditions.result,\n    referenceRecord = _evaluateConditions.referenceRecord;\n  if (!result) {\n    return;\n  }\n  return evaluateRules(rules, _objectSpread(_objectSpread({}, options), {}, {\n    referenceRecord: _objectSpread(_objectSpread({}, options.referenceRecord), referenceRecord)\n  }));\n};","map":{"version":3,"names":["evaluateConditions","evaluateRules","evaluateTreeRule","treeRule","options","conditions","rules","_evaluateConditions","result","referenceRecord","_objectSpread"],"sources":["/Users/ericli/Desktop/pill2/node_modules/@aws-sdk/util-endpoints/dist-es/utils/evaluateTreeRule.js"],"sourcesContent":["import { evaluateConditions } from \"./evaluateConditions\";\nimport { evaluateRules } from \"./evaluateRules\";\nexport const evaluateTreeRule = (treeRule, options) => {\n    const { conditions, rules } = treeRule;\n    const { result, referenceRecord } = evaluateConditions(conditions, options);\n    if (!result) {\n        return;\n    }\n    return evaluateRules(rules, {\n        ...options,\n        referenceRecord: { ...options.referenceRecord, ...referenceRecord },\n    });\n};\n"],"mappings":";AAAA,SAASA,kBAAkB,QAAQ,sBAAsB;AACzD,SAASC,aAAa,QAAQ,iBAAiB;AAC/C,OAAO,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAgBA,CAAIC,QAAQ,EAAEC,OAAO,EAAK;EACnD,IAAQC,UAAU,GAAYF,QAAQ,CAA9BE,UAAU;IAAEC,KAAK,GAAKH,QAAQ,CAAlBG,KAAK;EACzB,IAAAC,mBAAA,GAAoCP,kBAAkB,CAACK,UAAU,EAAED,OAAO,CAAC;IAAnEI,MAAM,GAAAD,mBAAA,CAANC,MAAM;IAAEC,eAAe,GAAAF,mBAAA,CAAfE,eAAe;EAC/B,IAAI,CAACD,MAAM,EAAE;IACT;EACJ;EACA,OAAOP,aAAa,CAACK,KAAK,EAAAI,aAAA,CAAAA,aAAA,KACnBN,OAAO;IACVK,eAAe,EAAAC,aAAA,CAAAA,aAAA,KAAON,OAAO,CAACK,eAAe,GAAKA,eAAe;EAAE,GACrE;AACN,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}