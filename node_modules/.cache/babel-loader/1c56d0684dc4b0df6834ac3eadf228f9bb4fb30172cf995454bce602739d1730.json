{"ast":null,"code":"/*\n * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n      label: 0,\n      sent: function () {\n        if (t[0] & 1) throw t[1];\n        return t[1];\n      },\n      trys: [],\n      ops: []\n    },\n    f,\n    y,\n    t,\n    g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n        case 7:\n          op = _.ops.pop();\n          _.trys.pop();\n          continue;\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n            _.ops.push(op);\n            break;\n          }\n          if (t[2]) _.ops.pop();\n          _.trys.pop();\n          continue;\n      }\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\nimport { Amplify, ConsoleLogger as Logger, Hub, Parser } from '@aws-amplify/core';\nimport { AWSPinpointProvider } from './Providers/AWSPinpointProvider';\nimport { PageViewTracker, EventTracker, SessionTracker } from './trackers';\nvar logger = new Logger('AnalyticsClass');\nvar AMPLIFY_SYMBOL = typeof Symbol !== 'undefined' && typeof Symbol.for === 'function' ? Symbol.for('amplify_default') : '@@amplify_default';\nvar dispatchAnalyticsEvent = function (event, data, message) {\n  Hub.dispatch('analytics', {\n    event: event,\n    data: data,\n    message: message\n  }, 'Analytics', AMPLIFY_SYMBOL);\n};\nvar trackers = {\n  pageView: PageViewTracker,\n  event: EventTracker,\n  session: SessionTracker\n};\nvar _instance = null;\n/**\n * Provide mobile analytics client functions\n */\nvar AnalyticsClass = /** @class */function () {\n  /**\n   * Initialize Analtyics\n   * @param config - Configuration of the Analytics\n   */\n  function AnalyticsClass() {\n    this._config = {};\n    this._pluggables = [];\n    this._disabled = false;\n    this._trackers = {};\n    _instance = this;\n    this.record = this.record.bind(this);\n    Hub.listen('auth', listener);\n    Hub.listen('storage', listener);\n    Hub.listen('analytics', listener);\n  }\n  AnalyticsClass.prototype.getModuleName = function () {\n    return 'Analytics';\n  };\n  /**\n   * configure Analytics\n   * @param {Object} config - Configuration of the Analytics\n   */\n  AnalyticsClass.prototype.configure = function (config) {\n    var _this = this;\n    if (!config) return this._config;\n    logger.debug('configure Analytics', config);\n    var amplifyConfig = Parser.parseMobilehubConfig(config);\n    this._config = Object.assign({}, this._config, amplifyConfig.Analytics, config);\n    if (this._config['disabled']) {\n      this._disabled = true;\n    }\n    this._pluggables.forEach(function (pluggable) {\n      // for backward compatibility\n      var providerConfig = pluggable.getProviderName() === 'AWSPinpoint' && !_this._config['AWSPinpoint'] ? _this._config : _this._config[pluggable.getProviderName()];\n      pluggable.configure(__assign({\n        disabled: _this._config['disabled']\n      }, providerConfig));\n    });\n    if (this._pluggables.length === 0) {\n      this.addPluggable(new AWSPinpointProvider());\n    }\n    // turn on the autoSessionRecord if not specified\n    if (this._config['autoSessionRecord'] === undefined) {\n      this._config['autoSessionRecord'] = true;\n    }\n    dispatchAnalyticsEvent('configured', null, \"The Analytics category has been configured successfully\");\n    logger.debug('current configuration', this._config);\n    return this._config;\n  };\n  /**\n   * add plugin into Analytics category\n   * @param {Object} pluggable - an instance of the plugin\n   */\n  AnalyticsClass.prototype.addPluggable = function (pluggable) {\n    if (pluggable && pluggable.getCategory() === 'Analytics') {\n      this._pluggables.push(pluggable);\n      // for backward compatibility\n      var providerConfig = pluggable.getProviderName() === 'AWSPinpoint' && !this._config['AWSPinpoint'] ? this._config : this._config[pluggable.getProviderName()];\n      var config = __assign({\n        disabled: this._config['disabled']\n      }, providerConfig);\n      pluggable.configure(config);\n      return config;\n    }\n  };\n  /**\n   * Get the plugin object\n   * @param providerName - the name of the plugin\n   */\n  AnalyticsClass.prototype.getPluggable = function (providerName) {\n    for (var i = 0; i < this._pluggables.length; i += 1) {\n      var pluggable = this._pluggables[i];\n      if (pluggable.getProviderName() === providerName) {\n        return pluggable;\n      }\n    }\n    logger.debug('No plugin found with providerName', providerName);\n    return null;\n  };\n  /**\n   * Remove the plugin object\n   * @param providerName - the name of the plugin\n   */\n  AnalyticsClass.prototype.removePluggable = function (providerName) {\n    var idx = 0;\n    while (idx < this._pluggables.length) {\n      if (this._pluggables[idx].getProviderName() === providerName) {\n        break;\n      }\n      idx += 1;\n    }\n    if (idx === this._pluggables.length) {\n      logger.debug('No plugin found with providerName', providerName);\n      return;\n    } else {\n      this._pluggables.splice(idx, idx + 1);\n      return;\n    }\n  };\n  /**\n   * stop sending events\n   */\n  AnalyticsClass.prototype.disable = function () {\n    this._disabled = true;\n  };\n  /**\n   * start sending events\n   */\n  AnalyticsClass.prototype.enable = function () {\n    this._disabled = false;\n  };\n  /**\n   * Record Session start\n   * @return - A promise which resolves if buffer doesn't overflow\n   */\n  AnalyticsClass.prototype.startSession = function (provider) {\n    return __awaiter(this, void 0, void 0, function () {\n      var params;\n      return __generator(this, function (_a) {\n        params = {\n          event: {\n            name: '_session.start'\n          },\n          provider: provider\n        };\n        return [2 /*return*/, this._sendEvent(params)];\n      });\n    });\n  };\n  /**\n   * Record Session stop\n   * @return - A promise which resolves if buffer doesn't overflow\n   */\n  AnalyticsClass.prototype.stopSession = function (provider) {\n    return __awaiter(this, void 0, void 0, function () {\n      var params;\n      return __generator(this, function (_a) {\n        params = {\n          event: {\n            name: '_session.stop'\n          },\n          provider: provider\n        };\n        return [2 /*return*/, this._sendEvent(params)];\n      });\n    });\n  };\n  /**\n   * Record one analytic event and send it to Pinpoint\n   * @param {String} name - The name of the event\n   * @param {Object} [attributes] - Attributes of the event\n   * @param {Object} [metrics] - Event metrics\n   * @return - A promise which resolves if buffer doesn't overflow\n   */\n  AnalyticsClass.prototype.record = function (event, provider, metrics) {\n    return __awaiter(this, void 0, void 0, function () {\n      var params;\n      return __generator(this, function (_a) {\n        params = null;\n        // this is just for compatibility, going to be deprecated\n        if (typeof event === 'string') {\n          params = {\n            event: {\n              name: event,\n              attributes: provider,\n              metrics: metrics\n            },\n            provider: 'AWSPinpoint'\n          };\n        } else {\n          params = {\n            event: event,\n            provider: provider\n          };\n        }\n        return [2 /*return*/, this._sendEvent(params)];\n      });\n    });\n  };\n  AnalyticsClass.prototype.updateEndpoint = function (attrs, provider) {\n    return __awaiter(this, void 0, void 0, function () {\n      var event;\n      return __generator(this, function (_a) {\n        event = __assign(__assign({}, attrs), {\n          name: '_update_endpoint'\n        });\n        return [2 /*return*/, this.record(event, provider)];\n      });\n    });\n  };\n  AnalyticsClass.prototype._sendEvent = function (params) {\n    var _this = this;\n    if (this._disabled) {\n      logger.debug('Analytics has been disabled');\n      return Promise.resolve();\n    }\n    var provider = params.provider ? params.provider : 'AWSPinpoint';\n    return new Promise(function (resolve, reject) {\n      _this._pluggables.forEach(function (pluggable) {\n        if (pluggable.getProviderName() === provider) {\n          pluggable.record(params, {\n            resolve: resolve,\n            reject: reject\n          });\n        }\n      });\n    });\n  };\n  AnalyticsClass.prototype.autoTrack = function (trackerType, opts) {\n    if (!trackers[trackerType]) {\n      logger.debug('invalid tracker type');\n      return;\n    }\n    // to sync up two different configuration ways of auto session tracking\n    if (trackerType === 'session') {\n      this._config['autoSessionRecord'] = opts['enable'];\n    }\n    var tracker = this._trackers[trackerType];\n    if (!tracker) {\n      this._trackers[trackerType] = new trackers[trackerType](this.record, opts);\n    } else {\n      tracker.configure(opts);\n    }\n  };\n  return AnalyticsClass;\n}();\nexport { AnalyticsClass };\nvar endpointUpdated = false;\nvar authConfigured = false;\nvar analyticsConfigured = false;\nvar listener = function (capsule) {\n  var channel = capsule.channel,\n    payload = capsule.payload;\n  logger.debug('on hub capsule ' + channel, payload);\n  switch (channel) {\n    case 'auth':\n      authEvent(payload);\n      break;\n    case 'storage':\n      storageEvent(payload);\n      break;\n    case 'analytics':\n      analyticsEvent(payload);\n      break;\n    default:\n      break;\n  }\n};\nvar storageEvent = function (payload) {\n  var _a = payload.data,\n    attrs = _a.attrs,\n    metrics = _a.metrics;\n  if (!attrs) return;\n  if (analyticsConfigured) {\n    _instance.record({\n      name: 'Storage',\n      attributes: attrs,\n      metrics: metrics\n    }).catch(function (e) {\n      logger.debug('Failed to send the storage event automatically', e);\n    });\n  }\n};\nvar authEvent = function (payload) {\n  var event = payload.event;\n  if (!event) {\n    return;\n  }\n  var recordAuthEvent = function (eventName) {\n    return __awaiter(void 0, void 0, void 0, function () {\n      var err_1;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (!(authConfigured && analyticsConfigured)) return [3 /*break*/, 4];\n            _a.label = 1;\n          case 1:\n            _a.trys.push([1, 3,, 4]);\n            return [4 /*yield*/, _instance.record({\n              name: \"_userauth.\" + eventName\n            })];\n          case 2:\n            return [2 /*return*/, _a.sent()];\n          case 3:\n            err_1 = _a.sent();\n            logger.debug(\"Failed to send the \" + eventName + \" event automatically\", err_1);\n            return [3 /*break*/, 4];\n          case 4:\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n\n  switch (event) {\n    case 'signIn':\n      return recordAuthEvent('sign_in');\n    case 'signUp':\n      return recordAuthEvent('sign_up');\n    case 'signOut':\n      return recordAuthEvent('sign_out');\n    case 'signIn_failure':\n      return recordAuthEvent('auth_fail');\n    case 'configured':\n      authConfigured = true;\n      if (authConfigured && analyticsConfigured) {\n        sendEvents();\n      }\n      break;\n  }\n};\nvar analyticsEvent = function (payload) {\n  var event = payload.event;\n  if (!event) return;\n  switch (event) {\n    case 'pinpointProvider_configured':\n      analyticsConfigured = true;\n      if (authConfigured && analyticsConfigured) {\n        sendEvents();\n      }\n      break;\n  }\n};\nvar sendEvents = function () {\n  var config = _instance.configure();\n  if (!endpointUpdated && config['autoSessionRecord']) {\n    _instance.updateEndpoint({\n      immediate: true\n    }).catch(function (e) {\n      logger.debug('Failed to update the endpoint', e);\n    });\n    endpointUpdated = true;\n  }\n  _instance.autoTrack('session', {\n    enable: config['autoSessionRecord']\n  });\n};\nexport var Analytics = new AnalyticsClass();\nAmplify.register(Analytics);","map":{"version":3,"names":["Amplify","ConsoleLogger","Logger","Hub","Parser","AWSPinpointProvider","PageViewTracker","EventTracker","SessionTracker","logger","AMPLIFY_SYMBOL","Symbol","for","dispatchAnalyticsEvent","event","data","message","dispatch","trackers","pageView","session","_instance","AnalyticsClass","_config","_pluggables","_disabled","_trackers","record","bind","listen","listener","prototype","getModuleName","configure","config","_this","debug","amplifyConfig","parseMobilehubConfig","Object","assign","Analytics","forEach","pluggable","providerConfig","getProviderName","__assign","disabled","length","addPluggable","undefined","getCategory","push","getPluggable","providerName","i","removePluggable","idx","splice","disable","enable","startSession","provider","params","name","_sendEvent","stopSession","metrics","attributes","updateEndpoint","attrs","Promise","resolve","reject","autoTrack","trackerType","opts","tracker","endpointUpdated","authConfigured","analyticsConfigured","capsule","channel","payload","authEvent","storageEvent","analyticsEvent","_a","catch","e","recordAuthEvent","eventName","__awaiter","sent","err_1","sendEvents","immediate","register"],"sources":["/Users/ericli/node_modules/@aws-amplify/analytics/src/Analytics.ts"],"sourcesContent":["/*\r\n * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\r\n * the License. A copy of the License is located at\r\n *\r\n *     http://aws.amazon.com/apache2.0/\r\n *\r\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\r\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\r\n * and limitations under the License.\r\n */\r\n\r\nimport {\r\n\tAmplify,\r\n\tConsoleLogger as Logger,\r\n\tHub,\r\n\tParser,\r\n} from '@aws-amplify/core';\r\nimport { AWSPinpointProvider } from './Providers/AWSPinpointProvider';\r\n\r\nimport {\r\n\tAnalyticsProvider,\r\n\tEventAttributes,\r\n\tEventMetrics,\r\n\tpageViewTrackOpts,\r\n} from './types';\r\nimport { PageViewTracker, EventTracker, SessionTracker } from './trackers';\r\n\r\nconst logger = new Logger('AnalyticsClass');\r\n\r\nconst AMPLIFY_SYMBOL = (typeof Symbol !== 'undefined' &&\r\ntypeof Symbol.for === 'function'\r\n\t? Symbol.for('amplify_default')\r\n\t: '@@amplify_default') as Symbol;\r\n\r\nconst dispatchAnalyticsEvent = (event: string, data: any, message: string) => {\r\n\tHub.dispatch(\r\n\t\t'analytics',\r\n\t\t{ event, data, message },\r\n\t\t'Analytics',\r\n\t\tAMPLIFY_SYMBOL\r\n\t);\r\n};\r\n\r\nconst trackers = {\r\n\tpageView: PageViewTracker,\r\n\tevent: EventTracker,\r\n\tsession: SessionTracker,\r\n};\r\n\r\nlet _instance = null;\r\n\r\n/**\r\n * Provide mobile analytics client functions\r\n */\r\nexport class AnalyticsClass {\r\n\tprivate _config;\r\n\tprivate _pluggables: AnalyticsProvider[];\r\n\tprivate _disabled;\r\n\tprivate _trackers;\r\n\r\n\t/**\r\n\t * Initialize Analtyics\r\n\t * @param config - Configuration of the Analytics\r\n\t */\r\n\tconstructor() {\r\n\t\tthis._config = {};\r\n\t\tthis._pluggables = [];\r\n\t\tthis._disabled = false;\r\n\t\tthis._trackers = {};\r\n\t\t_instance = this;\r\n\r\n\t\tthis.record = this.record.bind(this);\r\n\t\tHub.listen('auth', listener);\r\n\t\tHub.listen('storage', listener);\r\n\t\tHub.listen('analytics', listener);\r\n\t}\r\n\r\n\tpublic getModuleName() {\r\n\t\treturn 'Analytics';\r\n\t}\r\n\t/**\r\n\t * configure Analytics\r\n\t * @param {Object} config - Configuration of the Analytics\r\n\t */\r\n\tpublic configure(config?) {\r\n\t\tif (!config) return this._config;\r\n\t\tlogger.debug('configure Analytics', config);\r\n\t\tconst amplifyConfig = Parser.parseMobilehubConfig(config);\r\n\t\tthis._config = Object.assign(\r\n\t\t\t{},\r\n\t\t\tthis._config,\r\n\t\t\tamplifyConfig.Analytics,\r\n\t\t\tconfig\r\n\t\t);\r\n\r\n\t\tif (this._config['disabled']) {\r\n\t\t\tthis._disabled = true;\r\n\t\t}\r\n\r\n\t\tthis._pluggables.forEach(pluggable => {\r\n\t\t\t// for backward compatibility\r\n\t\t\tconst providerConfig =\r\n\t\t\t\tpluggable.getProviderName() === 'AWSPinpoint' &&\r\n\t\t\t\t!this._config['AWSPinpoint']\r\n\t\t\t\t\t? this._config\r\n\t\t\t\t\t: this._config[pluggable.getProviderName()];\r\n\r\n\t\t\tpluggable.configure({\r\n\t\t\t\tdisabled: this._config['disabled'],\r\n\t\t\t\t...providerConfig,\r\n\t\t\t});\r\n\t\t});\r\n\r\n\t\tif (this._pluggables.length === 0) {\r\n\t\t\tthis.addPluggable(new AWSPinpointProvider());\r\n\t\t}\r\n\r\n\t\t// turn on the autoSessionRecord if not specified\r\n\t\tif (this._config['autoSessionRecord'] === undefined) {\r\n\t\t\tthis._config['autoSessionRecord'] = true;\r\n\t\t}\r\n\r\n\t\tdispatchAnalyticsEvent(\r\n\t\t\t'configured',\r\n\t\t\tnull,\r\n\t\t\t`The Analytics category has been configured successfully`\r\n\t\t);\r\n\t\tlogger.debug('current configuration', this._config);\r\n\t\treturn this._config;\r\n\t}\r\n\r\n\t/**\r\n\t * add plugin into Analytics category\r\n\t * @param {Object} pluggable - an instance of the plugin\r\n\t */\r\n\tpublic addPluggable(pluggable: AnalyticsProvider) {\r\n\t\tif (pluggable && pluggable.getCategory() === 'Analytics') {\r\n\t\t\tthis._pluggables.push(pluggable);\r\n\t\t\t// for backward compatibility\r\n\t\t\tconst providerConfig =\r\n\t\t\t\tpluggable.getProviderName() === 'AWSPinpoint' &&\r\n\t\t\t\t!this._config['AWSPinpoint']\r\n\t\t\t\t\t? this._config\r\n\t\t\t\t\t: this._config[pluggable.getProviderName()];\r\n\t\t\tconst config = { disabled: this._config['disabled'], ...providerConfig };\r\n\t\t\tpluggable.configure(config);\r\n\t\t\treturn config;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Get the plugin object\r\n\t * @param providerName - the name of the plugin\r\n\t */\r\n\tpublic getPluggable(providerName) {\r\n\t\tfor (let i = 0; i < this._pluggables.length; i += 1) {\r\n\t\t\tconst pluggable = this._pluggables[i];\r\n\t\t\tif (pluggable.getProviderName() === providerName) {\r\n\t\t\t\treturn pluggable;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tlogger.debug('No plugin found with providerName', providerName);\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Remove the plugin object\r\n\t * @param providerName - the name of the plugin\r\n\t */\r\n\tpublic removePluggable(providerName) {\r\n\t\tlet idx = 0;\r\n\t\twhile (idx < this._pluggables.length) {\r\n\t\t\tif (this._pluggables[idx].getProviderName() === providerName) {\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tidx += 1;\r\n\t\t}\r\n\r\n\t\tif (idx === this._pluggables.length) {\r\n\t\t\tlogger.debug('No plugin found with providerName', providerName);\r\n\t\t\treturn;\r\n\t\t} else {\r\n\t\t\tthis._pluggables.splice(idx, idx + 1);\r\n\t\t\treturn;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * stop sending events\r\n\t */\r\n\tpublic disable() {\r\n\t\tthis._disabled = true;\r\n\t}\r\n\r\n\t/**\r\n\t * start sending events\r\n\t */\r\n\tpublic enable() {\r\n\t\tthis._disabled = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Record Session start\r\n\t * @return - A promise which resolves if buffer doesn't overflow\r\n\t */\r\n\tpublic async startSession(provider?: string) {\r\n\t\tconst params = { event: { name: '_session.start' }, provider };\r\n\t\treturn this._sendEvent(params);\r\n\t}\r\n\r\n\t/**\r\n\t * Record Session stop\r\n\t * @return - A promise which resolves if buffer doesn't overflow\r\n\t */\r\n\tpublic async stopSession(provider?: string) {\r\n\t\tconst params = { event: { name: '_session.stop' }, provider };\r\n\t\treturn this._sendEvent(params);\r\n\t}\r\n\r\n\t/**\r\n\t * Record one analytic event and send it to Pinpoint\r\n\t * @param {String} name - The name of the event\r\n\t * @param {Object} [attributes] - Attributes of the event\r\n\t * @param {Object} [metrics] - Event metrics\r\n\t * @return - A promise which resolves if buffer doesn't overflow\r\n\t */\r\n\tpublic async record(\r\n\t\tevent: string | object,\r\n\t\tprovider?,\r\n\t\tmetrics?: EventMetrics\r\n\t) {\r\n\t\tlet params = null;\r\n\t\t// this is just for compatibility, going to be deprecated\r\n\t\tif (typeof event === 'string') {\r\n\t\t\tparams = {\r\n\t\t\t\tevent: {\r\n\t\t\t\t\tname: event,\r\n\t\t\t\t\tattributes: provider,\r\n\t\t\t\t\tmetrics,\r\n\t\t\t\t},\r\n\t\t\t\tprovider: 'AWSPinpoint',\r\n\t\t\t};\r\n\t\t} else {\r\n\t\t\tparams = { event, provider };\r\n\t\t}\r\n\t\treturn this._sendEvent(params);\r\n\t}\r\n\r\n\tpublic async updateEndpoint(attrs, provider?) {\r\n\t\tconst event = { ...attrs, name: '_update_endpoint' };\r\n\r\n\t\treturn this.record(event, provider);\r\n\t}\r\n\r\n\tprivate _sendEvent(params) {\r\n\t\tif (this._disabled) {\r\n\t\t\tlogger.debug('Analytics has been disabled');\r\n\t\t\treturn Promise.resolve();\r\n\t\t}\r\n\r\n\t\tconst provider = params.provider ? params.provider : 'AWSPinpoint';\r\n\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tthis._pluggables.forEach(pluggable => {\r\n\t\t\t\tif (pluggable.getProviderName() === provider) {\r\n\t\t\t\t\tpluggable.record(params, { resolve, reject });\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\tpublic autoTrack(trackerType, opts) {\r\n\t\tif (!trackers[trackerType]) {\r\n\t\t\tlogger.debug('invalid tracker type');\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// to sync up two different configuration ways of auto session tracking\r\n\t\tif (trackerType === 'session') {\r\n\t\t\tthis._config['autoSessionRecord'] = opts['enable'];\r\n\t\t}\r\n\r\n\t\tconst tracker = this._trackers[trackerType];\r\n\t\tif (!tracker) {\r\n\t\t\tthis._trackers[trackerType] = new trackers[trackerType](\r\n\t\t\t\tthis.record,\r\n\t\t\t\topts\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\ttracker.configure(opts);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nlet endpointUpdated = false;\r\nlet authConfigured = false;\r\nlet analyticsConfigured = false;\r\nconst listener = capsule => {\r\n\tconst { channel, payload } = capsule;\r\n\tlogger.debug('on hub capsule ' + channel, payload);\r\n\r\n\tswitch (channel) {\r\n\t\tcase 'auth':\r\n\t\t\tauthEvent(payload);\r\n\t\t\tbreak;\r\n\t\tcase 'storage':\r\n\t\t\tstorageEvent(payload);\r\n\t\t\tbreak;\r\n\t\tcase 'analytics':\r\n\t\t\tanalyticsEvent(payload);\r\n\t\t\tbreak;\r\n\t\tdefault:\r\n\t\t\tbreak;\r\n\t}\r\n};\r\n\r\nconst storageEvent = payload => {\r\n\tconst {\r\n\t\tdata: { attrs, metrics },\r\n\t} = payload;\r\n\tif (!attrs) return;\r\n\r\n\tif (analyticsConfigured) {\r\n\t\t_instance\r\n\t\t\t.record({\r\n\t\t\t\tname: 'Storage',\r\n\t\t\t\tattributes: attrs,\r\n\t\t\t\tmetrics,\r\n\t\t\t})\r\n\t\t\t.catch(e => {\r\n\t\t\t\tlogger.debug('Failed to send the storage event automatically', e);\r\n\t\t\t});\r\n\t}\r\n};\r\n\r\nconst authEvent = payload => {\r\n\tconst { event } = payload;\r\n\tif (!event) {\r\n\t\treturn;\r\n\t}\r\n\r\n\tconst recordAuthEvent = async eventName => {\r\n\t\tif (authConfigured && analyticsConfigured) {\r\n\t\t\ttry {\r\n\t\t\t\treturn await _instance.record({ name: `_userauth.${eventName}` });\r\n\t\t\t} catch (err) {\r\n\t\t\t\tlogger.debug(\r\n\t\t\t\t\t`Failed to send the ${eventName} event automatically`,\r\n\t\t\t\t\terr\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tswitch (event) {\r\n\t\tcase 'signIn':\r\n\t\t\treturn recordAuthEvent('sign_in');\r\n\t\tcase 'signUp':\r\n\t\t\treturn recordAuthEvent('sign_up');\r\n\t\tcase 'signOut':\r\n\t\t\treturn recordAuthEvent('sign_out');\r\n\t\tcase 'signIn_failure':\r\n\t\t\treturn recordAuthEvent('auth_fail');\r\n\t\tcase 'configured':\r\n\t\t\tauthConfigured = true;\r\n\t\t\tif (authConfigured && analyticsConfigured) {\r\n\t\t\t\tsendEvents();\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\t}\r\n};\r\n\r\nconst analyticsEvent = payload => {\r\n\tconst { event } = payload;\r\n\tif (!event) return;\r\n\r\n\tswitch (event) {\r\n\t\tcase 'pinpointProvider_configured':\r\n\t\t\tanalyticsConfigured = true;\r\n\t\t\tif (authConfigured && analyticsConfigured) {\r\n\t\t\t\tsendEvents();\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\t}\r\n};\r\n\r\nconst sendEvents = () => {\r\n\tconst config = _instance.configure();\r\n\tif (!endpointUpdated && config['autoSessionRecord']) {\r\n\t\t_instance.updateEndpoint({ immediate: true }).catch(e => {\r\n\t\t\tlogger.debug('Failed to update the endpoint', e);\r\n\t\t});\r\n\t\tendpointUpdated = true;\r\n\t}\r\n\t_instance.autoTrack('session', {\r\n\t\tenable: config['autoSessionRecord'],\r\n\t});\r\n};\r\n\r\nexport const Analytics = new AnalyticsClass();\r\nAmplify.register(Analytics);\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}