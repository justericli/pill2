{"ast":null,"code":"import _regeneratorRuntime from \"/Users/ericli/Desktop/pill2/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _createForOfIteratorHelper from \"/Users/ericli/Desktop/pill2/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _asyncToGenerator from \"/Users/ericli/Desktop/pill2/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _classCallCheck from \"/Users/ericli/Desktop/pill2/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/ericli/Desktop/pill2/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { HttpResponse } from \"@aws-sdk/protocol-http\";\nimport { buildQueryString } from \"@aws-sdk/querystring-builder\";\nimport { requestTimeout } from \"./request-timeout\";\nexport var FetchHttpHandler = /*#__PURE__*/function () {\n  function FetchHttpHandler(options) {\n    _classCallCheck(this, FetchHttpHandler);\n    if (typeof options === \"function\") {\n      this.configProvider = options().then(function (opts) {\n        return opts || {};\n      });\n    } else {\n      this.config = options !== null && options !== void 0 ? options : {};\n      this.configProvider = Promise.resolve(this.config);\n    }\n  }\n  _createClass(FetchHttpHandler, [{\n    key: \"destroy\",\n    value: function destroy() {}\n  }, {\n    key: \"handle\",\n    value: function () {\n      var _handle = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(request) {\n        var _ref,\n          abortSignal,\n          requestTimeoutInMs,\n          abortError,\n          path,\n          queryString,\n          port,\n          method,\n          url,\n          body,\n          requestOptions,\n          fetchRequest,\n          raceOfPromises,\n          _args = arguments;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _ref = _args.length > 1 && _args[1] !== undefined ? _args[1] : {}, abortSignal = _ref.abortSignal;\n              if (this.config) {\n                _context.next = 5;\n                break;\n              }\n              _context.next = 4;\n              return this.configProvider;\n            case 4:\n              this.config = _context.sent;\n            case 5:\n              requestTimeoutInMs = this.config.requestTimeout;\n              if (!(abortSignal !== null && abortSignal !== void 0 && abortSignal.aborted)) {\n                _context.next = 10;\n                break;\n              }\n              abortError = new Error(\"Request aborted\");\n              abortError.name = \"AbortError\";\n              return _context.abrupt(\"return\", Promise.reject(abortError));\n            case 10:\n              path = request.path;\n              if (request.query) {\n                queryString = buildQueryString(request.query);\n                if (queryString) {\n                  path += \"?\".concat(queryString);\n                }\n              }\n              port = request.port, method = request.method;\n              url = \"\".concat(request.protocol, \"//\").concat(request.hostname).concat(port ? \":\".concat(port) : \"\").concat(path);\n              body = method === \"GET\" || method === \"HEAD\" ? undefined : request.body;\n              requestOptions = {\n                body: body,\n                headers: new Headers(request.headers),\n                method: method\n              };\n              if (typeof AbortController !== \"undefined\") {\n                requestOptions[\"signal\"] = abortSignal;\n              }\n              fetchRequest = new Request(url, requestOptions);\n              raceOfPromises = [fetch(fetchRequest).then(function (response) {\n                var fetchHeaders = response.headers;\n                var transformedHeaders = {};\n                var _iterator = _createForOfIteratorHelper(fetchHeaders.entries()),\n                  _step;\n                try {\n                  for (_iterator.s(); !(_step = _iterator.n()).done;) {\n                    var pair = _step.value;\n                    transformedHeaders[pair[0]] = pair[1];\n                  }\n                } catch (err) {\n                  _iterator.e(err);\n                } finally {\n                  _iterator.f();\n                }\n                var hasReadableStream = response.body != undefined;\n                if (!hasReadableStream) {\n                  return response.blob().then(function (body) {\n                    return {\n                      response: new HttpResponse({\n                        headers: transformedHeaders,\n                        statusCode: response.status,\n                        body: body\n                      })\n                    };\n                  });\n                }\n                return {\n                  response: new HttpResponse({\n                    headers: transformedHeaders,\n                    statusCode: response.status,\n                    body: response.body\n                  })\n                };\n              }), requestTimeout(requestTimeoutInMs)];\n              if (abortSignal) {\n                raceOfPromises.push(new Promise(function (resolve, reject) {\n                  abortSignal.onabort = function () {\n                    var abortError = new Error(\"Request aborted\");\n                    abortError.name = \"AbortError\";\n                    reject(abortError);\n                  };\n                }));\n              }\n              return _context.abrupt(\"return\", Promise.race(raceOfPromises));\n            case 21:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this);\n      }));\n      function handle(_x) {\n        return _handle.apply(this, arguments);\n      }\n      return handle;\n    }()\n  }]);\n  return FetchHttpHandler;\n}();","map":{"version":3,"names":["HttpResponse","buildQueryString","requestTimeout","FetchHttpHandler","options","_classCallCheck","configProvider","then","opts","config","Promise","resolve","_createClass","key","value","destroy","_handle","_asyncToGenerator","_regeneratorRuntime","mark","_callee","request","_ref","abortSignal","requestTimeoutInMs","abortError","path","queryString","port","method","url","body","requestOptions","fetchRequest","raceOfPromises","_args","arguments","wrap","_callee$","_context","prev","next","length","undefined","sent","aborted","Error","name","abrupt","reject","query","concat","protocol","hostname","headers","Headers","AbortController","Request","fetch","response","fetchHeaders","transformedHeaders","_iterator","_createForOfIteratorHelper","entries","_step","s","n","done","pair","err","e","f","hasReadableStream","blob","statusCode","status","push","onabort","race","stop","handle","_x","apply"],"sources":["/Users/ericli/Desktop/pill2/node_modules/@aws-sdk/client-s3/node_modules/@aws-sdk/fetch-http-handler/dist-es/fetch-http-handler.js"],"sourcesContent":["import { HttpResponse } from \"@aws-sdk/protocol-http\";\nimport { buildQueryString } from \"@aws-sdk/querystring-builder\";\nimport { requestTimeout } from \"./request-timeout\";\nexport class FetchHttpHandler {\n    constructor(options) {\n        if (typeof options === \"function\") {\n            this.configProvider = options().then((opts) => opts || {});\n        }\n        else {\n            this.config = options ?? {};\n            this.configProvider = Promise.resolve(this.config);\n        }\n    }\n    destroy() {\n    }\n    async handle(request, { abortSignal } = {}) {\n        if (!this.config) {\n            this.config = await this.configProvider;\n        }\n        const requestTimeoutInMs = this.config.requestTimeout;\n        if (abortSignal?.aborted) {\n            const abortError = new Error(\"Request aborted\");\n            abortError.name = \"AbortError\";\n            return Promise.reject(abortError);\n        }\n        let path = request.path;\n        if (request.query) {\n            const queryString = buildQueryString(request.query);\n            if (queryString) {\n                path += `?${queryString}`;\n            }\n        }\n        const { port, method } = request;\n        const url = `${request.protocol}//${request.hostname}${port ? `:${port}` : \"\"}${path}`;\n        const body = method === \"GET\" || method === \"HEAD\" ? undefined : request.body;\n        const requestOptions = {\n            body,\n            headers: new Headers(request.headers),\n            method: method,\n        };\n        if (typeof AbortController !== \"undefined\") {\n            requestOptions[\"signal\"] = abortSignal;\n        }\n        const fetchRequest = new Request(url, requestOptions);\n        const raceOfPromises = [\n            fetch(fetchRequest).then((response) => {\n                const fetchHeaders = response.headers;\n                const transformedHeaders = {};\n                for (const pair of fetchHeaders.entries()) {\n                    transformedHeaders[pair[0]] = pair[1];\n                }\n                const hasReadableStream = response.body != undefined;\n                if (!hasReadableStream) {\n                    return response.blob().then((body) => ({\n                        response: new HttpResponse({\n                            headers: transformedHeaders,\n                            statusCode: response.status,\n                            body,\n                        }),\n                    }));\n                }\n                return {\n                    response: new HttpResponse({\n                        headers: transformedHeaders,\n                        statusCode: response.status,\n                        body: response.body,\n                    }),\n                };\n            }),\n            requestTimeout(requestTimeoutInMs),\n        ];\n        if (abortSignal) {\n            raceOfPromises.push(new Promise((resolve, reject) => {\n                abortSignal.onabort = () => {\n                    const abortError = new Error(\"Request aborted\");\n                    abortError.name = \"AbortError\";\n                    reject(abortError);\n                };\n            }));\n        }\n        return Promise.race(raceOfPromises);\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}