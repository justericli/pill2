{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n      label: 0,\n      sent: function () {\n        if (t[0] & 1) throw t[1];\n        return t[1];\n      },\n      trys: [],\n      ops: []\n    },\n    f,\n    y,\n    t,\n    g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n        case 7:\n          op = _.ops.pop();\n          _.trys.pop();\n          continue;\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n            _.ops.push(op);\n            break;\n          }\n          if (t[2]) _.ops.pop();\n          _.trys.pop();\n          continue;\n      }\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n    r,\n    ar = [],\n    e;\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n  return ar;\n};\n/*\n * Copyright 2017-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nimport { GraphQLError } from 'graphql/error/GraphQLError';\nimport { print } from 'graphql/language/printer';\nimport { parse } from 'graphql/language/parser';\nimport { Amplify, ConsoleLogger as Logger, Constants, Credentials, INTERNAL_AWS_APPSYNC_REALTIME_PUBSUB_PROVIDER } from '@aws-amplify/core';\nimport PubSub from '@aws-amplify/pubsub';\nimport Auth from '@aws-amplify/auth';\nimport Cache from '@aws-amplify/cache';\nimport { GraphQLAuthError } from './types';\nimport { RestClient } from '@aws-amplify/api-rest';\nvar USER_AGENT_HEADER = 'x-amz-user-agent';\nvar logger = new Logger('GraphQLAPI');\nexport var graphqlOperation = function (query, variables) {\n  if (variables === void 0) {\n    variables = {};\n  }\n  return {\n    query: query,\n    variables: variables\n  };\n};\n/**\n * Export Cloud Logic APIs\n */\nvar GraphQLAPIClass = /** @class */function () {\n  /**\n   * Initialize GraphQL API with AWS configuration\n   * @param {Object} options - Configuration object for API\n   */\n  function GraphQLAPIClass(options) {\n    this._api = null;\n    this.Auth = Auth;\n    this.Cache = Cache;\n    this.Credentials = Credentials;\n    this._options = options;\n    logger.debug('API Options', this._options);\n  }\n  GraphQLAPIClass.prototype.getModuleName = function () {\n    return 'GraphQLAPI';\n  };\n  /**\n   * Configure API\n   * @param {Object} config - Configuration of the API\n   * @return {Object} - The current configuration\n   */\n  GraphQLAPIClass.prototype.configure = function (options) {\n    var _a = options || {},\n      _b = _a.API,\n      API = _b === void 0 ? {} : _b,\n      otherOptions = __rest(_a, [\"API\"]);\n    var opt = __assign(__assign({}, otherOptions), API);\n    logger.debug('configure GraphQL API', {\n      opt: opt\n    });\n    if (opt['aws_project_region']) {\n      opt = Object.assign({}, opt, {\n        region: opt['aws_project_region'],\n        header: {}\n      });\n    }\n    if (typeof opt.graphql_headers !== 'undefined' && typeof opt.graphql_headers !== 'function') {\n      logger.warn('graphql_headers should be a function');\n      opt.graphql_headers = undefined;\n    }\n    this._options = Object.assign({}, this._options, opt);\n    this.createInstance();\n    return this._options;\n  };\n  /**\n   * Create an instance of API for the library\n   * @return - A promise of true if Success\n   */\n  GraphQLAPIClass.prototype.createInstance = function () {\n    logger.debug('create Rest instance');\n    if (this._options) {\n      this._api = new RestClient(this._options);\n      // Share instance Credentials with client for SSR\n      this._api.Credentials = this.Credentials;\n      return true;\n    } else {\n      return Promise.reject('API not configured');\n    }\n  };\n  GraphQLAPIClass.prototype._headerBasedAuth = function (defaultAuthenticationType) {\n    return __awaiter(this, void 0, void 0, function () {\n      var _a, aws_appsync_authenticationType, apiKey, authenticationType, headers, _b, credentialsOK, token, federatedInfo, currentUser, e_1, session, e_2;\n      return __generator(this, function (_c) {\n        switch (_c.label) {\n          case 0:\n            _a = this._options, aws_appsync_authenticationType = _a.aws_appsync_authenticationType, apiKey = _a.aws_appsync_apiKey;\n            authenticationType = defaultAuthenticationType || aws_appsync_authenticationType || 'AWS_IAM';\n            headers = {};\n            _b = authenticationType;\n            switch (_b) {\n              case 'API_KEY':\n                return [3 /*break*/, 1];\n              case 'AWS_IAM':\n                return [3 /*break*/, 2];\n              case 'OPENID_CONNECT':\n                return [3 /*break*/, 4];\n              case 'AMAZON_COGNITO_USER_POOLS':\n                return [3 /*break*/, 11];\n            }\n            return [3 /*break*/, 15];\n          case 1:\n            if (!apiKey) {\n              throw new Error(GraphQLAuthError.NO_API_KEY);\n            }\n            headers = {\n              Authorization: null,\n              'X-Api-Key': apiKey\n            };\n            return [3 /*break*/, 16];\n          case 2:\n            return [4 /*yield*/, this._ensureCredentials()];\n          case 3:\n            credentialsOK = _c.sent();\n            if (!credentialsOK) {\n              throw new Error(GraphQLAuthError.NO_CREDENTIALS);\n            }\n            return [3 /*break*/, 16];\n          case 4:\n            _c.trys.push([4, 9,, 10]);\n            token = void 0;\n            return [4 /*yield*/, Cache.getItem('federatedInfo')];\n          case 5:\n            federatedInfo = _c.sent();\n            if (!federatedInfo) return [3 /*break*/, 6];\n            token = federatedInfo.token;\n            return [3 /*break*/, 8];\n          case 6:\n            return [4 /*yield*/, Auth.currentAuthenticatedUser()];\n          case 7:\n            currentUser = _c.sent();\n            if (currentUser) {\n              token = currentUser.token;\n            }\n            _c.label = 8;\n          case 8:\n            if (!token) {\n              throw new Error(GraphQLAuthError.NO_FEDERATED_JWT);\n            }\n            headers = {\n              Authorization: token\n            };\n            return [3 /*break*/, 10];\n          case 9:\n            e_1 = _c.sent();\n            throw new Error(GraphQLAuthError.NO_CURRENT_USER);\n          case 10:\n            return [3 /*break*/, 16];\n          case 11:\n            _c.trys.push([11, 13,, 14]);\n            return [4 /*yield*/, this.Auth.currentSession()];\n          case 12:\n            session = _c.sent();\n            headers = {\n              Authorization: session.getAccessToken().getJwtToken()\n            };\n            return [3 /*break*/, 14];\n          case 13:\n            e_2 = _c.sent();\n            throw new Error(GraphQLAuthError.NO_CURRENT_USER);\n          case 14:\n            return [3 /*break*/, 16];\n          case 15:\n            headers = {\n              Authorization: null\n            };\n            return [3 /*break*/, 16];\n          case 16:\n            return [2 /*return*/, headers];\n        }\n      });\n    });\n  };\n  /**\n   * to get the operation type\n   * @param operation\n   */\n  GraphQLAPIClass.prototype.getGraphqlOperationType = function (operation) {\n    var doc = parse(operation);\n    var _a = __read(doc.definitions, 1),\n      operationType = _a[0].operation;\n    return operationType;\n  };\n  /**\n   * Executes a GraphQL operation\n   *\n   * @param {GraphQLOptions} GraphQL Options\n   * @param {object} additionalHeaders headers to merge in after any `graphql_headers` set in the config\n   * @returns {Promise<GraphQLResult> | Observable<object>}\n   */\n  GraphQLAPIClass.prototype.graphql = function (_a, additionalHeaders) {\n    var paramQuery = _a.query,\n      _b = _a.variables,\n      variables = _b === void 0 ? {} : _b,\n      authMode = _a.authMode;\n    var query = typeof paramQuery === 'string' ? parse(paramQuery) : parse(print(paramQuery));\n    var _c = __read(query.definitions.filter(function (def) {\n        return def.kind === 'OperationDefinition';\n      }), 1),\n      _d = _c[0],\n      operationDef = _d === void 0 ? {} : _d;\n    var operationType = operationDef.operation;\n    switch (operationType) {\n      case 'query':\n      case 'mutation':\n        var cancellableToken = this._api.getCancellableToken();\n        var initParams = {\n          cancellableToken: cancellableToken\n        };\n        var responsePromise = this._graphql({\n          query: query,\n          variables: variables,\n          authMode: authMode\n        }, additionalHeaders, initParams);\n        this._api.updateRequestToBeCancellable(responsePromise, cancellableToken);\n        return responsePromise;\n      case 'subscription':\n        return this._graphqlSubscribe({\n          query: query,\n          variables: variables,\n          authMode: authMode\n        }, additionalHeaders);\n    }\n    throw new Error(\"invalid operation type: \" + operationType);\n  };\n  GraphQLAPIClass.prototype._graphql = function (_a, additionalHeaders, initParams) {\n    var query = _a.query,\n      variables = _a.variables,\n      authMode = _a.authMode;\n    if (additionalHeaders === void 0) {\n      additionalHeaders = {};\n    }\n    if (initParams === void 0) {\n      initParams = {};\n    }\n    return __awaiter(this, void 0, void 0, function () {\n      var _b, region, appSyncGraphqlEndpoint, _c, graphql_headers, customGraphqlEndpoint, customEndpointRegion, headers, _d, _e, _f, _g, _h, _j, body, init, endpoint, error, response, err_1, errors;\n      var _k;\n      return __generator(this, function (_l) {\n        switch (_l.label) {\n          case 0:\n            if (!!this._api) return [3 /*break*/, 2];\n            return [4 /*yield*/, this.createInstance()];\n          case 1:\n            _l.sent();\n            _l.label = 2;\n          case 2:\n            _b = this._options, region = _b.aws_appsync_region, appSyncGraphqlEndpoint = _b.aws_appsync_graphqlEndpoint, _c = _b.graphql_headers, graphql_headers = _c === void 0 ? function () {\n              return {};\n            } : _c, customGraphqlEndpoint = _b.graphql_endpoint, customEndpointRegion = _b.graphql_endpoint_iam_region;\n            _d = [{}];\n            _e = !customGraphqlEndpoint;\n            if (!_e) return [3 /*break*/, 4];\n            return [4 /*yield*/, this._headerBasedAuth(authMode)];\n          case 3:\n            _e = _l.sent();\n            _l.label = 4;\n          case 4:\n            _f = [__assign.apply(void 0, _d.concat([_e]))];\n            _g = customGraphqlEndpoint;\n            if (!_g) return [3 /*break*/, 8];\n            if (!customEndpointRegion) return [3 /*break*/, 6];\n            return [4 /*yield*/, this._headerBasedAuth(authMode)];\n          case 5:\n            _h = _l.sent();\n            return [3 /*break*/, 7];\n          case 6:\n            _h = {\n              Authorization: null\n            };\n            _l.label = 7;\n          case 7:\n            _g = _h;\n            _l.label = 8;\n          case 8:\n            _j = [__assign.apply(void 0, _f.concat([_g]))];\n            return [4 /*yield*/, graphql_headers({\n              query: query,\n              variables: variables\n            })];\n          case 9:\n            headers = __assign.apply(void 0, [__assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), additionalHeaders]), !customGraphqlEndpoint && (_k = {}, _k[USER_AGENT_HEADER] = Constants.userAgent, _k)]);\n            body = {\n              query: print(query),\n              variables: variables\n            };\n            init = Object.assign({\n              headers: headers,\n              body: body,\n              signerServiceInfo: {\n                service: !customGraphqlEndpoint ? 'appsync' : 'execute-api',\n                region: !customGraphqlEndpoint ? region : customEndpointRegion\n              }\n            }, initParams);\n            endpoint = customGraphqlEndpoint || appSyncGraphqlEndpoint;\n            if (!endpoint) {\n              error = new GraphQLError('No graphql endpoint provided.');\n              throw {\n                data: {},\n                errors: [error]\n              };\n            }\n            _l.label = 10;\n          case 10:\n            _l.trys.push([10, 12,, 13]);\n            return [4 /*yield*/, this._api.post(endpoint, init)];\n          case 11:\n            response = _l.sent();\n            return [3 /*break*/, 13];\n          case 12:\n            err_1 = _l.sent();\n            // If the exception is because user intentionally\n            // cancelled the request, do not modify the exception\n            // so that clients can identify the exception correctly.\n            if (this._api.isCancel(err_1)) {\n              throw err_1;\n            }\n            response = {\n              data: {},\n              errors: [new GraphQLError(err_1.message, null, null, null, null, err_1)]\n            };\n            return [3 /*break*/, 13];\n          case 13:\n            errors = response.errors;\n            if (errors && errors.length) {\n              throw response;\n            }\n            return [2 /*return*/, response];\n        }\n      });\n    });\n  };\n  /**\n   * Checks to see if an error thrown is from an api request cancellation\n   * @param {any} error - Any error\n   * @return {boolean} - A boolean indicating if the error was from an api request cancellation\n   */\n  GraphQLAPIClass.prototype.isCancel = function (error) {\n    return this._api.isCancel(error);\n  };\n  /**\n   * Cancels an inflight request. Only applicable for graphql queries and mutations\n   * @param {any} request - request to cancel\n   * @return {boolean} - A boolean indicating if the request was cancelled\n   */\n  GraphQLAPIClass.prototype.cancel = function (request, message) {\n    return this._api.cancel(request, message);\n  };\n  GraphQLAPIClass.prototype._graphqlSubscribe = function (_a, additionalHeaders) {\n    var query = _a.query,\n      variables = _a.variables,\n      defaultAuthenticationType = _a.authMode;\n    if (additionalHeaders === void 0) {\n      additionalHeaders = {};\n    }\n    var _b = this._options,\n      region = _b.aws_appsync_region,\n      appSyncGraphqlEndpoint = _b.aws_appsync_graphqlEndpoint,\n      aws_appsync_authenticationType = _b.aws_appsync_authenticationType,\n      apiKey = _b.aws_appsync_apiKey,\n      _c = _b.graphql_headers,\n      graphql_headers = _c === void 0 ? function () {\n        return {};\n      } : _c;\n    var authenticationType = defaultAuthenticationType || aws_appsync_authenticationType || 'AWS_IAM';\n    if (PubSub && typeof PubSub.subscribe === 'function') {\n      return PubSub.subscribe('', {\n        provider: INTERNAL_AWS_APPSYNC_REALTIME_PUBSUB_PROVIDER,\n        appSyncGraphqlEndpoint: appSyncGraphqlEndpoint,\n        authenticationType: authenticationType,\n        apiKey: apiKey,\n        query: print(query),\n        region: region,\n        variables: variables,\n        graphql_headers: graphql_headers,\n        additionalHeaders: additionalHeaders\n      });\n    } else {\n      logger.debug('No pubsub module applied for subscription');\n      throw new Error('No pubsub module applied for subscription');\n    }\n  };\n  /**\n   * @private\n   */\n  GraphQLAPIClass.prototype._ensureCredentials = function () {\n    var _this = this;\n    return this.Credentials.get().then(function (credentials) {\n      if (!credentials) return false;\n      var cred = _this.Credentials.shear(credentials);\n      logger.debug('set credentials for api', cred);\n      return true;\n    }).catch(function (err) {\n      logger.warn('ensure credentials error', err);\n      return false;\n    });\n  };\n  return GraphQLAPIClass;\n}();\nexport { GraphQLAPIClass };\nexport var GraphQLAPI = new GraphQLAPIClass(null);\nAmplify.register(GraphQLAPI);","map":{"version":3,"names":["GraphQLError","print","parse","Amplify","ConsoleLogger","Logger","Constants","Credentials","INTERNAL_AWS_APPSYNC_REALTIME_PUBSUB_PROVIDER","PubSub","Auth","Cache","GraphQLAuthError","RestClient","USER_AGENT_HEADER","logger","graphqlOperation","query","variables","GraphQLAPIClass","options","_api","_options","debug","prototype","getModuleName","configure","_a","_b","API","otherOptions","__rest","opt","__assign","Object","assign","region","header","graphql_headers","warn","undefined","createInstance","Promise","reject","_headerBasedAuth","defaultAuthenticationType","aws_appsync_authenticationType","apiKey","aws_appsync_apiKey","authenticationType","headers","Error","NO_API_KEY","Authorization","_ensureCredentials","credentialsOK","_c","sent","NO_CREDENTIALS","token","getItem","federatedInfo","currentAuthenticatedUser","currentUser","NO_FEDERATED_JWT","NO_CURRENT_USER","currentSession","session","getAccessToken","getJwtToken","getGraphqlOperationType","operation","doc","__read","definitions","operationType","graphql","additionalHeaders","paramQuery","authMode","filter","def","kind","_d","operationDef","cancellableToken","getCancellableToken","initParams","responsePromise","_graphql","updateRequestToBeCancellable","_graphqlSubscribe","_l","aws_appsync_region","appSyncGraphqlEndpoint","aws_appsync_graphqlEndpoint","customGraphqlEndpoint","graphql_endpoint","customEndpointRegion","graphql_endpoint_iam_region","_e","_g","_h","apply","_j","concat","_k","userAgent","body","init","signerServiceInfo","service","endpoint","error","data","errors","post","response","isCancel","err_1","message","length","cancel","request","subscribe","provider","_this","get","then","credentials","cred","shear","catch","err","GraphQLAPI","register"],"sources":["/Users/ericli/node_modules/@aws-amplify/api-graphql/src/GraphQLAPI.ts"],"sourcesContent":["/*\n * Copyright 2017-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nimport { GraphQLError } from 'graphql/error/GraphQLError';\n// @ts-ignore\nimport { OperationDefinitionNode } from 'graphql/language';\nimport { print } from 'graphql/language/printer';\nimport { parse } from 'graphql/language/parser';\nimport Observable from 'zen-observable-ts';\nimport {\n\tAmplify,\n\tConsoleLogger as Logger,\n\tConstants,\n\tCredentials,\n\tINTERNAL_AWS_APPSYNC_REALTIME_PUBSUB_PROVIDER,\n} from '@aws-amplify/core';\nimport PubSub from '@aws-amplify/pubsub';\nimport Auth from '@aws-amplify/auth';\nimport Cache from '@aws-amplify/cache';\nimport { GraphQLAuthError, GraphQLOptions, GraphQLResult } from './types';\nimport { RestClient } from '@aws-amplify/api-rest';\nconst USER_AGENT_HEADER = 'x-amz-user-agent';\n\nconst logger = new Logger('GraphQLAPI');\n\nexport const graphqlOperation = (query, variables = {}) => ({\n\tquery,\n\tvariables,\n});\n\n/**\n * Export Cloud Logic APIs\n */\nexport class GraphQLAPIClass {\n\t/**\n\t * @private\n\t */\n\tprivate _options;\n\tprivate _api = null;\n\n\tAuth = Auth;\n\tCache = Cache;\n\tCredentials = Credentials;\n\n\t/**\n\t * Initialize GraphQL API with AWS configuration\n\t * @param {Object} options - Configuration object for API\n\t */\n\tconstructor(options) {\n\t\tthis._options = options;\n\t\tlogger.debug('API Options', this._options);\n\t}\n\n\tpublic getModuleName() {\n\t\treturn 'GraphQLAPI';\n\t}\n\n\t/**\n\t * Configure API\n\t * @param {Object} config - Configuration of the API\n\t * @return {Object} - The current configuration\n\t */\n\tconfigure(options) {\n\t\tconst { API = {}, ...otherOptions } = options || {};\n\t\tlet opt = { ...otherOptions, ...API };\n\t\tlogger.debug('configure GraphQL API', { opt });\n\n\t\tif (opt['aws_project_region']) {\n\t\t\topt = Object.assign({}, opt, {\n\t\t\t\tregion: opt['aws_project_region'],\n\t\t\t\theader: {},\n\t\t\t});\n\t\t}\n\n\t\tif (\n\t\t\ttypeof opt.graphql_headers !== 'undefined' &&\n\t\t\ttypeof opt.graphql_headers !== 'function'\n\t\t) {\n\t\t\tlogger.warn('graphql_headers should be a function');\n\t\t\topt.graphql_headers = undefined;\n\t\t}\n\n\t\tthis._options = Object.assign({}, this._options, opt);\n\n\t\tthis.createInstance();\n\n\t\treturn this._options;\n\t}\n\n\t/**\n\t * Create an instance of API for the library\n\t * @return - A promise of true if Success\n\t */\n\tcreateInstance() {\n\t\tlogger.debug('create Rest instance');\n\t\tif (this._options) {\n\t\t\tthis._api = new RestClient(this._options);\n\t\t\t// Share instance Credentials with client for SSR\n\t\t\tthis._api.Credentials = this.Credentials;\n\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn Promise.reject('API not configured');\n\t\t}\n\t}\n\n\tprivate async _headerBasedAuth(defaultAuthenticationType?) {\n\t\tconst {\n\t\t\taws_appsync_authenticationType,\n\t\t\taws_appsync_apiKey: apiKey,\n\t\t} = this._options;\n\t\tconst authenticationType =\n\t\t\tdefaultAuthenticationType || aws_appsync_authenticationType || 'AWS_IAM';\n\t\tlet headers = {};\n\n\t\tswitch (authenticationType) {\n\t\t\tcase 'API_KEY':\n\t\t\t\tif (!apiKey) {\n\t\t\t\t\tthrow new Error(GraphQLAuthError.NO_API_KEY);\n\t\t\t\t}\n\t\t\t\theaders = {\n\t\t\t\t\tAuthorization: null,\n\t\t\t\t\t'X-Api-Key': apiKey,\n\t\t\t\t};\n\t\t\t\tbreak;\n\t\t\tcase 'AWS_IAM':\n\t\t\t\tconst credentialsOK = await this._ensureCredentials();\n\t\t\t\tif (!credentialsOK) {\n\t\t\t\t\tthrow new Error(GraphQLAuthError.NO_CREDENTIALS);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'OPENID_CONNECT':\n\t\t\t\ttry {\n\t\t\t\t\tlet token;\n\t\t\t\t\t// backwards compatibility\n\t\t\t\t\tconst federatedInfo = await Cache.getItem('federatedInfo');\n\t\t\t\t\tif (federatedInfo) {\n\t\t\t\t\t\ttoken = federatedInfo.token;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst currentUser = await Auth.currentAuthenticatedUser();\n\t\t\t\t\t\tif (currentUser) {\n\t\t\t\t\t\t\ttoken = currentUser.token;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (!token) {\n\t\t\t\t\t\tthrow new Error(GraphQLAuthError.NO_FEDERATED_JWT);\n\t\t\t\t\t}\n\t\t\t\t\theaders = {\n\t\t\t\t\t\tAuthorization: token,\n\t\t\t\t\t};\n\t\t\t\t} catch (e) {\n\t\t\t\t\tthrow new Error(GraphQLAuthError.NO_CURRENT_USER);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'AMAZON_COGNITO_USER_POOLS':\n\t\t\t\ttry {\n\t\t\t\t\tconst session = await this.Auth.currentSession();\n\t\t\t\t\theaders = {\n\t\t\t\t\t\tAuthorization: session.getAccessToken().getJwtToken(),\n\t\t\t\t\t};\n\t\t\t\t} catch (e) {\n\t\t\t\t\tthrow new Error(GraphQLAuthError.NO_CURRENT_USER);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\theaders = {\n\t\t\t\t\tAuthorization: null,\n\t\t\t\t};\n\t\t\t\tbreak;\n\t\t}\n\n\t\treturn headers;\n\t}\n\n\t/**\n\t * to get the operation type\n\t * @param operation\n\t */\n\tgetGraphqlOperationType(operation) {\n\t\tconst doc = parse(operation);\n\t\tconst {\n\t\t\tdefinitions: [{ operation: operationType }],\n\t\t} = doc;\n\n\t\treturn operationType;\n\t}\n\n\t/**\n\t * Executes a GraphQL operation\n\t *\n\t * @param {GraphQLOptions} GraphQL Options\n\t * @param {object} additionalHeaders headers to merge in after any `graphql_headers` set in the config\n\t * @returns {Promise<GraphQLResult> | Observable<object>}\n\t */\n\tgraphql(\n\t\t{ query: paramQuery, variables = {}, authMode }: GraphQLOptions,\n\t\tadditionalHeaders?: { [key: string]: string }\n\t) {\n\t\tconst query =\n\t\t\ttypeof paramQuery === 'string'\n\t\t\t\t? parse(paramQuery)\n\t\t\t\t: parse(print(paramQuery));\n\n\t\tconst [operationDef = {}] = query.definitions.filter(\n\t\t\tdef => def.kind === 'OperationDefinition'\n\t\t);\n\t\tconst {\n\t\t\toperation: operationType,\n\t\t} = operationDef as OperationDefinitionNode;\n\n\t\tswitch (operationType) {\n\t\t\tcase 'query':\n\t\t\tcase 'mutation':\n\t\t\t\tconst cancellableToken = this._api.getCancellableToken();\n\t\t\t\tconst initParams = { cancellableToken };\n\t\t\t\tconst responsePromise = this._graphql(\n\t\t\t\t\t{ query, variables, authMode },\n\t\t\t\t\tadditionalHeaders,\n\t\t\t\t\tinitParams\n\t\t\t\t);\n\t\t\t\tthis._api.updateRequestToBeCancellable(\n\t\t\t\t\tresponsePromise,\n\t\t\t\t\tcancellableToken\n\t\t\t\t);\n\t\t\t\treturn responsePromise;\n\t\t\tcase 'subscription':\n\t\t\t\treturn this._graphqlSubscribe(\n\t\t\t\t\t{ query, variables, authMode },\n\t\t\t\t\tadditionalHeaders\n\t\t\t\t);\n\t\t}\n\n\t\tthrow new Error(`invalid operation type: ${operationType}`);\n\t}\n\n\tprivate async _graphql(\n\t\t{ query, variables, authMode }: GraphQLOptions,\n\t\tadditionalHeaders = {},\n\t\tinitParams = {}\n\t): Promise<GraphQLResult> {\n\t\tif (!this._api) {\n\t\t\tawait this.createInstance();\n\t\t}\n\n\t\tconst {\n\t\t\taws_appsync_region: region,\n\t\t\taws_appsync_graphqlEndpoint: appSyncGraphqlEndpoint,\n\t\t\tgraphql_headers = () => ({}),\n\t\t\tgraphql_endpoint: customGraphqlEndpoint,\n\t\t\tgraphql_endpoint_iam_region: customEndpointRegion,\n\t\t} = this._options;\n\n\t\tconst headers = {\n\t\t\t...(!customGraphqlEndpoint && (await this._headerBasedAuth(authMode))),\n\t\t\t...(customGraphqlEndpoint &&\n\t\t\t\t(customEndpointRegion\n\t\t\t\t\t? await this._headerBasedAuth(authMode)\n\t\t\t\t\t: { Authorization: null })),\n\t\t\t...(await graphql_headers({ query, variables })),\n\t\t\t...additionalHeaders,\n\t\t\t...(!customGraphqlEndpoint && {\n\t\t\t\t[USER_AGENT_HEADER]: Constants.userAgent,\n\t\t\t}),\n\t\t};\n\n\t\tconst body = {\n\t\t\tquery: print(query),\n\t\t\tvariables,\n\t\t};\n\n\t\tconst init = Object.assign(\n\t\t\t{\n\t\t\t\theaders,\n\t\t\t\tbody,\n\t\t\t\tsignerServiceInfo: {\n\t\t\t\t\tservice: !customGraphqlEndpoint ? 'appsync' : 'execute-api',\n\t\t\t\t\tregion: !customGraphqlEndpoint ? region : customEndpointRegion,\n\t\t\t\t},\n\t\t\t},\n\t\t\tinitParams\n\t\t);\n\n\t\tconst endpoint = customGraphqlEndpoint || appSyncGraphqlEndpoint;\n\n\t\tif (!endpoint) {\n\t\t\tconst error = new GraphQLError('No graphql endpoint provided.');\n\n\t\t\tthrow {\n\t\t\t\tdata: {},\n\t\t\t\terrors: [error],\n\t\t\t};\n\t\t}\n\n\t\tlet response;\n\t\ttry {\n\t\t\tresponse = await this._api.post(endpoint, init);\n\t\t} catch (err) {\n\t\t\t// If the exception is because user intentionally\n\t\t\t// cancelled the request, do not modify the exception\n\t\t\t// so that clients can identify the exception correctly.\n\t\t\tif (this._api.isCancel(err)) {\n\t\t\t\tthrow err;\n\t\t\t}\n\t\t\tresponse = {\n\t\t\t\tdata: {},\n\t\t\t\terrors: [new GraphQLError(err.message, null, null, null, null, err)],\n\t\t\t};\n\t\t}\n\n\t\tconst { errors } = response;\n\n\t\tif (errors && errors.length) {\n\t\t\tthrow response;\n\t\t}\n\n\t\treturn response;\n\t}\n\n\t/**\n\t * Checks to see if an error thrown is from an api request cancellation\n\t * @param {any} error - Any error\n\t * @return {boolean} - A boolean indicating if the error was from an api request cancellation\n\t */\n\tisCancel(error) {\n\t\treturn this._api.isCancel(error);\n\t}\n\n\t/**\n\t * Cancels an inflight request. Only applicable for graphql queries and mutations\n\t * @param {any} request - request to cancel\n\t * @return {boolean} - A boolean indicating if the request was cancelled\n\t */\n\tcancel(request: Promise<any>, message?: string) {\n\t\treturn this._api.cancel(request, message);\n\t}\n\n\tprivate _graphqlSubscribe(\n\t\t{ query, variables, authMode: defaultAuthenticationType }: GraphQLOptions,\n\t\tadditionalHeaders = {}\n\t): Observable<any> {\n\t\tconst {\n\t\t\taws_appsync_region: region,\n\t\t\taws_appsync_graphqlEndpoint: appSyncGraphqlEndpoint,\n\t\t\taws_appsync_authenticationType,\n\t\t\taws_appsync_apiKey: apiKey,\n\t\t\tgraphql_headers = () => ({}),\n\t\t} = this._options;\n\t\tconst authenticationType =\n\t\t\tdefaultAuthenticationType || aws_appsync_authenticationType || 'AWS_IAM';\n\n\t\tif (PubSub && typeof PubSub.subscribe === 'function') {\n\t\t\treturn PubSub.subscribe('', {\n\t\t\t\tprovider: INTERNAL_AWS_APPSYNC_REALTIME_PUBSUB_PROVIDER,\n\t\t\t\tappSyncGraphqlEndpoint,\n\t\t\t\tauthenticationType,\n\t\t\t\tapiKey,\n\t\t\t\tquery: print(query),\n\t\t\t\tregion,\n\t\t\t\tvariables,\n\t\t\t\tgraphql_headers,\n\t\t\t\tadditionalHeaders,\n\t\t\t});\n\t\t} else {\n\t\t\tlogger.debug('No pubsub module applied for subscription');\n\t\t\tthrow new Error('No pubsub module applied for subscription');\n\t\t}\n\t}\n\n\t/**\n\t * @private\n\t */\n\t_ensureCredentials() {\n\t\treturn this.Credentials.get()\n\t\t\t.then(credentials => {\n\t\t\t\tif (!credentials) return false;\n\t\t\t\tconst cred = this.Credentials.shear(credentials);\n\t\t\t\tlogger.debug('set credentials for api', cred);\n\n\t\t\t\treturn true;\n\t\t\t})\n\t\t\t.catch(err => {\n\t\t\t\tlogger.warn('ensure credentials error', err);\n\t\t\t\treturn false;\n\t\t\t});\n\t}\n}\n\nexport const GraphQLAPI = new GraphQLAPIClass(null);\nAmplify.register(GraphQLAPI);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}