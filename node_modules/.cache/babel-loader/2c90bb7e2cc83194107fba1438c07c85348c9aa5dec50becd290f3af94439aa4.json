{"ast":null,"code":"import { EventStreamMarshaller as UniversalEventStreamMarshaller } from \"@aws-sdk/eventstream-serde-universal\";\nimport { iterableToReadableStream, readableStreamtoIterable } from \"./utils\";\nexport class EventStreamMarshaller {\n  constructor(_ref) {\n    let {\n      utf8Encoder,\n      utf8Decoder\n    } = _ref;\n    this.universalMarshaller = new UniversalEventStreamMarshaller({\n      utf8Decoder,\n      utf8Encoder\n    });\n  }\n  deserialize(body, deserializer) {\n    const bodyIterable = isReadableStream(body) ? readableStreamtoIterable(body) : body;\n    return this.universalMarshaller.deserialize(bodyIterable, deserializer);\n  }\n  serialize(input, serializer) {\n    const serialziedIterable = this.universalMarshaller.serialize(input, serializer);\n    return typeof ReadableStream === \"function\" ? iterableToReadableStream(serialziedIterable) : serialziedIterable;\n  }\n}\nconst isReadableStream = body => typeof ReadableStream === \"function\" && body instanceof ReadableStream;","map":{"version":3,"names":["EventStreamMarshaller","UniversalEventStreamMarshaller","iterableToReadableStream","readableStreamtoIterable","constructor","_ref","utf8Encoder","utf8Decoder","universalMarshaller","deserialize","body","deserializer","bodyIterable","isReadableStream","serialize","input","serializer","serialziedIterable","ReadableStream"],"sources":["/Users/ericli/Desktop/pill2/node_modules/@aws-sdk/client-s3/node_modules/@aws-sdk/eventstream-serde-browser/dist-es/EventStreamMarshaller.js"],"sourcesContent":["import { EventStreamMarshaller as UniversalEventStreamMarshaller } from \"@aws-sdk/eventstream-serde-universal\";\nimport { iterableToReadableStream, readableStreamtoIterable } from \"./utils\";\nexport class EventStreamMarshaller {\n    constructor({ utf8Encoder, utf8Decoder }) {\n        this.universalMarshaller = new UniversalEventStreamMarshaller({\n            utf8Decoder,\n            utf8Encoder,\n        });\n    }\n    deserialize(body, deserializer) {\n        const bodyIterable = isReadableStream(body) ? readableStreamtoIterable(body) : body;\n        return this.universalMarshaller.deserialize(bodyIterable, deserializer);\n    }\n    serialize(input, serializer) {\n        const serialziedIterable = this.universalMarshaller.serialize(input, serializer);\n        return typeof ReadableStream === \"function\" ? iterableToReadableStream(serialziedIterable) : serialziedIterable;\n    }\n}\nconst isReadableStream = (body) => typeof ReadableStream === \"function\" && body instanceof ReadableStream;\n"],"mappings":"AAAA,SAASA,qBAAqB,IAAIC,8BAA8B,QAAQ,sCAAsC;AAC9G,SAASC,wBAAwB,EAAEC,wBAAwB,QAAQ,SAAS;AAC5E,OAAO,MAAMH,qBAAqB,CAAC;EAC/BI,WAAWA,CAAAC,IAAA,EAA+B;IAAA,IAA9B;MAAEC,WAAW;MAAEC;IAAY,CAAC,GAAAF,IAAA;IACpC,IAAI,CAACG,mBAAmB,GAAG,IAAIP,8BAA8B,CAAC;MAC1DM,WAAW;MACXD;IACJ,CAAC,CAAC;EACN;EACAG,WAAWA,CAACC,IAAI,EAAEC,YAAY,EAAE;IAC5B,MAAMC,YAAY,GAAGC,gBAAgB,CAACH,IAAI,CAAC,GAAGP,wBAAwB,CAACO,IAAI,CAAC,GAAGA,IAAI;IACnF,OAAO,IAAI,CAACF,mBAAmB,CAACC,WAAW,CAACG,YAAY,EAAED,YAAY,CAAC;EAC3E;EACAG,SAASA,CAACC,KAAK,EAAEC,UAAU,EAAE;IACzB,MAAMC,kBAAkB,GAAG,IAAI,CAACT,mBAAmB,CAACM,SAAS,CAACC,KAAK,EAAEC,UAAU,CAAC;IAChF,OAAO,OAAOE,cAAc,KAAK,UAAU,GAAGhB,wBAAwB,CAACe,kBAAkB,CAAC,GAAGA,kBAAkB;EACnH;AACJ;AACA,MAAMJ,gBAAgB,GAAIH,IAAI,IAAK,OAAOQ,cAAc,KAAK,UAAU,IAAIR,IAAI,YAAYQ,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}