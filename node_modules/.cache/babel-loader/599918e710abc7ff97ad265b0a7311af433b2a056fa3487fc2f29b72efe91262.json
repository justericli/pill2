{"ast":null,"code":"import { __assign, __values } from \"tslib\";\nimport { cloneRequest } from \"./cloneRequest\";\n/**\n * @internal\n */\nexport function moveHeadersToQuery(request) {\n  var e_1, _a;\n  var _b = typeof request.clone === \"function\" ? request.clone() : cloneRequest(request),\n    headers = _b.headers,\n    _c = _b.query,\n    query = _c === void 0 ? {} : _c;\n  try {\n    for (var _d = __values(Object.keys(headers)), _e = _d.next(); !_e.done; _e = _d.next()) {\n      var name = _e.value;\n      var lname = name.toLowerCase();\n      if (lname.substr(0, 6) === \"x-amz-\") {\n        query[name] = headers[name];\n        delete headers[name];\n      }\n    }\n  } catch (e_1_1) {\n    e_1 = {\n      error: e_1_1\n    };\n  } finally {\n    try {\n      if (_e && !_e.done && (_a = _d.return)) _a.call(_d);\n    } finally {\n      if (e_1) throw e_1.error;\n    }\n  }\n  return __assign(__assign({}, request), {\n    headers: headers,\n    query: query\n  });\n}","map":{"version":3,"names":["cloneRequest","moveHeadersToQuery","request","_b","clone","headers","_c","query","_d","__values","Object","keys","_e","next","done","name","value","lname","toLowerCase","substr","__assign"],"sources":["../../src/moveHeadersToQuery.ts"],"sourcesContent":[null],"mappings":";AAEA,SAASA,YAAY,QAAQ,gBAAgB;AAE7C;;;AAGA,OAAM,SAAUC,kBAAkBA,CAACC,OAAoB;;EAC/C,IAAAC,EAAA,GACJ,OAAQD,OAAe,CAACE,KAAK,KAAK,UAAU,GAAIF,OAAe,CAACE,KAAK,EAAE,GAAGJ,YAAY,CAACE,OAAO,CAAC;IADzFG,OAAO,GAAAF,EAAA,CAAAE,OAAA;IAAEC,EAAA,GAAAH,EAAA,CAAAI,KAA+B;IAA/BA,KAAK,GAAAD,EAAA,cAAG,EAAuB,GAAAA,EACiD;;IACjG,KAAmB,IAAAE,EAAA,GAAAC,QAAA,CAAAC,MAAM,CAACC,IAAI,CAACN,OAAO,CAAC,GAAAO,EAAA,GAAAJ,EAAA,CAAAK,IAAA,KAAAD,EAAA,CAAAE,IAAA,EAAAF,EAAA,GAAAJ,EAAA,CAAAK,IAAA,IAAE;MAApC,IAAME,IAAI,GAAAH,EAAA,CAAAI,KAAA;MACb,IAAMC,KAAK,GAAGF,IAAI,CAACG,WAAW,EAAE;MAChC,IAAID,KAAK,CAACE,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,QAAQ,EAAE;QACnCZ,KAAK,CAACQ,IAAI,CAAC,GAAGV,OAAO,CAACU,IAAI,CAAC;QAC3B,OAAOV,OAAO,CAACU,IAAI,CAAC;;;;;;;;;;;;;;EAIxB,OAAAK,QAAA,CAAAA,QAAA,KACKlB,OAAO;IACVG,OAAO,EAAAA,OAAA;IACPE,KAAK,EAAAA;EAAA;AAET"},"metadata":{},"sourceType":"module","externalDependencies":[]}