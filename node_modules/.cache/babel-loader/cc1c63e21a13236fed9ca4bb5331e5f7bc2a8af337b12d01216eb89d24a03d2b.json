{"ast":null,"code":"var _jsxFileName = \"/Users/ericli/Desktop/pill2/src/components/User_Account.jsx\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from \"react\";\nimport { CognitoUser, AuthenticationDetails } from \"amazon-cognito-identity-js\";\nimport Pool from \"../User_Userpool.jsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AccountContext = /*#__PURE__*/createContext();\nconst User_Account = props => {\n  _s();\n  const {\n    children\n  } = props;\n  const [authenticated, setAuthenticated] = useState(false);\n  const [userName, setUserName] = useState(\"\");\n  useEffect(() => {\n    console.log(\"Authenticated: \", authenticated);\n  }, [authenticated]);\n  const getSession = async () => {\n    return await new Promise((resolve, reject) => {\n      const user = Pool.getCurrentUser();\n      if (user) {\n        user.getSession((err, session) => {\n          if (err) {\n            reject();\n          } else {\n            // Set the username state here\n            setUserName(session.getIdToken().payload[\"cognito:username\"]);\n            resolve(session);\n          }\n        });\n      } else {\n        reject();\n      }\n    });\n  };\n  const authenticate = async (Username, Password) => {\n    return await new Promise((resolve, reject) => {\n      const user = new CognitoUser({\n        Username,\n        Pool: Pool\n      });\n      const authDetails = new AuthenticationDetails({\n        Username,\n        Password\n      });\n      user.authenticateUser(authDetails, {\n        onSuccess: data => {\n          console.log(\"onSuccess: \", data);\n          resolve(data);\n        },\n        onFailure: err => {\n          console.error(\"onFailure: \", err);\n          reject(err);\n        },\n        newPasswordRequired: data => {\n          console.log(\"newPasswordRequired: \", data);\n          resolve(data);\n        }\n      });\n    });\n  };\n  const logout = () => {\n    const user = Pool.getCurrentUser();\n    if (user) {\n      user.signOut();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(AccountContext.Provider, {\n    value: {\n      authenticate,\n      getSession,\n      logout,\n      authenticated,\n      setAuthenticated,\n      userName // Provide the username through context\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n_s(User_Account, \"jbZUPwt/oFnQDMYcNlmYNmisAA8=\");\n_c = User_Account;\nexport default User_Account;\nexport { AccountContext };\nvar _c;\n$RefreshReg$(_c, \"User_Account\");","map":{"version":3,"names":["React","createContext","useState","useEffect","CognitoUser","AuthenticationDetails","Pool","jsxDEV","_jsxDEV","AccountContext","User_Account","props","_s","children","authenticated","setAuthenticated","userName","setUserName","console","log","getSession","Promise","resolve","reject","user","getCurrentUser","err","session","getIdToken","payload","authenticate","Username","Password","authDetails","authenticateUser","onSuccess","data","onFailure","error","newPasswordRequired","logout","signOut","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ericli/Desktop/pill2/src/components/User_Account.jsx"],"sourcesContent":["import React, { createContext, useState, useEffect } from \"react\";\nimport { CognitoUser, AuthenticationDetails } from \"amazon-cognito-identity-js\";\nimport Pool from \"../User_Userpool.jsx\";\n\nconst AccountContext = createContext();\n\nconst User_Account = (props) => {\n  const { children } = props;\n  const [authenticated, setAuthenticated] = useState(false);\n  const [userName, setUserName] = useState(\"\");\n\n  useEffect(() => {\n    console.log(\"Authenticated: \", authenticated);\n  }, [authenticated]);\n\n  const getSession = async () => {\n    return await new Promise((resolve, reject) => {\n      const user = Pool.getCurrentUser();\n      if (user) {\n        user.getSession((err, session) => {\n          if (err) {\n            reject();\n          } else {\n            // Set the username state here\n            setUserName(session.getIdToken().payload[\"cognito:username\"]);\n            resolve(session);\n          }\n        });\n      } else {\n        reject();\n      }\n    });\n  };\n\n  const authenticate = async (Username, Password) => {\n    return await new Promise((resolve, reject) => {\n      const user = new CognitoUser({\n        Username,\n        Pool: Pool,\n      });\n\n      const authDetails = new AuthenticationDetails({\n        Username,\n        Password,\n      });\n\n      user.authenticateUser(authDetails, {\n        onSuccess: (data) => {\n          console.log(\"onSuccess: \", data);\n          resolve(data);\n        },\n        onFailure: (err) => {\n          console.error(\"onFailure: \", err);\n          reject(err);\n        },\n        newPasswordRequired: (data) => {\n          console.log(\"newPasswordRequired: \", data);\n          resolve(data);\n        },\n      });\n    });\n  };\n\n  const logout = () => {\n    const user = Pool.getCurrentUser();\n    if (user) {\n      user.signOut();\n    }\n  };\n\n  return (\n    <AccountContext.Provider\n      value={{\n        authenticate,\n        getSession,\n        logout,\n        authenticated,\n        setAuthenticated,\n        userName, // Provide the username through context\n      }}\n    >\n      {children}\n    </AccountContext.Provider>\n  );\n};\n\nexport default User_Account;\nexport { AccountContext };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}