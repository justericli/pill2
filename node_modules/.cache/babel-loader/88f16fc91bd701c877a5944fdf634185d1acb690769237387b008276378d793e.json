{"ast":null,"code":"import _regeneratorRuntime from \"/Users/ericli/Desktop/pill2/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _defineProperty from \"/Users/ericli/Desktop/pill2/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _awaitAsyncGenerator from \"/Users/ericli/Desktop/pill2/node_modules/@babel/runtime/helpers/esm/awaitAsyncGenerator.js\";\nimport _wrapAsyncGenerator from \"/Users/ericli/Desktop/pill2/node_modules/@babel/runtime/helpers/esm/wrapAsyncGenerator.js\";\nimport _asyncIterator from \"/Users/ericli/Desktop/pill2/node_modules/@babel/runtime/helpers/esm/asyncIterator.js\";\nexport function getUnmarshalledStream(source, options) {\n  return _defineProperty({}, Symbol.asyncIterator, _wrapAsyncGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n    var _iteratorAbruptCompletion, _didIteratorError, _iteratorError, _iterator, _step, chunk, message, messageType, unmodeledError, code, exception, deserializedException, error, event, deserialized;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          _iteratorAbruptCompletion = false;\n          _didIteratorError = false;\n          _context.prev = 2;\n          _iterator = _asyncIterator(source);\n        case 4:\n          _context.next = 6;\n          return _awaitAsyncGenerator(_iterator.next());\n        case 6:\n          if (!(_iteratorAbruptCompletion = !(_step = _context.sent).done)) {\n            _context.next = 44;\n            break;\n          }\n          chunk = _step.value;\n          message = options.eventStreamCodec.decode(chunk);\n          messageType = message.headers[\":message-type\"].value;\n          if (!(messageType === \"error\")) {\n            _context.next = 16;\n            break;\n          }\n          unmodeledError = new Error(message.headers[\":error-message\"].value || \"UnknownError\");\n          unmodeledError.name = message.headers[\":error-code\"].value;\n          throw unmodeledError;\n        case 16:\n          if (!(messageType === \"exception\")) {\n            _context.next = 29;\n            break;\n          }\n          code = message.headers[\":exception-type\"].value;\n          exception = _defineProperty({}, code, message);\n          _context.next = 21;\n          return _awaitAsyncGenerator(options.deserializer(exception));\n        case 21:\n          deserializedException = _context.sent;\n          if (!deserializedException.$unknown) {\n            _context.next = 26;\n            break;\n          }\n          error = new Error(options.toUtf8(message.body));\n          error.name = code;\n          throw error;\n        case 26:\n          throw deserializedException[code];\n        case 29:\n          if (!(messageType === \"event\")) {\n            _context.next = 40;\n            break;\n          }\n          event = _defineProperty({}, message.headers[\":event-type\"].value, message);\n          _context.next = 33;\n          return _awaitAsyncGenerator(options.deserializer(event));\n        case 33:\n          deserialized = _context.sent;\n          if (!deserialized.$unknown) {\n            _context.next = 36;\n            break;\n          }\n          return _context.abrupt(\"continue\", 41);\n        case 36:\n          _context.next = 38;\n          return deserialized;\n        case 38:\n          _context.next = 41;\n          break;\n        case 40:\n          throw Error(\"Unrecognizable event type: \".concat(message.headers[\":event-type\"].value));\n        case 41:\n          _iteratorAbruptCompletion = false;\n          _context.next = 4;\n          break;\n        case 44:\n          _context.next = 50;\n          break;\n        case 46:\n          _context.prev = 46;\n          _context.t0 = _context[\"catch\"](2);\n          _didIteratorError = true;\n          _iteratorError = _context.t0;\n        case 50:\n          _context.prev = 50;\n          _context.prev = 51;\n          if (!(_iteratorAbruptCompletion && _iterator.return != null)) {\n            _context.next = 55;\n            break;\n          }\n          _context.next = 55;\n          return _awaitAsyncGenerator(_iterator.return());\n        case 55:\n          _context.prev = 55;\n          if (!_didIteratorError) {\n            _context.next = 58;\n            break;\n          }\n          throw _iteratorError;\n        case 58:\n          return _context.finish(55);\n        case 59:\n          return _context.finish(50);\n        case 60:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee, null, [[2, 46, 50, 60], [51,, 55, 59]]);\n  })));\n}","map":{"version":3,"names":["getUnmarshalledStream","source","options","_defineProperty","Symbol","asyncIterator","_wrapAsyncGenerator","_regeneratorRuntime","mark","_callee","_iteratorAbruptCompletion","_didIteratorError","_iteratorError","_iterator","_step","chunk","message","messageType","unmodeledError","code","exception","deserializedException","error","event","deserialized","wrap","_callee$","_context","prev","next","_asyncIterator","_awaitAsyncGenerator","sent","done","value","eventStreamCodec","decode","headers","Error","name","deserializer","$unknown","toUtf8","body","abrupt","concat","t0","return","finish","stop"],"sources":["/Users/ericli/Desktop/pill2/node_modules/@aws-sdk/client-s3/node_modules/@aws-sdk/eventstream-serde-universal/dist-es/getUnmarshalledStream.js"],"sourcesContent":["export function getUnmarshalledStream(source, options) {\n    return {\n        [Symbol.asyncIterator]: async function* () {\n            for await (const chunk of source) {\n                const message = options.eventStreamCodec.decode(chunk);\n                const { value: messageType } = message.headers[\":message-type\"];\n                if (messageType === \"error\") {\n                    const unmodeledError = new Error(message.headers[\":error-message\"].value || \"UnknownError\");\n                    unmodeledError.name = message.headers[\":error-code\"].value;\n                    throw unmodeledError;\n                }\n                else if (messageType === \"exception\") {\n                    const code = message.headers[\":exception-type\"].value;\n                    const exception = { [code]: message };\n                    const deserializedException = await options.deserializer(exception);\n                    if (deserializedException.$unknown) {\n                        const error = new Error(options.toUtf8(message.body));\n                        error.name = code;\n                        throw error;\n                    }\n                    throw deserializedException[code];\n                }\n                else if (messageType === \"event\") {\n                    const event = {\n                        [message.headers[\":event-type\"].value]: message,\n                    };\n                    const deserialized = await options.deserializer(event);\n                    if (deserialized.$unknown)\n                        continue;\n                    yield deserialized;\n                }\n                else {\n                    throw Error(`Unrecognizable event type: ${message.headers[\":event-type\"].value}`);\n                }\n            }\n        },\n    };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}