import{__rest as e}from"tslib";import*as t from"react";import a from"classnames";import{useStepper as r}from"./useStepper.mjs";import"../Field/FieldClearButton.mjs";import{FieldDescription as i}from"../Field/FieldDescription.mjs";import{FieldErrorMessage as s}from"../Field/FieldErrorMessage.mjs";import"../Field/Field.mjs";import{FieldGroup as l}from"../FieldGroup/FieldGroup.mjs";import"../FieldGroupIcon/FieldGroupIcon.mjs";import{FieldGroupIconButton as o}from"../FieldGroupIcon/FieldGroupIconButton.mjs";import{Flex as n}from"../Flex/Flex.mjs";import{IconAdd as d}from"../Icon/icons/IconAdd.mjs";import{ComponentClassNames as m,ComponentText as p}from"../shared/constants.mjs";import"../View/View.mjs";import{IconRemove as c}from"../Icon/icons/IconRemove.mjs";import{Input as u}from"../Input/Input.mjs";import{Label as b}from"../Label/Label.mjs";import{classNameModifier as F,classNameModifierByFlag as f}from"@aws-amplify/ui";import{splitPrimitiveProps as j}from"../utils/splitPrimitiveProps.mjs";import{useStableId as I}from"../utils/useStableId.mjs";const h="decrease-icon",S="increase-icon",v=t.forwardRef(((h,S)=>{const{className:v,defaultValue:B,descriptiveText:E,errorMessage:g,hasError:D=!1,id:y,inputStyles:C,isDisabled:L,isReadOnly:O,isRequired:R,increaseButtonLabel:N=p.StepperField.increaseButtonLabel,decreaseButtonLabel:V=p.StepperField.decreaseButtonLabel,label:x,labelHidden:z=!1,onStepChange:G,size:w,testId:H,value:M,variation:$}=h,q=e(h,["className","defaultValue","descriptiveText","errorMessage","hasError","id","inputStyles","isDisabled","isReadOnly","isRequired","increaseButtonLabel","decreaseButtonLabel","label","labelHidden","onStepChange","size","testId","value","variation"]),P=I(y),T=I(),k=E?T:void 0,{styleProps:W,rest:A}=j(q),{step:J,value:K,inputValue:Q,handleDecrease:U,handleIncrease:X,handleOnBlur:Y,handleOnChange:Z,handleOnWheel:_,setInputValue:ee,shouldDisableDecreaseButton:te,shouldDisableIncreaseButton:ae}=r(Object.assign(Object.assign({},h),{defaultValue:B,onStepChange:G}));return t.useEffect((()=>{void 0!==M&&ee(M)}),[M,ee]),t.createElement(n,Object.assign({className:a(m.Field,F(m.Field,w),m.StepperField,v),"data-size":w,"data-variation":$,testId:H},W),t.createElement(b,{htmlFor:P,visuallyHidden:z},x),t.createElement(i,{id:T,labelHidden:z,descriptiveText:E}),t.createElement(l,{outerStartComponent:t.createElement(o,{"aria-controls":P,ariaLabel:`${V} ${K-J}`,className:a(m.StepperFieldButtonDecrease,F(m.StepperFieldButtonDecrease,$),f(m.StepperFieldButtonDecrease,"disabled",te)),"data-invalid":D,isDisabled:te,onClick:U,size:w},t.createElement(c,{"data-testid":"decrease-icon"})),outerEndComponent:t.createElement(o,{"aria-controls":P,ariaLabel:`${N} ${K+J}`,className:a(m.StepperFieldButtonIncrease,F(m.StepperFieldButtonIncrease,$),f(m.StepperFieldButtonIncrease,"disabled",ae)),"data-invalid":D,isDisabled:ae,onClick:X,size:w},t.createElement(d,{"data-testid":"increase-icon"}))},t.createElement(u,Object.assign({"aria-describedby":k,className:m.StepperFieldInput,hasError:D,id:P,isDisabled:L,isReadOnly:O,isRequired:R,onBlur:Y,onChange:Z,onWheel:_,ref:S,size:w,variation:$,type:"number",value:Q},C,A))),t.createElement(s,{hasError:D,errorMessage:g}))}));v.displayName="StepperField";export{h as DECREASE_ICON,S as INCREASE_ICON,v as StepperField};
